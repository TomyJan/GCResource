[
  //ServerUploadTool Save to [/root/data/json/ability/Temp]
  /////////////////////////////////////////////////////////
  //
  //怪物脱战回血
  //
  /////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "AI_LeaveCombat_Reset",
      "isDynamicAbility": true,
      "onAbilityStart": [
        {
          "$type": "ApplyModifier",
          "modifierName": "AI_Reset_HP",
          "target": "Target"
        }
      ],
      "modifiers": {
        "AI_Reset_HP": {
          "duration": 1.0,
          "onAdded": [
            {
              "$type": "HealHP",
              "target": "Target",
              "amountByTargetMaxHPRatio": 1.0,
              "muteHealEffect": true
            }
          ]
        }
      }
    }
  },
  /////////////////////////////////////////////////////////
  //
  //派蒙苹果
  //
  /////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Gadget_Level_Paimon_Apple",
      "isDynamicAbility": true,
      "onAbilityStart": [
        {
          "$type": "SetPaimonLookAtAvatar",
          "from": "Task",
          "lookat": true,
          "minTime": 2.2,
          "maxTime": 2.2
        },
        {
          "$type": "PaimonAction",
          "from": "Task",
          "actionName": "Hope"
        },
        {
          "$type": "SetPaimonTempOffset",
          "from": "Task",
          "time": 3,
          "offSetPos": {
            "x": 0.25,
            "y": 1.15,
            "z": 3.05
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Gadget_Level_Paimon_Stamina",
      "isDynamicAbility": true,
      "onAbilityStart": [
        {
          "$type": "SetPaimonLookAtCamera",
          "from": "Task",
          "lookat": true,
          "minTime": 2.5,
          "maxTime": 2.5
        },
        {
          "$type": "PaimonAction",
          "from": "Task",
          "actionName": "Guide"
        }
      ]
    }
  },
  /////////////////////////////////////////////////////////
  //
  //潜行技能
  //
  /////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Level_Apply_Switch_SneakBtn",
      "isDynamicAbility": true,
      "onAbilityStart": [
        {
          "$type": "ApplyModifier",
          "modifierName": "UNIQUE_WatchingCurAvatarModifier",
          "target": "Team"
        }
      ],
      "modifiers": {
        "UNIQUE_WatchingCurAvatarModifier": {
          "isUnique": true,
          "modifierMixins": [
            {
              "$type": "CurLocalAvatarMixin",
              "modifierName": "UNIQUE_SwtichBtnModifier"
            }
          ]
        },
        "UNIQUE_SwtichBtnModifier": {
          "isUnique": true,
          "onAdded": [
            {
              "$type": "AddAvatarSkillInfo",
              "skillID": 10035
            },
            {
              "$type": "ApplyModifier",
              "modifierName": "SwithBtnModifier",
              "target": "Self"
            }
          ],
          "onRemoved": [
            {
              "$type": "RemoveModifier",
              "modifierName": "SwithBtnModifier",
              "target": "Self"
            },
            {
              "$type": "RemoveAvatarSkillInfo",
              "skillID": 10035
            }
          ]
        },
        "SwithBtnModifier": {
          "modifierMixins": [
            {
              "$type": "SwitchSkillIDMixin",
              "priority": "Quest",
              "skillIndex": 1,
              "skillID": 10035
            }
          ]
        }
      }
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Level_Remove_Switch_SneakBtn",
      "isDynamicAbility": true,
      "onAbilityStart": [
        {
          "$type": "RemoveUniqueModifier",
          "target": "Team",
          "modifierName": "UNIQUE_WatchingCurAvatarModifier"
        }
      ]
    }
  },
  /////////////////////////////////////////////////////////
  //
  //状态机测试技能
  //
  /////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Player_RunBomber",
      "isDynamicAbility": true,
      "onAbilityStart": [
        {
          "$type": "ApplyModifier",
          "modifierName": "UNIQUE_Avatar_Start_RunBomber",
          "target": "CurTeamAvatars"
        }
      ],
      "modifiers": {
        "UNIQUE_Avatar_Start_RunBomber": {
          "isUnique": true,
          "modifierMixins": [
            {
              "$type": "AttachToAnimatorStateIDMixin",
              "stateIDs": ["Run"],
              "modifierName": "Avatar_Start_RunBomber",
              "target": "Self"
            }
          ]
        },
        "Avatar_Start_RunBomber": {
          "onAdded": [
            {
              "$type": "TriggerBullet",
              "bulletID": 40000174,
              "born": {
                "$type": "ConfigBornByTarget",
                "offset": {
                  "x": 0.0,
                  "y": 0.5,
                  "z": 0.1
                }
              }
            }
          ]
        }
      }
    }
  },

  /////////////////////////////////////////////////////////
  //
  //飞行白盒中替换技能
  //
  /////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Test_FlyingBomber",
      "isDynamicAbility": true,
      "onAbilityStart": [
        {
          "$type": "ApplyModifier",
          "modifierName": "UNIQUE_WatchingCurAvatarModifier_Flying",
          "target": "Team"
        }
      ],
      "modifiers": {
        // "UNIQUE_Avatar_CameraCtrl" :
        // {
        // 	"isUnique" : true,
        // 	"modifierMixins":
        // 	[
        // 		{
        // 			"$type": "AttachToStateIDMixin",
        // 			"stateIDs": ["Fly"],
        // 			"modifierName" : "Avatar_Flying_CameraCtrl",
        // 		},
        // 	],
        // },
        // "Avatar_Flying_CameraCtrl":
        // {
        // 	"onAdded":
        // 	[
        // 		{
        // 			"$type": "AvatarEnterCameraShot",
        // 			"cameraMoveCfgPath": "Camera_Avatar_FlyingBomber",
        // 		},
        // 		{
        // 			"$type":"AttachEffect",
        // 			"effectPattern":"Eff_AmborBomb_Alert",
        // 		},
        // 	],
        // 	"onRemoved":
        // 	[
        // 		{
        // 			"doOffStage": true,
        // 			"$type": "AvatarExitCameraShot",
        // 		},
        // 	],
        // },
        "Avatar_Player_CamCtrl_Modifier": {
          "onAdded": [
            {
              "$type": "TriggerAbility",
              "abilityName": "Avatar_Player_CamCtrl",
              "doOffStage": true
            }
          ]
        },
        "UNIQUE_WatchingCurAvatarModifier_Flying": {
          "isUnique": true,
          "modifierMixins": [
            {
              "$type": "CurLocalAvatarMixin",
              "modifierName": "UNIQUE_SwtichBtnModifier_Flying"
            },
            {
              "$type": "CurLocalAvatarMixin",
              "modifierName": "Avatar_Player_CamCtrl_Modifier"
            },
            {
              "$type": "CurLocalAvatarMixin",
              "modifierName": "Avatar_Player_SetFlyState_Modifier"
            }
          ]
        },
        "UNIQUE_SwtichBtnModifier_Flying": {
          "isUnique": true,
          "onAdded": [
            {
              "$type": "AddAvatarSkillInfo",
              "skillID": 10037,
              "doOffStage": true
            },
            {
              "$type": "ApplyModifier",
              "modifierName": "SwithBtnModifier_Flying",
              "target": "Self",
              "doOffStage": true
            }
          ],
          "onRemoved": [
            {
              "$type": "RemoveModifier",
              "modifierName": "SwithBtnModifier_Flying",
              "target": "Self"
            },
            {
              "$type": "RemoveAvatarSkillInfo",
              "skillID": 10037
            }
          ]
        },
        "SwithBtnModifier_Flying": {
          "modifierMixins": [
            //						{
            //							"$type": "AvatarLevelSkillMixin",
            //							"skillID": 10037,
            //							"skillIndex": 1,
            //						},
            {
              "$type": "AvatarChangeSkillMixin",
              "priority": "Quest",
              "index": 1,
              "flySkillID": 10037,
              "jumpSkillID": 10037
            }
          ]
        },

        "Avatar_Player_SetFlyState_Modifier": {
          "properties": {
            "Actor_FlyBackSpeedMaxRatio": 1,
            "Actor_FlyHorizontalSpeedMaxRatio": 3,
            "Actor_FlyRotationAngularVelocityRatio": 1,
            "Actor_FlyDownSpeedRatio": -0.61,
            "Actor_FlyForwardSpeedMaxRatio": 0.33
          }
        }
        // "Avatar_Start_FlyingBomber" :
        // {
        // 	"onAdded" :
        // 	[
        // 		{
        // 			"$type": "ApplyModifier",
        // 			"modifierName": "UNIQUE_Avatar_Start_FlyingBomber",
        // 			"target": "Self",
        // 		},
        // 	],
        // },

        // "UNIQUE_Avatar_Start_FlyingBomber" :
        // {
        // 	"isUnique" : true,
        // 	"modifierMixins":
        // 	[
        // 		{
        // 			"$type": "ButtonHoldChargeMixin",
        // 			"skillID": 10037,
        // 			"chargeTime": 0.1,
        // 			"OnBeginUncharged":
        // 			[
        // 				{
        // 					"$type": "TriggerBullet",
        // 					"bulletID": 40000174,
        // 					"born":
        // 					{
        // 						"$type": "ConfigBornByTarget",
        // 						"offset" :
        // 						{
        // 							"x": 0.0,
        // 							"y": 0.5,
        // 							"z": 0.1,
        // 						},
        // 					},
        // 				},
        // 			],
        // 		}
        // 	],
        // },
      }
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Level_Remove_Avatar_Test_FlyingBomber",
      "isDynamicAbility": true,
      "onAbilityStart": [
        {
          "$type": "RemoveUniqueModifier",
          "target": "Team",
          "modifierName": "UNIQUE_WatchingCurAvatarModifier_Flying"
        }
      ]
    }
  },
  /////////////////////////////////////////////////////////
  //
  //找猫技能
  //
  /////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Level_Apply_Switch_FindCatBtn",
      "isDynamicAbility": true,
      "onAbilityStart": [
        {
          "$type": "ApplyModifier",
          "modifierName": "UNIQUE_WatchingCurAvatarModifier_FindCat",
          "target": "Team"
        }
      ],
      "modifiers": {
        "UNIQUE_WatchingCurAvatarModifier_FindCat": {
          "isUnique": true,
          "modifierMixins": [
            {
              "$type": "CurLocalAvatarMixin",
              "modifierName": "UNIQUE_SwtichBtnModifier_FindCat"
            }
          ]
        },
        "UNIQUE_SwtichBtnModifier_FindCat": {
          "isUnique": true,
          "onAdded": [
            {
              "$type": "AddAvatarSkillInfo",
              "skillID": 10384
            },
            {
              "$type": "ApplyModifier",
              "modifierName": "SwithBtnModifier",
              "target": "Self"
            }
          ],
          "onRemoved": [
            {
              "$type": "RemoveModifier",
              "modifierName": "SwithBtnModifier",
              "target": "Self"
            },
            {
              "$type": "RemoveAvatarSkillInfo",
              "skillID": 10384
            }
          ]
        },
        "SwithBtnModifier": {
          "modifierMixins": [
            {
              "$type": "SwitchSkillIDMixin",
              "priority": "Quest",
              "skillIndex": 1,
              "skillID": 10384
            }
          ]
        }
      }
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Level_Remove_Switch_FindCatBtn",
      "isDynamicAbility": true,
      "onAbilityStart": [
        {
          "$type": "RemoveUniqueModifier",
          "target": "Team",
          "modifierName": "UNIQUE_WatchingCurAvatarModifier_FindCat"
        }
      ]
    }
  },
  /////////////////////////////////////////////////////////
  //
  //仙人buff
  //
  /////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "LevelBuff_ReviveElemEnergyMinusCD",
      "isDynamicAbility": true,
      "abilityMixins": [],
      "onAdded": [],
      "onAbilityStart": [
        {
          "$type": "AttachModifier",
          "doOffStage": true,
          "modifierName": "UNIQUE_LevelBuff_ReviveElemEnergy_Check",
          "target": "Team"
        } //暂时写在onAbilityStart中，不确定实现机制，如果是希望加上ability立即生效移到onAdd下面就好
      ],
      "modifiers": {
        "UNIQUE_LevelBuff_ReviveElemEnergy_Check": {
          "duration": 120, //buff持续x秒
          "isUnique": true,
          "stacking": "Unique",
          "modifierMixins": [
            {
              "$type": "CurLocalAvatarMixin",
              "modifierName": "UNIQUE_LevelBuff_ReviveElemEnergy"
            }
          ]
        },
        "UNIQUE_LevelBuff_ReviveElemEnergy": {
          "duration": 120, //buff持续x秒
          "isUnique": true,
          "stacking": "Unique",
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_MQ1002_XueyueBuff"
            }
          ],
          "onRemoved": [],
          "modifierMixins": [
            {
              "$type": "ReviveElemEnergyMixin",
              "type": "Both",
              "period": 1, //每x秒回复一次能量
              "baseEnergy": 10 //每次回y点能量
            }
          ],
          "properties": {
            "Actor_SkillCDMinusRatio": 0.4 //减CD 0-1区间，0.8表示80%冷却缩减（10秒技能变2秒）
          }
        }
      }
    }
  },

  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "LevelBuff_Remove_ReviveElemEnergyMinusCD",
      "isDynamicAbility": true,
      "onAbilityStart": [
        {
          "$type": "RemoveUniqueModifier",
          "target": "Team",
          "modifierName": "UNIQUE_LevelBuff_ReviveElemEnergy_Check"
        }
      ]
    }
  }, //LevelBuff_ReviveElemEnergyMinusCD(蔡文皓需求 减CD外加角色回能量)
  //
  /////////////////////////////////////////////////////////
  //坠落伤害减免
  //
  /////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_FallingDamageImmune",
      "isDynamicAbility": true,
      "onAbilityStart": [
        {
          "$type": "ApplyModifier",
          "modifierName": "UNIQUE_Avatar_FallingDamage",
          "target": "CurTeamAvatars"
        }
      ],
      "modifiers": {
        "UNIQUE_Avatar_FallingDamage": {
          "isUnique": true,
          "properties": {
            "Actor_FallingDamageRatio": -1
          }
        }
      }
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Level_Remove_FallingDamageImmune",
      "isDynamicAbility": true,
      "onAbilityStart": [
        {
          "$type": "RemoveUniqueModifier",
          "target": "CurTeamAvatars",
          "modifierName": "UNIQUE_Avatar_FallingDamage"
        }
      ]
    }
  },
  /////////////////////////////////////////////////////////
  //
  //体力消耗减少ability
  //
  /////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Player_StaminaReduced",
      "isDynamicAbility": true,
      "onAbilityStart": [
        {
          "$type": "ApplyModifier",
          "modifierName": "UNIQUE_StaminaReduced_Team",
          "target": "Team"
        }
      ],
      "modifiers": {
        "UNIQUE_StaminaReduced_Team": {
          "isUnique": true,
          "modifierMixins": [
            {
              "$type": "CurLocalAvatarMixin",
              "modifierName": "UNIQUE_Avatar_StaminaReduced"
            }
          ]
        },
        "UNIQUE_Avatar_StaminaReduced": {
          "isUnique": true,
          "modifierMixins": [
            {
              "$type": "AttachToStateIDMixin",
              "stateIDs": ["Fly"],
              "modifierName": "Avatar_Flying_StaminaReduced",
              "target": "Self"
            },
            {
              "$type": "AttachToAnimatorStateIDMixin",
              "stateIDs": ["Run"],
              "modifierName": "Avatar_Flying_StaminaReduced",
              "target": "Self"
            }
          ]
        },
        "Avatar_Flying_StaminaReduced": {
          "properties": {
            "Actor_MaxStaminaDelta": 100,
            "Actor_CostStaminaRatio": -999,
            "Actor_EndureDelta": 0
          },
          "onAdded": [
            {
              "$type": "AttachAbilityStateResistance",
              "resistanceListID": 11002
            },
            {
              "$type": "SetAvatarHitBuckets",
              "overrideAvatarHitBucketSetting": {
                "rangedBucketCount": 4
              }
            }
          ]
        }
      }
    }
  },

  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Level_Remove_Avatar_Player_StaminaReduced",
      "isDynamicAbility": true,
      "onAbilityStart": [
        {
          "$type": "RemoveUniqueModifier",
          "target": "Team",
          "modifierName": "UNIQUE_Avatar_StaminaReduced"
        }
      ]
    }
  },

  /////////////////////////////////////////////////////////
  //
  //感电效果魔改白盒
  //
  /////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "SceneAbility_Electric_Alter",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "AttachModifier",
          "modifierName": "Electric_Alter",
          "target": "Self"
        }
      ],
      "modifiers": {
        "Electric_Alter": {
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_IS_ELECTRIC_ALTER",
              "value": 1,
              "target": "Caster",
              "useLimitRange": true,
              "maxValue": 1,
              "minValue": 0
            }
          ],
          "onRemoved": [
            {
              "$type": "AddGlobalValue",
              "key": "_IS_ELECTRIC_ALTER",
              "value": -1,
              "target": "Caster",
              "useLimitRange": true,
              "maxValue": 0,
              "minValue": 0
            }
          ]
        }
      }
    }
  },

  /////////////////////////////////////////////////////////
  //
  //火扩散效果魔改白盒
  //
  /////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "SceneAbility_Swirl_Fire_Alter",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "AttachModifier",
          "modifierName": "Swirl_Fire_Alter",
          "target": "Self"
        }
      ],
      "modifiers": {
        "Swirl_Fire_Alter": {
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_IS_SWRIL_FIRE_ALTER",
              "value": 1,
              "target": "Caster",
              "useLimitRange": true,
              "maxValue": 1,
              "minValue": 0
            }
          ],
          "onRemoved": [
            {
              "$type": "AddGlobalValue",
              "key": "_IS_SWRIL_FIRE_ALTER",
              "value": -1,
              "target": "Caster",
              "useLimitRange": true,
              "maxValue": 0,
              "minValue": 0
            }
          ]
        }
      }
    }
  },

  /////////////////////////////////////////////////////////
  //
  //雷扩散效果魔改白盒
  //
  /////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "SceneAbility_Swirl_Electric_Alter",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "AttachModifier",
          "modifierName": "Swirl_Electric",
          "target": "Self"
        }
      ],
      "modifiers": {
        "Swirl_Electric": {
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_IS_SWRIL_ELECTRIC_ALTER",
              "value": 1,
              "target": "Caster",
              "useLimitRange": true,
              "maxValue": 1,
              "minValue": 0
            }
          ],
          "onRemoved": [
            {
              "$type": "AddGlobalValue",
              "key": "_IS_SWRIL_ELECTRIC_ALTER",
              "value": -1,
              "target": "Caster",
              "useLimitRange": true,
              "maxValue": 0,
              "minValue": 0
            }
          ]
        }
      }
    }
  },

  /////////////////////////////////////////////////////////
  //
  //水扩散效果魔改白盒
  //
  /////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "SceneAbility_Swirl_Water_Alter",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "AttachModifier",
          "modifierName": "Swirl_Water",
          "target": "Self"
        }
      ],
      "modifiers": {
        "Swirl_Water": {
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_IS_SWRIL_WATER_ALTER",
              "value": 1,
              "target": "Caster",
              "useLimitRange": true,
              "maxValue": 1,
              "minValue": 0
            }
          ],
          "onRemoved": [
            {
              "$type": "AddGlobalValue",
              "key": "_IS_SWRIL_WATER_ALTER",
              "value": -1,
              "target": "Caster",
              "useLimitRange": true,
              "maxValue": 0,
              "minValue": 0
            }
          ]
        }
      }
    }
  },

  /////////////////////////////////////////////////////////
  //
  //冰扩散效果魔改白盒
  //
  /////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "SceneAbility_Swirl_Ice_Alter",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "AttachModifier",
          "modifierName": "Swirl_Ice",
          "target": "Self"
        }
      ],
      "modifiers": {
        "Swirl_Ice": {
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_IS_SWRIL_ICE_ALTER",
              "value": 1,
              "target": "Caster",
              "useLimitRange": true,
              "maxValue": 1,
              "minValue": 0
            }
          ],
          "onRemoved": [
            {
              "$type": "AddGlobalValue",
              "key": "_IS_SWRIL_ICE_ALTER",
              "value": -1,
              "target": "Caster",
              "useLimitRange": true,
              "maxValue": 0,
              "minValue": 0
            }
          ]
        }
      }
    }
  },

  /////////////////////////////////////////////////////////
  //
  //超载效果魔改白盒
  //
  /////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "SceneAbility_Explode_Alter",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "AttachModifier",
          "modifierName": "Explode_Alter",
          "target": "Self"
        }
      ],
      "modifiers": {
        "Explode_Alter": {
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_IS_EXPLODE_ALTER",
              "value": 1,
              "target": "Caster",
              "useLimitRange": true,
              "maxValue": 1,
              "minValue": 0
            }
          ],
          "onRemoved": [
            {
              "$type": "AddGlobalValue",
              "key": "_IS_EXPLODE_ALTER",
              "value": -1,
              "target": "Caster",
              "useLimitRange": true,
              "maxValue": 0,
              "minValue": 0
            }
          ]
        }
      }
    }
  },

  /////////////////////////////////////////////////////////
  //
  //超导效果魔改白盒
  //
  /////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "SceneAbility_Superconductor_Alter",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "AttachModifier",
          "modifierName": "Superconductor_Alter",
          "target": "Self"
        }
      ],
      "modifiers": {
        "Superconductor_Alter": {
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_IS_SUPERCONDUCTOR_ALTER",
              "value": 1,
              "target": "Caster",
              "useLimitRange": true,
              "maxValue": 1,
              "minValue": 0
            }
          ],
          "onRemoved": [
            {
              "$type": "AddGlobalValue",
              "key": "_IS_SUPERCONDUCTOR_ALTER",
              "value": -1,
              "target": "Caster",
              "useLimitRange": true,
              "maxValue": 0,
              "minValue": 0
            }
          ]
        }
      }
    }
  },

  /////////////////////////////////////////////////////////
  //
  //燃烧效果魔改白盒
  //
  /////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "SceneAbility_Burning_Alter",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "AttachModifier",
          "modifierName": "Burning_Alter",
          "target": "Self"
        }
      ],
      "modifiers": {
        "Burning_Alter": {
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_IS_BURNING_ALTER",
              "value": 1,
              "target": "Caster",
              "useLimitRange": true,
              "maxValue": 1,
              "minValue": 0
            }
          ],
          "onRemoved": [
            {
              "$type": "AddGlobalValue",
              "key": "_IS_BURNING_ALTER",
              "value": -1,
              "target": "Caster",
              "useLimitRange": true,
              "maxValue": 0,
              "minValue": 0
            }
          ]
        }
      }
    }
  },

  /////////////////////////////////////////////////////////
  //
  //冰冻效果魔改白盒
  //
  /////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "SceneAbility_Freeze_Alter",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "AttachModifier",
          "modifierName": "Freeze_Alter",
          "target": "Self"
        }
      ],
      "modifiers": {
        "Freeze_Alter": {
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_IS_FREEZE_ALTER",
              "value": 1,
              "target": "Caster",
              "useLimitRange": true,
              "maxValue": 1,
              "minValue": 0
            }
          ],
          "onRemoved": [
            {
              "$type": "AddGlobalValue",
              "key": "_IS_FREEZE_ALTER",
              "value": -1,
              "target": "Caster",
              "useLimitRange": true,
              "maxValue": 0,
              "minValue": 0
            }
          ]
        }
      }
    }
  },

  /////////////////////////////////////////////////////////
  //
  // 元素反应掉球
  //
  /////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "SceneAbility_Monster_GenerateElemBall",
      "isDynamicAbility": true,
      "abilityMixins": [
        {
          "$type": "MonsterReadyMixin",
          "onMonsterReady": [
            {
              "$type": "ApplyModifier",
              "modifierName": "UNIQUE_Monster_GenerateElemBall",
              "target": "Target"
            }
          ]
        }
      ],
      "modifiers": {
        "UNIQUE_Monster_GenerateElemBall": {
          "isUnique": true,
          "stacking": "Unique",
          "onBeingHit": [
            {
              "$type": "ApplyModifier",
              "modifierName": "UNIQUE_Monster_GenerateElemBall_Timer",
              "target": "Self",
              "predicates": [
                {
                  "$type": "ByAny",
                  "predicates": [
                    {
                      "$type": "ByAttackTags",
                      "attackTags": ["ExplodeDamage"]
                    },
                    {
                      "$type": "ByAttackTags",
                      "attackTags": ["SuperconductorDamage"]
                    }
                  ]
                }
              ]
            }
          ]
        },
        "UNIQUE_Monster_GenerateElemBall_Timer": {
          "isUnique": true,
          "stacking": "Unique",
          "duration": 2,
          "onAdded": [
            {
              "$type": "GenerateElemBall",
              "dropType": "ForceDrop",
              "configID": 2024,
              "baseEnergy": 2,
              "ratio": 4,
              "born": {
                "$type": "ConfigBornByTarget",
                "offset": {
                  "x": 0.0,
                  "y": 0.0,
                  "z": 0.0
                }
              }
            },
            {
              "$type": "Randomed",
              "chance": 0.5,
              "successActions": [
                {
                  "$type": "GenerateElemBall",
                  "dropType": "ForceDrop",
                  "configID": 2024,
                  "baseEnergy": 2,
                  "ratio": 2,
                  "born": {
                    "$type": "ConfigBornByTarget",
                    "offset": {
                      "x": 0.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  }
                }
              ]
            }
          ]
        }
      }
    }
  },

  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "LevelAbility_Challenge_RecoverAllState",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "AttachModifier",
          "modifierName": "RecoverAllState"
        }
      ],
      "modifiers": {
        "RecoverAllState": {
          "thinkInterval": 1,
          "onThinkInterval": [
            {
              "$type": "ReviveDeadAvatar",
              "amountByTargetMaxHPRatio": 1,
              "target": "AllPlayerAvatars",
              "doOffStage": true,
              "predicates": [
                {
                  "$type": "ByTargetPositionToSelfPosition",
                  "compareType": "XZ",
                  "value": 12,
                  "logic": "LesserOrEqual"
                }
              ]
            },
            {
              "$type": "ApplyModifier",
              "modifierName": "RecoverHpElemEnergy",
              "target": "AllPlayerAvatars",
              "doOffStage": true,
              "predicates": [
                {
                  "$type": "ByTargetPositionToSelfPosition",
                  "compareType": "XZ",
                  "value": 12,
                  "logic": "LesserOrEqual"
                }
              ]
            }
          ]
        },
        //恢复25%生命值
        "RecoverHpElemEnergy": {
          "duration": 1.1,
          "stacking": "Multiple",
          "onAdded": [
            {
              "$type": "HealHP",
              "amountByTargetMaxHPRatio": 1,
              "doOffStage": true
            }
          ],
          "modifierMixins": [
            {
              "$type": "ReviveElemEnergyMixin",
              "type": "Both",
              "period": 1, //每x秒回复一次能量
              "baseEnergy": 20 //每次回y点能量
            }
          ]
        }
      }
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "LevelAbility_Challenge_RecoverAllState_Big",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "AttachModifier",
          "modifierName": "RecoverAllState"
        }
      ],
      "modifiers": {
        "RecoverAllState": {
          "thinkInterval": 1,
          "onThinkInterval": [
            {
              "$type": "ReviveDeadAvatar",
              "amountByTargetMaxHPRatio": 1,
              "target": "AllPlayerAvatars",
              "doOffStage": true,
              "predicates": [
                {
                  "$type": "ByTargetPositionToSelfPosition",
                  "compareType": "XZ",
                  "value": 20,
                  "logic": "LesserOrEqual"
                }
              ]
            },
            {
              "$type": "ApplyModifier",
              "modifierName": "RecoverHpElemEnergy",
              "target": "AllPlayerAvatars",
              "doOffStage": true,
              "predicates": [
                {
                  "$type": "ByTargetPositionToSelfPosition",
                  "compareType": "XZ",
                  "value": 20,
                  "logic": "LesserOrEqual"
                }
              ]
            }
          ]
        },
        //恢复25%生命值
        "RecoverHpElemEnergy": {
          "duration": 1.1,
          "stacking": "Multiple",
          "onAdded": [
            {
              "$type": "HealHP",
              "amountByTargetMaxHPRatio": 1,
              "doOffStage": true
            }
          ],
          "modifierMixins": [
            {
              "$type": "ReviveElemEnergyMixin",
              "type": "Both",
              "period": 1, //每x秒回复一次能量
              "baseEnergy": 20 //每次回y点能量
            }
          ]
        }
      }
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "LevelAbility_SceneObj_ClearLocalGadget",
      "isDynamicAbility": true,
      "abilityMixins": [
        {
          "$type": "AttachToGadgetStateMixin",
          "gadgetState": 201,
          "modifierName": "State_201"
        }
      ],
      "onAdded": [],
      "modifiers": {
        "State_201": {
          "onAdded": [
            {
              "$type": "ClearLocalGadgets"
            },
            {
              "$type": "ChangeGadgetState",
              "state": 1
            }
          ]
        }
      }
    }
  },
  //////////////////////////////////
  //
  //  风花节地城 加载判定
  //
  //////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_WindFlora_Dungeon_Load",
      "isDynamicAbility": true,
      "abilityMixins": [],
      "onAdded": [
        {
          "$type": "ApplyModifier",
          "modifierName": "Avatar_Ready", //关卡初始化的时候标记角色已经初始化完成
          "target": "Self"
        }
      ],
      "modifiers": {
        "Avatar_Ready": {
          "modifierMixins": [
            {
              "$type": "StageReadyMixin",
              "onStageReady": [
                {
                  "$type": "ServerLuaCall",
                  "target": "Team",
                  "isTarget": true,
                  "luaCallType": "SpecificGroup",
                  "CallParamList": [235800001],
                  "funcName": "action_player_ready_to_go_single"
                }
              ]
            }
          ]
        }
      }
    }
  },
  //////////////////////////////////
  //
  //  奇趣秘园地城 防摔死 重连通知
  //
  //////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_CharAmusement_Dungeon_Load",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "ApplyModifier",
          "modifierName": "UNIQUE_Avatar_FallingDamage"
        },
        {
          "$type": "ApplyModifier",
          "modifierName": "UNIQUE_Avatar_EnterScene"
        }
      ],
      "modifiers": {
        "UNIQUE_Avatar_FallingDamage": {
          "isUnique": true,
          "properties": {
            "Actor_FallingDamageRatio": -1
          }
        },
        "UNIQUE_Avatar_EnterScene": {
          "isUnique": true,
          "onAdded": [
            {
              "$type": "ServerLuaCall",
              "funcName": "SLC_CharAmuseMain_PlayerEnter",
              "canBeHandledOnRecover": true,
              "CallParamList": [251008007],
              "luaCallType": "SpecificGroup"
            }
          ]
        }
      }
    }
  },
  //////////////////////////////////
  //
  //  UGC地城 玩家Team射线
  //
  //////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_UGC_Dungeon_Ray",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "AttachModifier",
          "modifierName": "UNIQUE_UGC_LockHp", //关卡初始化的时候标记角色已经初始化完成
          "target": "CurTeamAvatars"
        },
        {
          "$type": "AttachModifier",
          "modifierName": "UNIQUE_UGC_ElectricCorePlay",
          "target": "CurTeamAvatars"
        },
        {
          "$type": "SetGlobalValue",
          "key": "GV_ShowTAbility",
          "minValue": 0,
          "target": "CurTeamAvatars",
          "value": 0
        },
        {
          "$type": "SetGlobalValue",
          "key": "GV_LightCoreNums",
          "target": "CurTeamAvatars",
          "value": 0
        },
        {
          "$type": "SetGlobalValue",
          "key": "GV_UGC_AvatarCanRocketJump",
          "target": "Team",
          "useLimitRange": true,
          "minValue": 0,
          "maxValue": 999,
          "value": 0
        }
      ],
      "abilityMixins": [
        {
          "$type": "DoActionByRayTagMixin",
          "UGCRayTriggerDirections": ["Down"],
          "raycastInterval": 0.5,
          "rayTags": [1, 2, 3, 4, 5],
          "modifierToTags": [
            "UNIQUE_Team_Fire",
            "UNIQUE_Team_Water",
            "UNIQUE_Team_Ice",
            "UNIQUE_Team_Elec",
            "UNIQUE_Team_RocketJump"
          ]
        },
        {
          "$type": "AttachModifierToGlobalValueMixin",
          "globalValueKey": "GV_UGC_AvatarCanRocketJump",
          "globalValueTarget": "Team",
          "isUnique": true,
          "valueSteps": [-0.5, 0.5, 999],
          "modifierNameSteps": [
            "UNIQUE_UGC_DisableRocketJump",
            "UNIQUE_UGC_EnableRocketJump"
          ]
        },
        {
          "$type": "AttachModifierToGlobalValueMixin",
          "globalValueKey": "SGV_UGCDungeon_Immune",
          "globalValueTarget": "Team",
          "isUnique": true,
          "valueSteps": [-0.5, 0.5, 20],
          "modifierNameSteps": [
            "UNIQUE_UGC_DisableImmune",
            "UNIQUE_UGC_EnableImmune"
          ]
        },
        {
          "$type": "StageReadyMixin",
          "onStageReady": [
            {
              "$type": "SetGlobalValue",
              "key": "GV_UGC_AvatarCanRocketJump",
              "target": "Team",
              "useLimitRange": true,
              "minValue": 0,
              "maxValue": 999,
              "value": 0
            }
          ]
        }
      ],

      "onTriggerAvatarRay": [
        {
          "$type": "DebugLog",
          "content": "##UGC: RAY TRIGGERED",
          "doOffStage": true
        },
        {
          "$type": "ApplyModifier",
          "modifierName": "UNIQUE_PlayerTrig",
          "target": "Target"
        },
        {
          "$type": "Predicated",
          "target": "Target",
          "targetPredicates": [
            {
              "$type": "ByTargetGlobalValue",
              "target": "Target",
              "key": "GS_UGC_Vanish",
              "compareType": "Equal",
              "value": 1
            }
          ],
          "successActions": [
            {
              "$type": "ExecuteGadgetLua",
              "target": "Target",
              "param1": 201
            }
          ]
        }
      ],

      "modifiers": {
        "UNIQUE_PlayerTrig": {
          "duration": 1,
          "stacking": "Unique",
          "isUnique": true,
          "onAdded": [
            {
              "$type": "SetGlobalValue",
              "target": "Self",
              "key": "UGC_Triggered",
              "value": 1
            }
          ],
          "onRemoved": [
            {
              "$type": "SetGlobalValue",
              "target": "Self",
              "key": "UGC_Triggered",
              "value": 0
            }
          ]
        },
        "UNIQUE_UGC_LockHp": {
          "state": "LockHP",
          "isUnique": true,
          "properties": {
            "Actor_FallingDamageRatio": -1
          }
        },
        "UNIQUE_Team_Fire": {
          "duration": 3,
          "stacking": "Unique",
          "isUnique": true,
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "UNIQUE_UGC_FireCubeElem",
              "target": "CurLocalAvatar"
            }
          ],
          "modifierMixins": [
            {
              "$type": "CurLocalAvatarMixinV2",
              "modifierName": "UNIQUE_UGC_FireCubeElem"
            }
          ]
        },
        "UNIQUE_Team_Water": {
          "duration": 3,
          "stacking": "Unique",
          "isUnique": true,
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "UNIQUE_UGC_WaterCubeElem",
              "target": "CurLocalAvatar"
            }
          ],
          "modifierMixins": [
            {
              "$type": "CurLocalAvatarMixinV2",
              "modifierName": "UNIQUE_UGC_WaterCubeElem"
            }
          ]
        },
        "UNIQUE_Team_Ice": {
          "duration": 3,
          "stacking": "Unique",
          "isUnique": true,
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "UNIQUE_UGC_IceCubeElem",
              "target": "CurLocalAvatar"
            }
          ],
          "modifierMixins": [
            {
              "$type": "CurLocalAvatarMixinV2",
              "modifierName": "UNIQUE_UGC_IceCubeElem"
            }
          ]
        },
        "UNIQUE_Team_Elec": {
          "duration": 3,
          "stacking": "Unique",
          "isUnique": true,
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "UNIQUE_UGC_ElecCubeElem",
              "target": "CurLocalAvatar"
            }
          ],
          "modifierMixins": [
            {
              "$type": "CurLocalAvatarMixinV2",
              "modifierName": "UNIQUE_UGC_ElecCubeElem"
            }
          ]
        },
        "UNIQUE_Team_RocketJump": {
          "duration": 0.6,
          "stacking": "Refresh",
          "isUnique": true,
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "target": "Team",
              "key": "GV_UGC_AvatarCanRocketJump",
              "useLimitRange": true,
              "minValue": 0,
              "maxValue": 999,
              "value": 1
            }
          ],
          "onRemoved": [
            {
              "$type": "AddGlobalValue",
              "target": "Team",
              "key": "GV_UGC_AvatarCanRocketJump",
              "useLimitRange": true,
              "minValue": 0,
              "maxValue": 999,
              "value": -1
            }
          ]
        },
        "UNIQUE_UGC_FireCubeElem": {
          "duration": 5,
          "stacking": "Refresh",
          "isUnique": true
        },
        "UNIQUE_UGC_WaterCubeElem": {
          "duration": 5,
          "stacking": "Refresh",
          "isUnique": true
        },
        "UNIQUE_UGC_IceCubeElem": {
          "duration": 5,
          "stacking": "Refresh",
          "isUnique": true
        },
        "UNIQUE_UGC_ElecCubeElem": {
          "duration": 5,
          "stacking": "Refresh",
          "isUnique": true
        },
        "UNIQUE_UGC_EnableRocketJump": {
          "isUnique": true,
          "onAdded": [
            {
              "$type": "AttachModifier",
              "modifierName": "UNIQUE_UGC_ROCKETJUMP"
            }
          ],
          "modifierMixins": [
            {
              "$type": "CurLocalAvatarMixinV2",
              "modifierName": "UNIQUE_UGC_ROCKETJUMP"
            }
          ]
        },
        "UNIQUE_UGC_ROCKETJUMP": {
          "isUnique": true,
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_SceneObj_JumpUp_01_Buff"
            },
            //开启超级跳
            {
              "$type": "EnableRocketJump",
              "canBeHandledOnRecover": true,
              "type": "DungeonJump",
              "enable": true,
              "extention": {
                "xzMultiplier": 3, //xz平面速度乘子
                "yMultiplier": 5.0 //y轴跳跃速度乘子
              }
            }
          ],
          "onRemoved": [
            //关闭超级跳
            {
              "$type": "EnableRocketJump",
              "type": "DungeonJump",
              "target": "CurTeamAvatars",
              "doOffStage": true,
              "enable": false
            }
          ],
          "modifierMixins": [
            {
              "$type": "AttachToStateIDMixin",
              "stateIDs": ["Jump"],
              "modifierName": "UGC_RocketJumpEffect"
            }
          ]
        },
        "UNIQUE_UGC_DisableRocketJump": {
          "isUnique": true
        },
        "UGC_RocketJumpEffect": {
          "duration": 0.5,
          "onAdded": [
            {
              "$type": "FireEffect",
              "effectPattern": "Eff_Stages_Level_Common_Jumpplatform_01_Active"
            }
          ]
        },
        "UNIQUE_UGC_EnableImmune": {
          "isUnique": true,
          "onAdded": [
            {
              "$type": "AttachModifier",
              "modifierName": "UNIQUE_UGC_Immune"
            }
          ],
          "modifierMixins": [
            {
              "$type": "CurLocalAvatarMixinV2",
              "modifierName": "UNIQUE_UGC_Immune"
            }
          ]
        },
        "UNIQUE_UGC_DisableImmune": {
          "isUnique": true
        },
        "UNIQUE_UGC_Immune": {
          "isUnique": true,
          "state": "Invincible",
          "modifierMixins": [
            {
              "$type": "EntityDitherMixin",
              "predicates": [
                {
                  "$type": "ByIsLocalAvatar"
                }
              ],
              "ditherValue": 0.5,
              "cutInTime": 0.1,
              "cutOutTime": 0.2
            }
          ]
        },
        "UNIQUE_UGC_ElectricCorePlay": {
          "isUnique": true,
          "thinkInterval": 0.5,
          "onThinkInterval": [
            {
              "$type": "Predicated",
              "otherTargets": {
                "$type": "SelectTargetsByShape",
                "shapeName": "CircleR15H30",
                "centerBasedOn": "Self",
                "campBasedOn": "Self",
                "campTargetType": "All",
                "entityTypePriority": ["Gadget"]
              },
              "targetPredicates": [
                {
                  "$type": "ByEntityTypes",
                  "entityTypes": ["Gadget"]
                },
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_IS_ELECTRIC_CORE",
                  "compareType": "MoreThanAndEqual",
                  "value": 0
                }
              ],
              "successActions": [
                {
                  "$type": "AddGlobalValue",
                  "key": "GV_ShowTAbility",
                  "target": "CurTeamAvatars",
                  "value": 1,
                  "minValue": 0,
                  "maxValue": 10
                }
              ]
            },
            {
              "$type": "ApplyModifier",
              "modifierName": "UNIQUE_UGC_ShowTAbility",
              "target": "CurLocalAvatar",
              "predicates": [
                {
                  "$type": "ByTargetGlobalValue",
                  "target": "CurLocalAvatar",
                  "key": "GV_ShowTAbility",
                  "compareType": "MoreThan",
                  "value": 0
                }
              ]
            },
            {
              "$type": "RemoveModifier",
              "modifierName": "UNIQUE_UGC_ShowTAbility",
              "target": "CurLocalAvatar",
              "predicates": [
                {
                  "$type": "ByTargetGlobalValue",
                  "target": "CurLocalAvatar",
                  "key": "GV_ShowTAbility",
                  "compareType": "Equal",
                  "value": 0
                }
              ]
            },
            {
              "$type": "SetGlobalValue",
              "key": "GV_ShowTAbility",
              "minValue": 0,
              "maxValue": 1,
              "target": "CurTeamAvatars",
              "value": 0
            }
          ]
        },
        "UNIQUE_UGC_ShowTAbility": {
          "isUnique": true,
          "stacking": "Unique",
          "onAdded": [
            {
              "$type": "ShowExtraAbility",
              "skillID": 20008,
              "target": "CurTeamAvatars",
              "doOffStage": true
            }
          ],
          "onRemoved": [
            {
              "$type": "ShowExtraAbility",
              "skillID": 0,
              "target": "CurTeamAvatars",
              "doOffStage": true
            }
          ]
        }
      }
    }
  },

  //////////////////////////////////
  //
  //  UGC地城 玩家技能禁用
  //
  //////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_UGC_Dungeon_Skill",
      "isDynamicAbility": true,
      "abilityMixins": [
        {
          "$type": "AttachModifierToGlobalValueMixin",
          "globalValueKey": "SGV_UGCDungeon_ForbidSkill",
          "globalValueTarget": "Team",
          "valueSteps": [-0.5, 0.5, 1.5],
          "modifierNameSteps": ["UGC_Normal", "UGC_ForbidSkill"]
        }
      ],
      "modifiers": {
        "UGC_Normal": {
          "onAdded": [
            {
              "$type": "ChangePlayMode",
              "toPlayMode": "Normal",
              "muteRemoteAction": true,
              "doOffStage": true
            }
          ]
        },
        "UGC_ForbidSkill": {
          "onAdded": [
            {
              "$type": "ChangePlayMode",
              "toPlayMode": "UGCForbidSkill",
              "muteRemoteAction": true,
              "doOffStage": true,
              "predicates": [
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "SGV_UGCDungeon_ForbidSkill",
                  "compareType": "Equal",
                  "value": 1
                }
              ]
            }
          ],
          "modifierMixins": [
            {
              "$type": "ReviveElemEnergyMixin",
              "type": "Both",
              "period": 1, //每x秒回复一次能量
              "baseEnergy": -20 //每次回y点能量
            }
          ],
          "onRemoved": [
            {
              "$type": "ChangePlayMode",
              "toPlayMode": "Normal",
              "muteRemoteAction": true,
              "doOffStage": true
            }
          ]
        }
      },
      "onRemoved": [
        {
          "$type": "ChangePlayMode",
          "toPlayMode": "Normal",
          "muteRemoteAction": true,
          "doOffStage": true
        }
      ],
      "onKill": [
        {
          "$type": "ChangePlayMode",
          "toPlayMode": "Normal",
          "muteRemoteAction": true,
          "doOffStage": true
        }
      ]
    }
  },

  //////////////////////////////////
  //
  //  UGC地城 触发雷樱枝条
  //
  //////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Team_UGC_Electric_Fairy",
      "isDynamicAbility": true,
      "abilityMixins": [
        {
          "$type": "AttachModifierToGlobalValueMixin",
          "globalValueKey": "GV_UGC_Electric_Fairy",
          "globalValueTarget": "Team",
          "valueSteps": [-0.5, 0.5, 100],
          "modifierNameSteps": [
            "UGC_Electric_Fairy_Blank",
            "UGC_Electric_Fairy_Attach"
          ]
        }
      ],
      "onAdded": [
        {
          "$type": "SetGlobalValue",
          "target": "Team",
          "key": "GV_UGC_Electric_Fairy",
          "value": 0,
          "doOffStage": true
        }
      ],
      "modifiers": {
        "UGC_Electric_Fairy_Blank": {},
        "UGC_Electric_Fairy_Attach": {
          "onAdded": [
            {
              "$type": "AttachModifier",
              "modifierName": "UNIQUE_Electric_Fairy_Skill_Lv3",
              "target": "Team"
            }
          ]
        },
        "UNIQUE_Electric_Fairy_Skill_Lv3": {
          "isUnique": true,
          "modifierMixins": [
            {
              "$type": "FollowAttachPointEffectMixin",
              "modifierName": "UNIQUE_Electric_Fairy_Skill_Init_Lv1",
              "attachPriority": "FollowPet",
              "refreshOnAvatarIn": true
            },
            {
              "$type": "FollowAttachPointEffectMixin",
              "modifierName": "UNIQUE_Electric_Fairy_Skill_OnTeam_Lv3",
              "attachPriority": "ThemePlay",
              "refreshOnAvatarIn": true
            }
          ],

          "onAdded": [
            {
              "$type": "SetGlobalValue",
              "key": "_ABILITY_SceneObj_Electric_Fairy_Immunity_Time",
              "value": 6,
              "target": "Team"
            }
          ]
        },

        "UNIQUE_Electric_Fairy_Skill_Init_Lv1": {
          "isUnique": true,
          "onAdded": [
            {
              "$type": "SetGlobalValue",
              "key": "_ABILITY_SceneObj_Electric_Fairy_Immunity_Time",
              "value": 6,
              "target": "Team"
            },
            {
              "$type": "SetGlobalValue",
              "key": "_ABILITY_SceneObj_Electric_Fairy_AutoAttack_Time", //攻击次数初始�?
              "value": 0,
              "target": "Team"
            }
          ]
        },
        "UNIQUE_Electric_Fairy_Skill_OnTeam_Lv3": {
          "isUnique": true,
          "stacking": "Unique",
          "modifierMixins": [
            {
              "$type": "CurLocalAvatarMixinV2",
              "modifierName": "UNIQUE_Electric_Fairy_Skill_OnAvatar_Lv3"
            },
            {
              "$type": "AttachModifierToSelfGlobalValueMixin",
              "globalValueKey": "_ABILITY_SceneObj_Electric_Fairy_Immunity_Time",
              "defaultGlobalValueOnCreate": 1,
              "valueSteps": [-0.5, 0.5, 100],
              "modifierNameSteps": [
                "Electric_Fairy_Immunity_OnTeam",
                "Electric_Fairy_Immunity_OnTeam"
              ],
              "actionQueues": [
                [
                  {
                    "$type": "ApplyModifier",
                    "modifierName": "Electric_Fairy_Immunity_OnAvatar_LastHit",
                    "target": "CurLocalAvatar"
                  },
                  {
                    "$type": "RemoveModifier",
                    "modifierName": "UNIQUE_Electric_Fairy_Skill_Lv3",
                    "target": "CurLocalAvatar"
                  }
                ],
                [
                  //
                ]
              ]
            }
          ],
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Electric_Fairy_Effect_Lv1"
            },
            {
              "$type": "AttachModifier",
              "modifierName": "Electric_Fairy_Effect_Hit_Lv1"
            },
            {
              "$type": "AttachModifier",
              "modifierName": "Electric_Fairy_ReviveEnergy"
            }
          ]
        },
        "UNIQUE_Electric_Fairy_Skill_OnAvatar_Lv3": {
          "isUnique": true,
          "stacking": "Unique",
          "onAdded": [
            {
              "$type": "AttachModifier",
              "modifierName": "Electric_Fairy_Electric_Block_Lv1"
            }
          ]
        },
        "Electric_Fairy_Electric_Block_Lv1": {
          "modifierMixins": [
            {
              "$type": "DynamicCollisionMixin",
              "tags": ["LEVEL1"],
              "isChecker": true
            }
          ],
          "onAdded": [
            {
              "$type": "SetGlobalValue",
              "doOffStage": true,
              "key": "HAS_ELECTRIC_FAIRY_BUFF",
              "value": 1
            },
            {
              "$type": "SetGlobalValue",
              "doOffStage": true,
              "key": "_ABILITY_Electric_Fairy_Block_Handle_Level",
              "value": 1
            }
          ],
          "onRemoved": [
            {
              "$type": "SetGlobalValue",
              "doOffStage": true,
              "key": "HAS_ELECTRIC_FAIRY_BUFF",
              "value": 0
            },
            {
              "$type": "SetGlobalValue",
              "doOffStage": true,
              "key": "_ABILITY_Electric_Fairy_Block_Handle_Level",
              "value": 0
            }
          ]
        },
        //播放受击特效_Lv1
        "Electric_Fairy_Effect_Hit_Lv1": {
          "modifierMixins": [
            {
              "$type": "AttachModifierToSelfGlobalValueMixin",
              "globalValueKey": "_ABILITY_SceneObj_Electric_Fairy_Immunity_Time",
              "valueSteps": [-0.5, 0.5, 1.5, 2.5, 3.5, 4.5, 5.5],
              "modifierNameSteps": [
                "Blank",
                "Blank",
                "Blank",
                "Blank",
                "Blank",
                "Blank"
              ],
              "actionQueues": [
                [
                  {
                    "$type": "FireEffect",
                    "effectPattern": "Eff_SceneObj_ElectricFairy_Shield_Hit_Last"
                  }
                ],
                [
                  {
                    "$type": "FireEffect",
                    "effectPattern": "Eff_SceneObj_ElectricFairy_Shield_Hit"
                  }
                ],
                [
                  {
                    "$type": "FireEffect",
                    "effectPattern": "Eff_SceneObj_ElectricFairy_Shield_Hit"
                  }
                ],
                [
                  {
                    "$type": "FireEffect",
                    "effectPattern": "Eff_SceneObj_ElectricFairy_Shield_Hit"
                  }
                ],
                [
                  {
                    "$type": "FireEffect",
                    "effectPattern": "Eff_SceneObj_ElectricFairy_Shield_Hit"
                  }
                ],
                [
                  {
                    "$type": "FireEffect",
                    "effectPattern": "Eff_SceneObj_ElectricFairy_Shield_Hit"
                  }
                ]
              ]
            }
          ]
        },
        //--------------元素能量回复------------//
        //仅对前场是雷角色生效
        "Electric_Fairy_ReviveEnergy": {
          "thinkInterval": 1.0,
          "onThinkInterval": [
            {
              "$type": "ReviveElemEnergy",
              "value": 2,
              "target": "CurLocalAvatar",
              "predicates": [
                {
                  "$type": "ByEnergyRatio",
                  "ratio": 0.5,
                  "logic": "LesserOrEqual",
                  "target": "CurLocalAvatar"
                },
                {
                  "$type": "ByAvatarElementType",
                  "elementType": "Electric"
                }
              ]
            }
          ]
        },
        //最后的短暂免疫
        "Electric_Fairy_Immunity_OnAvatar_LastHit": {
          "duration": 0.5,
          "modifierMixins": [
            {
              "$type": "RejectAttackMixin",
              "attackTag": "Inazuma_Environment_Damage",
              "type": "RejectAll"
            }
          ]
        },
        "Blank": {},
        //-------------雷灵特效表现------------//
        "Electric_Fairy_Effect_Lv1": {
          "duration": 1.0,
          "elementDurability": 1,
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_SceneObj_ThunderSeed_01"
            }
          ],
          "modifierMixins": [
            {
              "$type": "CurLocalAvatarMixinV2",
              "modifierName": "Electric_Fairy_Effect_Move_Handler"
            }
          ],
          "thinkInterval": 0.5,
          "onThinkInterval": [
            {
              "$type": "AddElementDurability",
              "modifierName": "Electric_Fairy_Effect_Lv1",
              "value": 1,
              "useLimitRange": true,
              "maxValue": 1,
              "minValue": 0,
              "predicates": [
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "HAS_ELECTRIC_FAIRY_BUFF_Team",
                  "value": 1,
                  "compareType": "Equal"
                }
              ]
            },
            {
              "$type": "ApplyModifier",
              "modifierName": "Electric_Fairy_RemoveEffect",
              "predicates": [
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "HAS_ELECTRIC_FAIRY_BUFF_Team",
                  "value": 0,
                  "compareType": "Equal"
                }
              ]
            }
          ]
        },
        //特效消失Trigger要比特效死亡提前
        "Electric_Fairy_RemoveEffect": {
          "duration": 0.5,
          "onAdded": [
            {
              "$type": "SendEffectTrigger",
              "type": "Int",
              "parameter": "State",
              "value": 203,
              "effectPattern": "Eff_SceneObj_ThunderSeed_01",
              "target": "Team"
            },
            {
              "$type": "SendEffectTrigger",
              "type": "Int",
              "parameter": "State",
              "value": 203,
              "effectPattern": "Eff_SceneObj_ThunderSeed_02",
              "target": "Team"
            },
            {
              "$type": "SendEffectTrigger",
              "type": "Int",
              "parameter": "State",
              "value": 203,
              "effectPattern": "Eff_SceneObj_ThunderSeed_03",
              "target": "Team"
            }
          ]
        },
        //雷灵处理移动动作表现
        "Electric_Fairy_Effect_Move_Handler": {
          "modifierMixins": [
            {
              "$type": "AttachToAnimatorStateIDMixin",
              "stateIDs": [
                "Standby",
                "RunToIdle",
                "WalkToIdle",
                "SprintToIdle",
                "StandbyShow_01",
                "StandbyShow_02"
              ],
              "modifierName": "Electric_Fairy_Effect_DoStandBy"
            },
            {
              "$type": "AttachToAnimatorStateIDMixin",
              "stateIDs": ["Run", "Sprint"],
              "modifierName": "Electric_Fairy_Effect_DoMove"
            }
          ]
        },
        //控制雷灵移动与待机切�?
        "Electric_Fairy_Effect_DoStandBy": {
          "onAdded": [
            {
              "$type": "SendEffectTrigger",
              "type": "Int",
              "parameter": "State",
              "value": 0,
              "effectPattern": "Eff_SceneObj_ThunderSeed_01",
              "target": "Team"
            },
            {
              "$type": "SendEffectTrigger",
              "type": "Int",
              "parameter": "State",
              "value": 0,
              "effectPattern": "Eff_SceneObj_ThunderSeed_02",
              "target": "Team"
            },
            {
              "$type": "SendEffectTrigger",
              "type": "Int",
              "parameter": "State",
              "value": 0,
              "effectPattern": "Eff_SceneObj_ThunderSeed_03",
              "target": "Team"
            }
          ],
          "onRemoved": [
            {
              "$type": "SendEffectTrigger",
              "type": "Int",
              "parameter": "State",
              "value": 201,
              "effectPattern": "Eff_SceneObj_ThunderSeed_01",
              "target": "Team"
            },
            {
              "$type": "SendEffectTrigger",
              "type": "Int",
              "parameter": "State",
              "value": 201,
              "effectPattern": "Eff_SceneObj_ThunderSeed_02",
              "target": "Team"
            },
            {
              "$type": "SendEffectTrigger",
              "type": "Int",
              "parameter": "State",
              "value": 201,
              "effectPattern": "Eff_SceneObj_ThunderSeed_03",
              "target": "Team"
            }
          ]
        },
        "Electric_Fairy_Effect_DoMove": {
          "onAdded": [
            {
              "$type": "SendEffectTrigger",
              "type": "Int",
              "parameter": "State",
              "value": 201,
              "effectPattern": "Eff_SceneObj_ThunderSeed_01",
              "target": "Team"
            },
            {
              "$type": "SendEffectTrigger",
              "type": "Int",
              "parameter": "State",
              "value": 201,
              "effectPattern": "Eff_SceneObj_ThunderSeed_02",
              "target": "Team"
            },
            {
              "$type": "SendEffectTrigger",
              "type": "Int",
              "parameter": "State",
              "value": 201,
              "effectPattern": "Eff_SceneObj_ThunderSeed_03",
              "target": "Team"
            }
          ]
        },
        "Electric_Fairy_Immunity_OnTeam": {
          "stacking": "Unique",
          "modifierMixins": [
            {
              "$type": "CurLocalAvatarMixinV2",
              "modifierName": "Electric_Fairy_Immunity_OnAvatar"
            }
          ],
          "onAdded": [
            {
              "$type": "AttachModifier",
              "modifierName": "Electric_Fairy_Mark"
            }
          ]
        },
        //雷灵标志位，有个坑ServerBuff在Remove的时候不会跑这的逻辑，需要初始化处理
        "Electric_Fairy_Mark": {
          "onAdded": [
            {
              "$type": "SetGlobalValue",
              "key": "HAS_ELECTRIC_FAIRY_BUFF_Team",
              "value": 1,
              "doOffStage": true
            }
          ],
          "thinkInterval": 1.0,
          "onThinkInterval": [
            {
              "$type": "SetGlobalValue",
              "key": "HAS_ELECTRIC_FAIRY_BUFF_Team",
              "value": 1,
              "doOffStage": true
            }
          ],
          "onRemoved": [
            {
              "$type": "SetGlobalValue",
              "key": "HAS_ELECTRIC_FAIRY_BUFF_Team",
              "value": 0,
              "doOffStage": true
            }
          ]
        }
      }
    }
  }
]
