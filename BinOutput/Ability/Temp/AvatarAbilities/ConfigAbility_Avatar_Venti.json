[
  ////////////////////////////////////////////////////////////////
  //
  //  魔神角色头发表现
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "SetHairEmissionScaler",
      "abilityMixins": [
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": [
            "Hurricane_BS",
            "Hurricane",
            "Hurricane_AS",
            "WindBlade_Rise_BS",
            "WindBlade_Rise_Charge",
            "WindBlade_Rise_Charge_1",
            "WindBlade_RiseUp",
            "WindBlade",
            "WindBlade_Land",
            "WindBlade_AS"
          ],
          "modifierName": "HairEmissionScaler"
        }
      ],
      "modifiers": {
        "HairEmissionScaler": {
          "onAdded": [
            {
              "$type": "SetEmissionScaler",
              "materialType": "Hair",
              "value": 10,
              "duration": 1.5
            }
          ],
          "onRemoved": [
            {
              "$type": "SetEmissionScaler",
              "materialType": "Hair",
              "value": 1,
              "doOffStage": true
              // "duration":1.5,
            },
            {
              "$type": "FireEffect",
              "effectPattern": "Eff_Venti_HairEmission_Dissipate",
              "born": {
                "$type": "ConfigBornByAttachPoint",
                "attachPointName": "PRIVATE_LHair"
              }
            },
            {
              "$type": "FireEffect",
              "effectPattern": "Eff_Venti_HairEmission_Dissipate",
              "born": {
                "$type": "ConfigBornByAttachPoint",
                "attachPointName": "PRIVATE_RHair"
              }
            }
          ],
          "onKill": [
            {
              "$type": "RemoveModifier",
              "modifierName": "HairEmissionScaler"
            }
          ]
        }
      }
    }
  },
  ////////////////////////////////////////////////////////////////
  //
  //  箭的表现
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_Arrow_FX",
      "abilityMixins": [
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["Aim", "FastAim"],
          "modifierName": "Venti_Arrow_FX"
        }
      ],
      "onAbilityStart": [],
      "modifiers": {
        "Venti_Arrow_FX": {
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Avatar_Boy_Bow_Venti_Arrow"
            }
            // {
            // 	"$type":"AttachEffect",
            // 	"effectPattern":"Eff_Bow_Arrow_L",
            // 	"predicates":
            // 	[
            // 		{
            // 			"$type" : "ByUnlockTalentParam",
            // 			"talentParam" : "Venti_KageBunshinShoot",
            // 		},
            // 	]
            // },
            // {
            // 	"$type":"AttachEffect",
            // 	"effectPattern":"Eff_Bow_Arrow_R",
            // 	"predicates":
            // 	[
            // 		{
            // 			"$type" : "ByUnlockTalentParam",
            // 			"talentParam" : "Venti_KageBunshinShoot",
            // 		},
            // 	]
            // },
          ]
        }
      }
    }
  },

  ////////////////////////////////////////////////////////////////
  //
  //  Press Shoot
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_PressShoot",
      "abilityMixins": [
        {
          "$type": "ButtonHoldChargeMixin",
          "skillID": 10221,
          "chargeTime": 0.2,
          "OnBeginUncharged": [
            {
              "$type": "SetAnimatorTrigger",
              "triggerID": "DoSkill"
            },
            {
              "$type": "SetAnimatorInt",
              "intID": "SkillID",
              "value": 100
            }
          ],
          "OnReleaseUncharged": [
            {
              "$type": "SetCameraLockTime",
              "lockTime": 0.3
            },
            {
              "$type": "EntityDoSkill",
              "skillID": 10223,
              "isHold": true
            }
          ],
          "OnBeginCharged": [
            {
              "$type": "SetAnimatorTrigger",
              "triggerID": "DoSkill"
            },
            {
              "$type": "SetAnimatorInt",
              "intID": "SkillID",
              "value": 101
            }
          ],
          "OnReleaseCharged": [
            {
              "$type": "AvatarSkillStart",
              "skillID": 10221
            },
            {
              "$type": "AvatarSkillStart",
              "skillID": 10222
            },
            {
              "$type": "EntityDoSkill",
              "skillID": 10223,
              "isHold": true
            }
            // {
            // 	"$type": "SetAnimatorTrigger",
            // 	"triggerID": "AimEnd",
            // },
          ],
          "chargeStateIDs": ["ShootBS", "Shoot", "FastAim", "FastAimShoot"]
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FastAim", "FastAimShoot"],
          "modifierName": "KeepFastAiming"
        },
        {
          // 当快速瞄准射击结束时，会设置FastAimShootFinish，使得动画从FastAim状态出来，同时会通过FastAimShooting防止在射击过程中点击了瞄准按钮直接退出
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FastAimShoot"],
          "modifierName": "SetFastAimShooting"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["ShootBS", "FastAim", "FastAimShoot"],
          "modifierName": "SetNeedAimEndStates"
        }
      ],
      "modifiers": {
        "KeepFastAiming": {
          "onAdded": [
            {
              "$type": "SetAnimatorBool",
              "boolID": "FastAiming",
              "value": true
            },
            {
              "$type": "AvatarEnterFocus",
              "cameraFollowLower": {
                "x": 0.755,
                "y": 0.17,
                "z": -1.9
              },
              "cameraFollowUpper": {
                "x": 0.755,
                "y": 0.37,
                "z": -1.6
              },
              "cameraFastFocusMode": true,
              "faceToTarget": true,
              "faceToTargetAngleThreshold": 360,
              "assistance": {
                "ps4": {
                  "useFocusSticky": true,
                  "useGyro": false
                },
                "ps5": {
                  "useFocusSticky": true,
                  "useGyro": false
                },
                "other": {
                  "useFocusSticky": true,
                  "useGyro": true
                }
              },
              "canMove": true,
              "vcam_fov": 30
            }
          ],
          "onRemoved": [
            {
              "$type": "SetAnimatorBool",
              "boolID": "FastAiming",
              "value": false
            },
            {
              "$type": "AvatarExitFocus",
              "keepRotation": true
            }
          ]
        },
        "SetFastAimShooting": {
          "onAdded": [
            {
              "$type": "SetAnimatorBool",
              "boolID": "FastAimShooting",
              "value": true
            }
          ],
          "onRemoved": [
            {
              "$type": "SetAnimatorBool",
              "boolID": "FastAimShooting",
              "value": false
            },
            {
              "$type": "SetAnimatorTrigger",
              "triggerID": "AimEnd",
              "predicates": [
                {
                  "$type": "ByAnimatorBool",
                  "parameter": "FastAiming",
                  "value": true
                }
              ]
            }
          ]
        },
        "SetNeedAimEndStates": {
          "onAdded": [
            {
              "$type": "SetAnimatorBool",
              "boolID": "InStatesNeedAimEnd",
              "value": true
            }
          ],
          "onRemoved": [
            {
              "$type": "SetAnimatorBool",
              "boolID": "InStatesNeedAimEnd",
              "value": false
            }
          ]
        }
      }
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_AimPressShoot",
      "abilityMixins": [
        {
          "$type": "ButtonHoldChargeMixin",
          "skillID": 10222,
          "chargeTime": 0,
          "OnReleaseCharged": [
            {
              "$type": "AvatarSkillStart",
              "skillID": 10221
            },
            {
              "$type": "AvatarSkillStart",
              "skillID": 10222
            },
            {
              "$type": "EntityDoSkill",
              "skillID": 10223,
              "isHold": true
            }
          ],
          "chargeStateIDs": ["Aim", "AimShoot"]
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["Aim", "AimShoot"],
          "modifierName": "KeepAiming"
        },
        {
          // 通过AimShooting防止在射击过程中点击了瞄准按钮直接退出
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["AimShoot"],
          "modifierName": "SetAimShooting"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["Aim", "AimShoot"],
          "modifierName": "SetNeedAimEndStates"
        }
      ],
      "modifiers": {
        "KeepAiming": {
          "onAdded": [
            {
              "$type": "SetAnimatorBool",
              "boolID": "Aiming",
              "value": true
            },
            {
              "$type": "AvatarEnterFocus",
              "cameraFollowLower": {
                "x": 0.755,
                "y": 0.17,
                "z": -1.9
              },
              "cameraFollowUpper": {
                "x": 0.755,
                "y": 0.37,
                "z": -1.6
              },
              "cameraFastFocusMode": true,
              "faceToTarget": true,
              "faceToTargetAngleThreshold": 360,
              "assistance": {
                "ps4": {
                  "useFocusSticky": true,
                  "useGyro": false
                },
                "ps5": {
                  "useFocusSticky": true,
                  "useGyro": false
                },
                "other": {
                  "useFocusSticky": true,
                  "useGyro": true
                }
              },
              "canMove": true,
              "vcam_fov": 30
            }
          ],
          "onRemoved": [
            {
              "$type": "SetAnimatorBool",
              "boolID": "Aiming",
              "value": false
            },
            {
              "$type": "AvatarExitFocus",
              "keepRotation": true
            }
          ]
        },
        "SetAimShooting": {
          "onAdded": [
            {
              "$type": "SetAnimatorBool",
              "boolID": "AimShooting",
              "value": true
            }
          ],
          "onRemoved": [
            {
              "$type": "SetAnimatorBool",
              "boolID": "AimShooting",
              "value": false
            }
          ]
        },
        "SetNeedAimEndStates": {
          "onAdded": [
            {
              "$type": "SetAnimatorBool",
              "boolID": "InStatesNeedAimEnd",
              "value": true
            }
          ],
          "onRemoved": [
            {
              "$type": "SetAnimatorBool",
              "boolID": "InStatesNeedAimEnd",
              "value": false
            }
          ]
        }
      }
    }
  },
  ////////////////////////////////////////////////////////////////
  //
  //  Shoot Arrow
  //
  ////////////////////////////////////////////////////////////////

  ///////////////////普攻平射/////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_ShootArrow_01",
      "onAbilityStart": [
        {
          "$type": "TriggerBullet",
          "bulletID": 41022008,
          "born": {
            "$type": "ConfigBornByAttachPoint",
            "attachPointName": "WeaponL",
            "offset": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            },
            "direction": {
              "$type": "ConfigDirectionByAttachPoint",
              "attachPointName": "FocusAnchor",
              "attachPointTargetType": "Self"
            }
          }
        },
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_Venti_ShootArrow_Small",
          "born": {
            "$type": "ConfigBornByAttachPoint",
            "attachPointName": "WeaponL",
            "offset": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            }
          }
        }
      ],
      "modifiers": {}
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_ShootArrow_02",
      "onAbilityStart": [
        {
          "$type": "TriggerBullet",
          "bulletID": 41022009,
          "born": {
            "$type": "ConfigBornByAttachPoint",
            "attachPointName": "WeaponL",
            "offset": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            },
            "direction": {
              "$type": "ConfigDirectionByAttachPoint",
              "attachPointName": "FocusAnchor",
              "attachPointTargetType": "Self"
            }
          }
        },
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_Venti_ShootArrow_Big",
          "born": {
            "$type": "ConfigBornByAttachPoint",
            "attachPointName": "WeaponL",
            "offset": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            }
          }
        }
      ],
      "modifiers": {}
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_ShootArrow_03",
      "onAbilityStart": [
        {
          "$type": "TriggerBullet",
          "bulletID": 41022010,
          "born": {
            "$type": "ConfigBornByAttachPoint",
            "attachPointName": "WeaponL",
            "offset": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            },
            "direction": {
              "$type": "ConfigDirectionByAttachPoint",
              "attachPointName": "FocusAnchor",
              "attachPointTargetType": "Self"
            }
          }
        },
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_Venti_ShootArrow_Big",
          "born": {
            "$type": "ConfigBornByAttachPoint",
            "attachPointName": "WeaponL",
            "offset": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            }
          }
        }
      ],
      "modifiers": {}
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_ShootArrow_04",
      "onAbilityStart": [
        {
          "$type": "TriggerBullet",
          "bulletID": 41022011,
          "born": {
            "$type": "ConfigBornByAttachPoint",
            "attachPointName": "WeaponL",
            "offset": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            },
            "direction": {
              "$type": "ConfigDirectionByAttachPoint",
              "attachPointName": "FocusAnchor",
              "attachPointTargetType": "Self"
            }
          }
        },
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_Venti_ShootArrow_Small",
          "born": {
            "$type": "ConfigBornByAttachPoint",
            "attachPointName": "WeaponL",
            "offset": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            }
          }
        }
      ],
      "modifiers": {}
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_ShootArrow_05",
      "onAbilityStart": [
        {
          "$type": "TriggerBullet",
          "bulletID": 41022012,
          "born": {
            "$type": "ConfigBornByAttachPoint",
            "attachPointName": "WeaponL",
            "offset": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            },
            "direction": {
              "$type": "ConfigDirectionByAttachPoint",
              "attachPointName": "FocusAnchor",
              "attachPointTargetType": "Self"
            }
          }
        },
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_Venti_ShootArrow_Big",
          "born": {
            "$type": "ConfigBornByAttachPoint",
            "attachPointName": "WeaponL",
            "offset": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            }
          }
        }
      ],
      "modifiers": {}
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_ShootArrow_06",
      "onAbilityStart": [
        {
          "$type": "TriggerBullet",
          "bulletID": 41022013,
          "born": {
            "$type": "ConfigBornByAttachPoint",
            "attachPointName": "WeaponL",
            "offset": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            },
            "direction": {
              "$type": "ConfigDirectionByAttachPoint",
              "attachPointName": "FocusAnchor",
              "attachPointTargetType": "Self"
            }
          }
        },
        {
          "$type": "ActCameraShake",
          "cameraShake": {
            "shakeType": "Center",
            "shakeRange": 0.3,
            "shakeTime": 0.12,
            "shakeDistance": 30,
            "extension": {
              "baseOnCamera": true
            }
          }
        }
      ],
      "modifiers": {}
    }
  },

  /////////////瞄准模式//////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_ShootArrow_Aiming",
      "abilityMixins": [],
      "onAbilityStart": [
        {
          "$type": "TriggerBullet",
          "bulletID": 41022004,
          // "born":
          // {
          // 	"$type": "ConfigBornByAttachPoint",
          // 	"attachPointName" : "FocusAnchor",
          // 	"offset":
          // 	{
          // 		"x": 0.0,
          // 		"y": 0.0,
          // 		"z": 1.0,
          // 	},
          // },
          "born": {
            "$type": "ConfigBornByAttachPoint",
            "attachPointName": "WeaponL",
            "offset": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            },
            "direction": {
              "$type": "ConfigDirectionByAttachPoint",
              "attachPointName": "FocusAnchor",
              "attachPointTargetType": "Self"
            }
          },
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_Enchanted_Time",
              "value": 4,
              "forceByCaster": true,
              "compareType": "MoreThanAndEqual"
            }
          ]
        },
        {
          "$type": "TriggerBullet",
          "bulletID": 41022005,
          // "born":
          // {
          // 	"$type": "ConfigBornByAttachPoint",
          // 	"attachPointName" : "FocusAnchor",
          // 	"offset":
          // 	{
          // 		"x": 0.0,
          // 		"y": 0.0,
          // 		"z": 1.0,
          // 	},
          // },
          "born": {
            "$type": "ConfigBornByAttachPoint",
            "attachPointName": "WeaponL",
            "offset": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            },
            "direction": {
              "$type": "ConfigDirectionByAttachPoint",
              "attachPointName": "FocusAnchor",
              "attachPointTargetType": "Self"
            }
          },
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_Enchanted_Time",
              "value": 3,
              "forceByCaster": true,
              "compareType": "LessAndEqual"
            }
          ]
        },
        /////////////////////////////////////////通过天赋点出来的分裂箭///////////////////////
        {
          "$type": "TriggerBullet",
          "bulletID": 41022006,
          // "born":
          // {
          // 	"$type": "ConfigBornByAttachPoint",
          // 	"attachPointName" : "FocusAnchor",
          // 	"offset" :
          // 	{
          // 		"x": 0.0,
          // 		"y": 0.0,
          // 		"z": 1.0,
          // 	},
          // 	"direction":
          // 	{
          // 		"$type": "ConfigDirectionByDefault",
          // 		"angleOffset":
          // 		{
          // 			"x": 0.0,
          // 			"y": 4.0,
          // 			"z": 0.0,
          // 		},
          // 	}
          // },
          "born": {
            "$type": "ConfigBornByAttachPoint",
            "attachPointName": "WeaponL",
            "offset": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            },
            "direction": {
              "$type": "ConfigDirectionByAttachPoint",
              "attachPointName": "FocusAnchor",
              "attachPointTargetType": "Self",
              "angleOffset": {
                "x": 0.0,
                "y": 4.0,
                "z": 0.0
              }
            }
          },
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_Enchanted_Time",
              "value": 4,
              "forceByCaster": true,
              "compareType": "MoreThanAndEqual"
            },
            {
              "$type": "ByUnlockTalentParam",
              "talentParam": "Venti_KageBunshinShoot"
            }
          ]
        },
        {
          "$type": "TriggerBullet",
          "bulletID": 41022007,
          // "born":
          // {
          // 	"$type": "ConfigBornByAttachPoint",
          // 	"attachPointName" : "FocusAnchor",
          // 	"offset" :
          // 	{
          // 		"x": 0.0,
          // 		"y": 0.0,
          // 		"z": 1.0,
          // 	},
          // 	"direction":
          // 	{
          // 		"$type": "ConfigDirectionByDefault",
          // 		"angleOffset":
          // 		{
          // 			"x": 0.0,
          // 			"y": 4.0,
          // 			"z": 0.0,
          // 		},
          // 	}
          // },
          "born": {
            "$type": "ConfigBornByAttachPoint",
            "attachPointName": "WeaponL",
            "offset": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            },
            "direction": {
              "$type": "ConfigDirectionByAttachPoint",
              "attachPointName": "FocusAnchor",
              "attachPointTargetType": "Self",
              "angleOffset": {
                "x": 0.0,
                "y": 4.0,
                "z": 0.0
              }
            }
          },
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_Enchanted_Time",
              "value": 3,
              "forceByCaster": true,
              "compareType": "LessAndEqual"
            },
            {
              "$type": "ByUnlockTalentParam",
              "talentParam": "Venti_KageBunshinShoot"
            }
          ]
        },

        {
          "$type": "TriggerBullet",
          "bulletID": 41022006,
          // "born":
          // {
          // 	"$type": "ConfigBornByAttachPoint",
          // 	"attachPointName" : "FocusAnchor",
          // 	"offset" :
          // 	{
          // 		"x": 0.0,
          // 		"y": 0.0,
          // 		"z": 1.0,
          // 	},
          // 	"direction":
          // 	{
          // 		"$type": "ConfigDirectionByDefault",
          // 		"angleOffset":
          // 		{
          // 			"x": 0.0,
          // 			"y": -4.0,
          // 			"z": 0.0,
          // 		},
          // 	}
          // },
          "born": {
            "$type": "ConfigBornByAttachPoint",
            "attachPointName": "WeaponL",
            "offset": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            },
            "direction": {
              "$type": "ConfigDirectionByAttachPoint",
              "attachPointName": "FocusAnchor",
              "attachPointTargetType": "Self",
              "angleOffset": {
                "x": 0.0,
                "y": -4.0,
                "z": 0.0
              }
            }
          },
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_Enchanted_Time",
              "value": 4,
              "forceByCaster": true,
              "compareType": "MoreThanAndEqual"
            },
            {
              "$type": "ByUnlockTalentParam",
              "talentParam": "Venti_KageBunshinShoot"
            }
          ]
        },
        {
          "$type": "TriggerBullet",
          "bulletID": 41022007,
          // "born":
          // {
          // 	"$type": "ConfigBornByAttachPoint",
          // 	"attachPointName" : "FocusAnchor",
          // 	"offset" :
          // 	{
          // 		"x": 0.0,
          // 		"y": 0.0,
          // 		"z": 1.0,
          // 	},
          // 	"direction":
          // 	{
          // 		"$type": "ConfigDirectionByDefault",
          // 		"angleOffset":
          // 		{
          // 			"x": 0.0,
          // 			"y": -4.0,
          // 			"z": 0.0,
          // 		},
          // 	}
          // },
          "born": {
            "$type": "ConfigBornByAttachPoint",
            "attachPointName": "WeaponL",
            "offset": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            },
            "direction": {
              "$type": "ConfigDirectionByAttachPoint",
              "attachPointName": "FocusAnchor",
              "attachPointTargetType": "Self",
              "angleOffset": {
                "x": 0.0,
                "y": -4.0,
                "z": 0.0
              }
            }
          },
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_Enchanted_Time",
              "value": 3,
              "forceByCaster": true,
              "compareType": "LessAndEqual"
            },
            {
              "$type": "ByUnlockTalentParam",
              "talentParam": "Venti_KageBunshinShoot"
            }
          ]
        },
        ////////////////////////////////////////////////////////////////////////////////////////
        {
          "$type": "ActCameraShake",
          "cameraShake": {
            "shakeType": "Center",
            "shakeRange": 0.2,
            "shakeTime": 0.12,
            "shakeDistance": 30,
            "extension": {
              "baseOnCamera": true
            }
          },
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_Enchanted_Time",
              "value": 4,
              "forceByCaster": true,
              "compareType": "MoreThanAndEqual"
            }
          ]
        },
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_WindMagic_Arrow_Onshooting",
          "born": {
            "$type": "ConfigBornByAttachPoint",
            "attachPointName": "WeaponR",
            "offset": {
              "x": 0.0, // + means up, - means down
              "y": 0.0, // + means left, - means right
              "z": 0.9 // + means forward, - means backward
            }
          },
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_Enchanted_Time",
              "value": 4,
              "forceByCaster": true,
              "compareType": "MoreThanAndEqual"
            }
          ]
        },
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_WindMagic_Arrow_ShootArrow",
          "born": {
            "$type": "ConfigBornByAttachPoint",
            "attachPointName": "WeaponR",
            "offset": {
              "x": 0.0, // + means up, - means down
              "y": 0.0, // + means left, - means right
              "z": 0.9 // + means forward, - means backward
            }
          },
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_Enchanted_Time",
              "value": 3,
              "forceByCaster": true,
              "compareType": "LessAndEqual"
            }
          ]
        }
      ],
      "modifiers": {
        "AimChargeMark": {
          "stacking": "MultipleRefreshNoRemove",
          "stackingOption": {
            "maxModifierNumForMultipleType": 5
          },
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_Enchanted_Time",
              "value": 1,
              "useLimitRange": true,
              "maxValue": 5,
              "minValue": 0
            }
          ]
        },
        "Hurricane_Counter": {
          "duration": 1,
          "stacking": "Refresh",
          "fireEventWhenApply": true
        }
      },
      "abilitySpecials": {}
    }
  },
  //备用，温迪平射箭头特效表现
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_ShootArrow_Light_Material",
      "onAdded": [
        //箭头拖尾特效
        {
          "$type": "AttachEffect",
          "effectPattern": "Eff_Venti_Arrow_Fly_Small"
        },
        {
          "$type": "ApplyModifier",
          "modifierName": "Venti_SkillUpgrade_1_ModifyDamage",
          "target": "Self"
        }
      ],
      "onAbilityStart": [
        //箭头命中敌人，或不同场景时的特效
        //可以在collision的时候trigger，这样不像安柏那样超多Ability，可以少写一个。
        {
          "$type": "FireHitEffect",
          "hitScene": {
            "defaultEffect": "Eff_Arrow_Hit_Earth",
            "surfaceEffect": {
              "Water": "Eff_Arrow_Hit_Water"
            }
          }
        }
      ],
      "modifiers": {
        "Venti_SkillUpgrade_1_ModifyDamage": {
          "modifierMixins": [
            {
              "$type": "ModifyDamageMixin",
              "attackTags": ["NormalAttack_01"],
              "damagePercentage": "%NormalAttack_01_Damage_Percentage"
            },
            {
              "$type": "ModifyDamageMixin",
              "attackTags": ["NormalAttack_04"],
              "damagePercentage": "%NormalAttack_04_Damage_Percentage"
            }
          ]
        }
      },
      "abilitySpecials": {
        "NormalAttack_01_Damage_Percentage": 0,
        "NormalAttack_04_Damage_Percentage": 0
      }
    }
  },

  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_ShootArrow_Heavy_Material",
      "onAdded": [
        //箭头拖尾特效
        {
          "$type": "AttachEffect",
          "effectPattern": "Eff_Venti_Arrow_Fly_Big"
        },
        {
          "$type": "ApplyModifier",
          "modifierName": "Venti_SkillUpgrade_1_ModifyDamage",
          "target": "Self"
        }
      ],
      "onAbilityStart": [
        //箭头命中敌人，或不同场景时的特效
        //可以在collision的时候trigger，这样不像安柏那样超多Ability，可以少写一个。
        {
          "$type": "FireHitEffect",
          "hitScene": {
            "defaultEffect": "Eff_Arrow_Hit_Earth",
            "surfaceEffect": {
              "Water": "Eff_Arrow_Hit_Water"
            }
          }
        }
      ],
      "modifiers": {
        "Venti_SkillUpgrade_1_ModifyDamage": {
          "modifierMixins": [
            {
              "$type": "ModifyDamageMixin",
              "attackTags": ["NormalAttack_02"],
              "damagePercentage": "%NormalAttack_02_Damage_Percentage"
            },
            {
              "$type": "ModifyDamageMixin",
              "attackTags": ["NormalAttack_03"],
              "damagePercentage": "%NormalAttack_03_Damage_Percentage"
            },
            {
              "$type": "ModifyDamageMixin",
              "attackTags": ["NormalAttack_05"],
              "damagePercentage": "%NormalAttack_05_Damage_Percentage"
            },
            {
              "$type": "ModifyDamageMixin",
              "attackTags": ["NormalAttack_06"],
              "damagePercentage": "%NormalAttack_06_Damage_Percentage"
            }
          ]
        }
      },
      "abilitySpecials": {
        "NormalAttack_02_Damage_Percentage": 0,
        "NormalAttack_03_Damage_Percentage": 0,
        "NormalAttack_05_Damage_Percentage": 0,
        "NormalAttack_06_Damage_Percentage": 0
      }
    }
  },
  //瞄准-风属性-蓄力箭
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_ShootArrow_Enchanted_Wind",
      "onAdded": [
        {
          "$type": "ApplyModifier",
          "modifierName": "ShootArrow_Enchanted_Wind"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "TriggerAttackEvent",
          "targetType": "Enemy",
          "predicates": [
            {
              "$type": "ByHasElement",
              "element": "Wind"
            }
          ],
          "attackEvent": {
            "attackPattern": {
              "$type": "ConfigAttackBox",
              "triggerType": "TriggerNoRepeat",
              "size": {
                "x": 0.1,
                "y": 0.1,
                "z": 1.0
              },
              "born": {
                "$type": "ConfigBornByCollisionPoint",
                "offset": {
                  "x": 0.0, // + means up, - means down
                  "y": 0.0, // + means left, - means right
                  "z": -0.5 // + means forward, - means backward
                }
              },
              "checkHitLayerType": "Both"
            },
            "attackInfo": {
              "canBeModifiedBy": "OriginOwner",
              "attackTag": "ExtraAttack",
              "attenuationTag": "ExtraAttack",
              "attenuationGroup": "Venti",
              "attackProperty": {
                "damagePercentage": "%DamageWithWind",
                "strikeType": "Pierce",
                "elementType": "Wind",
                "elementDurability": 25,
                "enBreak": 20,
                "enHeadBreak": 60
              },
              "hitPattern": {
                "onHitEffectName": "Eff_WindMagic_Arrow_Hit",
                "hitImpulseType": "LV2",
                "reboundRatio": 0,
                "hitHaltTime": 0.0,
                "hitHaltTimeScale": 0.01,
                "muteHitText": false
              },
              "canHitHead": true,
              "hitHeadPattern": {
                "onHitEffectName": "Eff_Arrow_Hit_Head_Wind",
                "hitImpulseType": "LV5",
                "reboundRatio": 0,
                "hitHaltTime": 0.12,
                "hitHaltTimeScale": 0.01,
                "muteHitText": false
              },
              "bulletWane": {
                "waneDelay": 0.7, // 表示从Bullet创生之后这么久，开始套用衰减规则
                "damageWaneInterval": 0.05, // 伤害衰减周期，每过这么久，进行一次伤害衰减
                "damageWaneRatio": 0.1, // 每次进行伤害衰减时，按照DamageWaneRatio的比例，在damagePercentage上进行【扣除】，最多扣除到0
                "hitLevelWaneInterval": 0.1, // 受击等级衰减周期，每过这么久，进行一次受击等级衰减，每次将当前受击等级往下降一级：Air→Heavy→Light→Shake→Mute
                "hitLevelWaneMin": "Mute", // 受击等级最少衰减为这个等级。如果原本就不高于这个等级，则不予衰减。
                "damageWaneMinRatio": 0.1,
                "elementDurabilityWaneInterval": 0.05,
                "elementDurabilityWaneRatio": 0.1,
                "elementDurabilityWaneMinRatio": 0.1
              }
            }
          }
        }
      ],
      "modifiers": {
        "ShootArrow_Enchanted_Wind": {
          "elementType": "Wind",
          "elementDurability": 25,
          "onAdded": []
        }
      },
      "abilitySpecials": {
        "DamageWithWind": 0
      }
    }
  },
  /////////没有风属性的蓄力箭//////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_ShootArrow_Enchanted_WithoutWind",
      "onAdded": [],
      "onAbilityStart": [
        {
          "$type": "TriggerAttackEvent",
          "targetType": "Enemy",
          "attackEvent": {
            "attackPattern": {
              "$type": "ConfigAttackBox",
              "triggerType": "TriggerNoRepeat",
              "size": {
                "x": 0.1,
                "y": 0.1,
                "z": 1.0
              },
              "born": {
                "$type": "ConfigBornByCollisionPoint",
                "offset": {
                  "x": 0.0, // + means up, - means down
                  "y": 0.0, // + means left, - means right
                  "z": -0.5 // + means forward, - means backward
                }
              },
              "checkHitLayerType": "Both"
            },
            "attackInfo": {
              "canBeModifiedBy": "OriginOwner",
              "attackTag": "ExtraAttack",
              "attenuationTag": "ExtraAttack",
              "attenuationGroup": "Venti",
              "attackProperty": {
                "damagePercentage": "%DamageWithoutWind",
                "strikeType": "Pierce",
                "enBreak": 10,
                "enHeadBreak": 30
              },
              "hitPattern": {
                "onHitEffectName": "default",
                "hitImpulseType": "LV2",
                "reboundRatio": 0,
                "hitHaltTime": 0.0,
                "hitHaltTimeScale": 0.01,
                "muteHitText": false
              },
              "canHitHead": true,
              "hitHeadPattern": {
                "onHitEffectName": "Eff_Arrow_Hit_Head",
                "hitImpulseType": "LV5",
                "reboundRatio": 0,
                "hitHaltTime": 0.12,
                "hitHaltTimeScale": 0.01,
                "muteHitText": false
              },
              "bulletWane": {
                "waneDelay": 0.7, // 表示从Bullet创生之后这么久，开始套用衰减规则
                "damageWaneInterval": 0.05, // 伤害衰减周期，每过这么久，进行一次伤害衰减
                "damageWaneRatio": 0.1, // 每次进行伤害衰减时，按照DamageWaneRatio的比例，在damagePercentage上进行【扣除】，最多扣除到0
                "hitLevelWaneInterval": 0.1, // 受击等级衰减周期，每过这么久，进行一次受击等级衰减，每次将当前受击等级往下降一级：Air→Heavy→Light→Shake→Mute
                "hitLevelWaneMin": "Mute", // 受击等级最少衰减为这个等级。如果原本就不高于这个等级，则不予衰减。
                "damageWaneMinRatio": 0.1,
                "elementDurabilityWaneInterval": 0.05,
                "elementDurabilityWaneRatio": 0.1,
                "elementDurabilityWaneMinRatio": 0.1
              }
            }
          }
        }
      ],
      "modifiers": {},
      "abilitySpecials": {
        "DamageWithoutWind": 0
      }
    }
  },
  //温迪蓄力一段时间后，给自己箭头上风属性
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_ShootAimingArrow_Charge",
      "abilityMixins": [
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["Aim", "FastAim"],
          "modifierName": "ShootAimingArrow_Charge_Handler"
        },
        {
          "$type": "AttachToNormalizedTimeMixin",
          "stateID": "AimLoop",
          "modifierName": "Aim_ChangeAlpha",
          "normalizeStart": 0.0,
          "normalizeEnd": 1.0
        },
        {
          "$type": "AttachToNormalizedTimeMixin",
          "stateID": "FastAimLoop",
          "modifierName": "FastAim_ChangeAlpha",
          "normalizeStart": 0.0,
          "normalizeEnd": 1.0
        },
        {
          "$type": "AttachToStateIDMixin", //播放瞄准蓄力特效
          "stateIDs": ["FastAim", "FastAimShoot"],
          "modifierName": "ShowAimingEffect"
        },
        // {
        // 	"$type": "AttachToStateIDMixin",
        // 	"stateIDs": [ "Aim", "AimShoot"],
        // 	"modifierName": "ShootAimingArrow_Charge_Add",
        // },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["Aim", "FastAim", "FastAimShoot", "AimShoot"],
          "modifierName": "ShootAimingArrow_Charge_Remove"
        },
        {
          "$type": "AttachToStateIDMixin", //播放瞄准蓄力特效
          "stateIDs": ["Aim", "AimShoot"],
          "modifierName": "ShowAimingEffect"
        }
      ],
      "onAbilityStart": [
        ///////////////////////射完了记得清一下标记及相关特效////////////////////////////////////
        {
          "$type": "AddGlobalValue",
          "key": "_Enchanted_Time",
          "value": -5,
          "useLimitRange": true,
          "maxValue": 5,
          "minValue": 0
        },
        {
          "$type": "RemoveModifier",
          "modifierName": "AimChargeMark"
        },
        {
          "$type": "RemoveModifier",
          "modifierName": "WindMagic_Arrow_Glow_Once"
        },
        {
          "$type": "RemoveModifier",
          "modifierName": "WindMagic_Arrow_Glow_WithoutWind_Once"
        }
        ////////////////////////////////////////////////////////////////////////////////////////
      ],
      "modifiers": {
        "ShootAimingArrow_Charge_Handler": {
          "thinkInterval": 0.3,
          "onThinkInterval": [
            {
              "$type": "AttachModifier",
              "modifierName": "AimChargeMark"
            }
          ]
        },
        "Aim_ChangeAlpha": {
          "modifierMixins": [
            {
              "$type": "EffectChangeAlphaMixin",
              "target": "Team",
              "startDuration": 0.2,
              "endDuration": 0.3
            }
          ]
        },
        "FastAim_ChangeAlpha": {
          "modifierMixins": [
            {
              "$type": "EffectChangeAlphaMixin",
              "target": "Team",
              "startDuration": 0.2,
              "endDuration": 0.3
            }
          ]
        },
        "ShootAimingArrow_Charge_Remove": {
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_Enchanted_Time",
              "value": -5,
              "useLimitRange": true,
              "maxValue": 5,
              "minValue": 0
            }
          ],
          "onRemoved": [
            {
              "$type": "RemoveModifier",
              "modifierName": "AimChargeMark"
            }
          ]
        },
        "AimChargeMark": {
          "stacking": "MultipleRefreshNoRemove",
          "stackingOption": {
            "maxModifierNumForMultipleType": 5
          },
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_Enchanted_Time",
              "value": 1,
              "useLimitRange": true,
              "maxValue": 5,
              "minValue": 0
            }
          ]
        },
        "ShowAimingEffect": {
          "onAdded": [
            {
              "$type": "AttachModifier",
              "modifierName": "WindMagic_Arrow_Glow_WithoutWind_Once"
            }
          ],
          "thinkInterval": 0.1,
          "onThinkInterval": [
            {
              "$type": "AttachModifier",
              "modifierName": "WindMagic_Arrow_Glow_Once",
              "predicates": [
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_Enchanted_Time",
                  "value": 4,
                  "forceByCaster": true,
                  "compareType": "MoreThanAndEqual"
                }
              ]
            },
            {
              "$type": "AttachModifier",
              "modifierName": "WindMagic_Arrow_Glow_WithoutWind_Once",
              "predicates": [
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_Enchanted_Time",
                  "value": 1,
                  "forceByCaster": true,
                  "compareType": "Equal"
                }
              ]
            }
          ],
          "onRemoved": [
            {
              "$type": "RemoveModifier",
              "modifierName": "WindMagic_Arrow_Glow_Once"
            },
            {
              "$type": "RemoveModifier",
              "modifierName": "WindMagic_Arrow_Glow_WithoutWind_Once"
            }
          ]
        },
        "WindMagic_Arrow_Glow_Once": {
          "stacking": "Unique",
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_WindMagic_Arrow_Glow_Once_02"
            },
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_WindMagic_Arrow_Glow_Loop_02"
            }
          ]
        },
        "WindMagic_Arrow_Glow_WithoutWind_Once": {
          "stacking": "Unique",
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_WindMagic_Arrow_Glow_Once_01"
            },
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_WindMagic_Arrow_Glow_Loop_01"
            }
          ]
        }
      }
    }
  },
  //温迪风属性蓄力箭的命中特效
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_ShootAimingArrow_Material",
      "onAdded": [
        {
          "$type": "AttachModifier",
          "modifierName": "ArrowEffectModifier",
          "target": "Self"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "FireHitEffect",
          "predicates": [
            {
              "$type": "ByHasElement",
              "element": "Wind"
            }
          ],
          //特效要替换
          /*"hitEntity": "Eff_WindMagic_Arrow_Hit",*/ //Eff_Arrow_Fire_OnHitting
          "hitScene": {
            "defaultEffect": "Eff_WindMagic_Arrow_Hit",
            "surfaceEffect": {
              "Water": "Eff_Arrow_Fire_Hit_Water"
            }
          }
        },
        {
          "$type": "FireHitEffect",
          "predicates": [
            {
              "$type": "ByNot",
              "predicates": [
                {
                  "$type": "ByHasElement",
                  "element": "Wind"
                }
              ]
            }
          ],
          "hitScene": {
            "defaultEffect": "Eff_Arrow_Hit_Earth",
            "surfaceEffect": {
              "Water": "Eff_Arrow_Hit_Water"
            }
          }
        }
      ],
      "modifiers": {
        "ArrowEffectModifier": {
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_WindMagic_Arrow_Fly_Particle"
            },
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_WindMagic_Arrow_Fly_Trail"
            }
          ]
        }
      }
    }
  },
  //蓄力箭。。。。。没有风属性的表现
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_ShootAimingArrowWithoutWind_Material",
      "onAdded": [
        //箭头拖尾特效
        // {
        // 	"$type": "AttachEffect",
        // 	"effectPattern": "Eff_Talent_Arrow_Fly_Trail",
        // },
        // {
        // 	"$type": "AttachEffect",
        // 	"effectPattern": "Eff_Talent_Arrow_Fly_Partcle",
        // },
        {
          "$type": "AttachEffect",
          "effectPattern": "Eff_Venti_Arrow_Fly_Big"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "FireHitEffect",

          "hitScene": {
            "defaultEffect": "Eff_Arrow_Hit_Earth",
            "surfaceEffect": {
              "Water": "Eff_Arrow_Hit_Water"
            }
          }
        }
      ],
      "modifiers": {},
      "abilitySpecials": {}
    }
  },
  ////////////////////////////////////////////////////////////////
  //
  //  Change Main Skill
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_ChangeMainSkill",
      "abilityMixins": [
        {
          "$type": "AvatarChangeSkillMixin",
          "priority": "AvatarCommon",
          "aimSkillID": 10222
        }
      ]
    }
  },

  ////////////////////////////////////////////////////////////////
  //
  //   Der Himmel Blade
  //
  ////////////////////////////////////////////////////////////////

  {
    //飞鸭，温迪
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Venti_WindBlade_GravityAdjust",
      "abilityMixins": [
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["WindBlade_RiseUp", "WindBlade_AS"],
          "modifierName": "GravityAdjust_2"
        }
      ],
      "modifiers": {
        "GravityAdjust_2": {
          "isLimitedProperties": true,
          "properties": {
            "Actor_AddGravityScale": -2.0
          }
        }
      }
    }
  },
  /////////////////////////////////////////////////////////////////////////////////
  /////////////////////////////温迪小技能第二版////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////////////

  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_WindBlade",
      "abilityMixins": [
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["WindBlade_Rise_Charge_1"],
          "modifierName": "TriggerAttack"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["WindBlade_Land"],
          "modifierName": "TriggerAttack_Land"
        },
        // {
        // 	"$type": "AttachToStateIDMixin",
        // 	"stateIDs": ["WindBlade_Rise_Charge"],
        // 	"modifierName": "WindBlade_Rise_Charge_Timer",
        // },
        {
          "$type": "SkillButtonHoldChargeMixin",
          "skillID": 10224,
          "beforeStateIDs": ["WindBlade_Rise_BS"],
          "chargeLoopStateIDs": ["WindBlade_Rise_Charge", "WindBlade_RiseUp"],
          "chargeLoopDurations": [0.3],
          "nextLoopTriggerID": "NextLoopTrigger",
          "endHoldTrigger": "EndHoldTrigger"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["WindBlade_Land"],
          "modifierName": "Eff_Venti_Harp"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["WindBlade_RiseUp", "WindBlade_AS"],
          "modifierName": "Eff_Venti_Sprite"
        }
      ],
      "onAdded": [
        {
          "$type": "ApplyModifier",
          "modifierName": "WindBlade_Nerf_Handler",
          "predicates": [
            {
              "$type": "ByUnlockTalentParam",
              "talentParam": "Venti_Constellation_2"
            }
          ]
        }
        // {
        // 	"$type" : "RemoveModifier",
        // 	"modifierName" : "WindBlade_Nerf_Handler",
        // 	"predicates" :
        // 	[
        // 		{
        // 			"$type" : "ByNot",
        // 			"predicates" :
        // 			[
        // 				{
        // 					"$type" : "ByUnlockTalentParam",
        // 					"talentParam" : "Venti_Constellation_2",
        // 				},
        // 			],
        // 		},
        // 	],
        // },
      ],
      "modifiers": {
        "TriggerAttack": {
          "onAdded": [
            {
              "$type": "CreateGadget",
              "gadgetID": 41022002,
              "campID": 1001,
              "campTargetType": "Enemy",
              "born": {
                "$type": "ConfigBornByTarget",
                "offset": {
                  "x": 0.0,
                  "y": 0.0,
                  "z": 0.2
                },
                "onGround": true,
                "alongGround": true
              }
            },
            {
              "$type": "AvatarSkillStart",
              "skillID": 10224,
              "cdRatio": 2.5
            },
            {
              "$type": "CreateGadget", //天赋的风场
              "gadgetID": 41022014,
              "campID": 1001,
              "campTargetType": "Enemy",
              "born": {
                "$type": "ConfigBornByTarget",
                "offset": {
                  "x": 0.0,
                  "y": 0.0,
                  "z": 0.0
                },
                "onGround": true
                // "alongGround": true,
              },
              "predicates": [
                {
                  "$type": "ByUnlockTalentParam",
                  "talentParam": "Venti_Constellation_4"
                }
              ]
            }
          ]
        },
        "TriggerAttack_Land": {
          "onAdded": [
            {
              "$type": "CreateGadget",
              "gadgetID": 41022003,
              "target": "SelfAttackTarget",
              "campID": 1001,
              "campTargetType": "Enemy",
              // "born":
              // {
              // 	"$type": "ConfigBornByTarget",
              // 	"offset":
              // 	{
              // 		"x": 0.0,
              // 		"y": 0.5,
              // 		"z": 0.5,
              // 	},
              // 	"onGround": true,
              // },
              "born": {
                "$type": "ConfigBornBySelectedPoint",
                "onGround": true,
                "offset": {
                  "x": 0.0,
                  "y": 0.5,
                  "z": 0.5
                }
              },
              "predicates": [
                {
                  "$type": "ByHasAttackTarget"
                }
              ]
            },
            {
              "$type": "CreateGadget",
              "gadgetID": 41022003,
              "campID": 1001,
              "campTargetType": "Enemy",
              "born": {
                "$type": "ConfigBornByTarget",
                "offset": {
                  "x": 0.0,
                  "y": 0.0,
                  "z": 5.0
                },
                "onGround": true,
                "alongGround": true
              },
              "predicates": [
                {
                  "$type": "ByNot",
                  "predicates": [
                    {
                      "$type": "ByHasAttackTarget"
                    }
                  ]
                }
              ]
            },
            {
              "$type": "AvatarSkillStart",
              "skillID": 10224,
              "cdRatio": 1
            }
          ]
        },
        "Eff_Venti_Harp": {
          "onAdded": [
            {
              "$type": "FireEffect",
              "effectPattern": "Eff_Avatar_Boy_Bow_Venti_Harp",
              "born": {
                "$type": "ConfigBornByTarget",
                "offset": {
                  "x": 0.0, // + means up, - means down
                  "y": 0.3, // + means left, - means right
                  "z": 0.3 // + means forward, - means backward
                }
              }
            }
          ]
        },
        "Eff_Venti_Sprite": {
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Avatar_Boy_Bow_Venti_WIndBlade_Sprite"
              // "born":
              // {
              // 	"$type": "ConfigBornByTarget",
              // 	"offset" :
              // 	{
              // 		"x": 0.0, // + means up, - means down
              // 		"y": 0.3, // + means left, - means right
              // 		"z": 0.3, // + means forward, - means backward
              // 	}
              // },
            }
          ]
        },
        "WindBlade_Nerf_Handler": {
          "onAttackLanded": [
            {
              "$type": "RemoveUniqueModifier",
              "target": "Target",
              "modifierName": "UNIQUE_WindBlade_Nerf",
              "predicates": [
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["Elemental_Art"]
                },
                {
                  "$type": "ByHitElement",
                  "element": "Wind"
                },
                {
                  "$type": "ByEntityTypes",
                  "entityTypes": ["Monster"]
                }
              ]
            },
            {
              "$type": "ApplyModifier",
              "modifierName": "UNIQUE_WindBlade_Nerf",
              "target": "Target",
              "predicates": [
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["Elemental_Art"]
                },
                {
                  "$type": "ByHitElement",
                  "element": "Wind"
                },
                {
                  "$type": "ByEntityTypes",
                  "entityTypes": ["Monster"]
                }
              ]
            }
          ]
        },
        "UNIQUE_WindBlade_Nerf": {
          "isUnique": true,
          "stacking": "Refresh",
          "duration": "%WindBlade_Nerf_Duration",
          "isLimitedProperties": true,
          "onAdded": [],
          "properties": {
            "Actor_WindSubHurtDelta": "%WindBlade_Nerf_SubHurtDelta",
            "Actor_PhysicalSubHurtDelta": -0.12
          }
        }
      },
      "abilitySpecials": {
        "GetElementRatio": 1.0,
        "WindBlade_Nerf_Duration": 10,
        "WindBlade_Nerf_SubHurtDelta": -0.12
      }
    }
  },

  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Venti_WindBlade_FX",
      "onAdded": [
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_Avatar_Boy_Bow_Venti_WIndBlade_Part1"
        },
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_Avatar_Boy_Bow_Venti_WIndBlade_Part2"
        },
        {
          "$type": "AttachModifier",
          "modifierName": "WindBlade_Timer_1"
        },
        {
          "$type": "AttachModifier",
          "modifierName": "WindBlade_Timer_2"
        },
        {
          "$type": "AttachModifier",
          "modifierName": "WindBlade_Handler"
        },
        {
          "$type": "AttachModifier",
          "modifierName": "WindBladeElementBall",
          "target": "Self"
        }
      ],
      "modifiers": {
        "WindBlade_Handler": {
          "onAttackLanded": [
            {
              "$type": "ApplyModifier",
              "target": "Target",
              "modifierName": "WindBlade_SlowFall",
              "predicates": [
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["Elemental_Art"]
                },
                {
                  "$type": "ByTargetWeight",
                  "logic": "LesserOrEqual",
                  "weight": 100
                }
              ]
            },
            {
              "$type": "RemoveUniqueModifier",
              "target": "Target",
              "modifierName": "UNIQUE_WindBlade_SlowFall_Nerf_Handler",
              "predicates": [
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["Elemental_Art"]
                },
                {
                  "$type": "ByTargetWeight",
                  "logic": "LesserOrEqual",
                  "weight": 100
                },
                {
                  "$type": "ByUnlockTalentParam",
                  "talentParam": "Venti_Constellation_2"
                }
              ]
            },
            {
              "$type": "ApplyModifier",
              "target": "Target",
              "modifierName": "UNIQUE_WindBlade_SlowFall_Nerf_Handler",
              "predicates": [
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["Elemental_Art"]
                },
                {
                  "$type": "ByMonsterAirState",
                  "IsAirMove": false
                },
                {
                  "$type": "ByTargetWeight",
                  "logic": "LesserOrEqual",
                  "weight": 100
                },
                {
                  "$type": "ByUnlockTalentParam",
                  "talentParam": "Venti_Constellation_2"
                }
              ]
            }
          ]
        },
        "WindBlade_Timer_1": {
          "duration": 0.6,
          "onRemoved": [
            {
              "$type": "TriggerAttackEvent",
              "targetType": "Enemy",
              "attackEvent": {
                "attackPattern": {
                  "$type": "ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "radius": 6.0,
                  "born": {
                    "$type": "ConfigBornBySelf",
                    "offset": {
                      "x": 0.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  }
                },
                "attackInfo": {
                  "canBeModifiedBy": "OriginOwner",
                  "attackTag": "Elemental_Art",
                  "attackProperty": {
                    "damagePercentage": "%WindBladeDamage",
                    "strikeType": "Pierce",
                    "elementType": "Wind",
                    "elementDurability": 50,
                    "enBreak": 150
                  },
                  "hitPattern": {
                    "onHitEffectName": "none",
                    "hitImpulseType": "LV7",
                    "reboundRatio": 0,
                    "hitHaltTime": 0.0,
                    "hitHaltTimeScale": 0.05,
                    "muteHitText": false
                  },
                  "forceCameraShake": true,
                  "cameraShake": {
                    "shakeRange": 0.08,
                    "shakeTime": 0.1
                  }
                }
              }
            },
            {
              "$type": "FireEffect",
              "effectPattern": "Eff_Avatar_Boy_Bow_Venti_WIndBlade_Part3"
            },
            {
              "$type": "ActCameraRadialBlur",
              "cameraRadialBlur": {
                "power": 0.8,
                "blurTime": 0.2,
                "fadeTime": 0.2
              }
            }
          ]
        },
        "WindBlade_Timer_2": {
          "duration": 1.2,
          "onRemoved": [
            {
              "$type": "FireEffect",
              "effectPattern": "Eff_Avatar_Boy_Bow_Venti_WIndBlade_Part4"
            }
          ]
        },
        "WindBlade_SlowFall": {
          "duration": 3.0,
          "stacking": "Unique",
          "isLimitedProperties": true,
          "properties": {
            "Actor_AddGravityScale": -1.9
          },
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Avatar_Boy_Bow_Venti_Rise_Monster",
              "predicates": [
                {
                  "$type": "ByEntityTypes",
                  "entityTypes": ["Monster"]
                }
              ]
            }
          ]
        },
        "UNIQUE_WindBlade_SlowFall_Nerf_Handler": {
          "isUnique": true,
          "stacking": "Refresh",
          "duration": 10,
          "modifierMixins": [
            {
              "$type": "AttachToMonsterAirStateMixin",
              "modifierName": "UNIQUE_WindBlade_SlowFall_Nerf",
              "IsAirMove": false
            }
          ]
        },
        "UNIQUE_WindBlade_SlowFall_Nerf": {
          "isUnique": true,
          "stacking": "Refresh",
          "properties": {
            "Actor_WindSubHurtDelta": -0.12,
            "Actor_PhysicalSubHurtDelta": -0.12
          },
          "onRemoved": [
            {
              "$type": "RemoveUniqueModifier",
              "modifierName": "UNIQUE_WindBlade_SlowFall_Nerf_Handler",
              "target": "Self"
            }
          ]
        },
        "WindBladeElementBall": {
          "onAttackLanded": [
            {
              "$type": "Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["Elemental_Art"]
                },
                {
                  "$type": "ByEntityTypes",
                  "entityTypes": ["Monster"]
                },
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "value": 0,
                  "compareType": "NoneOrEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "ApplyModifier",
                  "modifierName": "WindBladeElementBall_Base",
                  "target": "Self"
                }
              ]
            }
          ]
        },
        "WindBladeElementBall_Base": {
          "stacking": "Unique",
          "onAdded": [
            {
              "$type": "GenerateElemBall",
              "configID": 2021,
              "baseEnergy": 12,
              "ratio": "%WindBladeGetElementRatio",
              "born": {
                "$type": "ConfigBornByTarget",
                "offset": {
                  "x": 0.0,
                  "y": 0.0,
                  "z": 0.0
                }
              }
            }
          ]
        }
      },
      "abilitySpecials": {
        "WindBladeDamage": 0,
        "WindBladeGetElementRatio": 1
      }
    }
  },

  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Venti_WindBlade_FX_Land",
      "onAdded": [
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_Avatar_Boy_Bow_Venti_WIndBlade_0"
        },
        {
          "$type": "AttachModifier",
          "modifierName": "WindBlade_Land_Timer"
        },
        {
          "$type": "AttachModifier",
          "modifierName": "WindBlade_Land_Handler"
        },
        {
          "$type": "AttachModifier",
          "modifierName": "WindBladeLand_ElementBall",
          "target": "Self"
        }
      ],
      "modifiers": {
        "WindBlade_Land_Handler": {
          "onAttackLanded": [
            {
              "$type": "ApplyModifier",
              "target": "Target",
              "modifierName": "WindBlade_Land_SlowFall",
              "predicates": [
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["Elemental_Art"]
                },
                {
                  "$type": "ByTargetWeight",
                  "logic": "LesserOrEqual",
                  "weight": 100
                }
              ]
            },
            {
              "$type": "RemoveUniqueModifier",
              "target": "Target",
              "modifierName": "UNIQUE_WindBlade_Land_SlowFall_Nerf_Handler",
              "predicates": [
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["Elemental_Art"]
                },
                {
                  "$type": "ByTargetWeight",
                  "logic": "LesserOrEqual",
                  "weight": 100
                },
                {
                  "$type": "ByUnlockTalentParam",
                  "talentParam": "Venti_Constellation_2"
                }
              ]
            },
            {
              "$type": "ApplyModifier",
              "target": "Target",
              "modifierName": "UNIQUE_WindBlade_Land_SlowFall_Nerf_Handler",
              "predicates": [
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["Elemental_Art"]
                },
                {
                  "$type": "ByTargetWeight",
                  "logic": "LesserOrEqual",
                  "weight": 100
                },
                {
                  "$type": "ByUnlockTalentParam",
                  "talentParam": "Venti_Constellation_2"
                },
                {
                  "$type": "ByMonsterAirState",
                  "IsAirMove": false
                }
              ]
            }
          ]
        },
        "WindBlade_Land_Timer": {
          "duration": 0.4,
          "onRemoved": [
            {
              "$type": "TriggerAttackEvent",
              "targetType": "Enemy",
              "attackEvent": {
                "attackPattern": {
                  "$type": "ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "radius": 3.0,
                  "born": {
                    "$type": "ConfigBornBySelf",
                    "offset": {
                      "x": 0.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  }
                },
                "attackInfo": {
                  "canBeModifiedBy": "OriginOwner",
                  "attackTag": "Elemental_Art",
                  "attackProperty": {
                    "damagePercentage": "%WindBladeDamage_Land",
                    "strikeType": "Pierce",
                    "elementType": "Wind",
                    "elementDurability": 50,
                    "enBreak": 150
                  },
                  "hitPattern": {
                    "onHitEffectName": "none",
                    "hitImpulseType": "LV7",
                    "reboundRatio": 0,
                    "hitHaltTime": 0.0,
                    "hitHaltTimeScale": 0.05,
                    "muteHitText": false
                  },
                  "forceCameraShake": false,
                  "cameraShake": {
                    "shakeType": "CustomVector",
                    "shakeRange": 0.24,
                    "shakeTime": 0.12,
                    "shakeDistance": 30,
                    "shakeDir": {
                      "x": 0,
                      "y": -0.5,
                      "z": 0
                    },
                    "extension": {
                      "baseCycle": 0.72,
                      "cycleDamping": 0,
                      "rangeAttenuation": 0.3
                    }
                  }
                }
              }
            }
          ]
        },
        "WindBlade_Land_SlowFall": {
          "duration": 2.0,
          "stacking": "Unique",
          "isLimitedProperties": true,
          "properties": {
            "Actor_AddGravityScale": -1.8
          },
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Avatar_Boy_Bow_Venti_Rise_Monster",
              "predicates": [
                {
                  "$type": "ByEntityTypes",
                  "entityTypes": ["Monster"]
                }
              ]
            }
          ]
        },
        "UNIQUE_WindBlade_Land_SlowFall_Nerf_Handler": {
          "isUnique": true,
          "stacking": "Refresh",
          "duration": 10,
          "modifierMixins": [
            {
              "$type": "AttachToMonsterAirStateMixin",
              "modifierName": "UNIQUE_WindBlade_Land_SlowFall_Nerf",
              "IsAirMove": false
            }
          ]
        },
        "UNIQUE_WindBlade_Land_SlowFall_Nerf": {
          "isUnique": true,
          "stacking": "Refresh",
          "properties": {
            "Actor_WindSubHurtDelta": -0.12,
            "Actor_PhysicalSubHurtDelta": -0.12
          },
          "onRemoved": [
            {
              "$type": "RemoveUniqueModifier",
              "modifierName": "UNIQUE_WindBlade_Land_SlowFall_Nerf_Handler",
              "target": "Self"
            }
          ]
        },
        "WindBladeLand_ElementBall": {
          "onAttackLanded": [
            {
              "$type": "Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["Elemental_Art"]
                },
                {
                  "$type": "ByEntityTypes",
                  "entityTypes": ["Monster"]
                },
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "value": 0,
                  "compareType": "NoneOrEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "ApplyModifier",
                  "modifierName": "WindBladeLand_ElementBall_Base",
                  "target": "Self"
                }
              ]
            }
          ]
        },
        "WindBladeLand_ElementBall_Base": {
          "stacking": "Unique",
          "onAdded": [
            {
              "$type": "GenerateElemBall",
              "configID": 2021,
              "baseEnergy": 9,
              "ratio": "%WindBladeLand_GetElementRatio",
              "born": {
                "$type": "ConfigBornByTarget",
                "offset": {
                  "x": 0.0,
                  "y": 0.0,
                  "z": 0.0
                }
              }
            }
          ]
        }
      },
      "abilitySpecials": {
        "WindBladeDamage_Land": 0,
        "WindBladeLand_GetElementRatio": 1
      }
    }
  },

  ////////////////////////////////////////////////////////////////
  //
  //  Hurricane
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_Hurricane",
      "onAbilityStart": [
        {
          "$type": "AvatarSkillStart",
          "skillID": 10225
        },
        {
          "$type": "CreateGadget",
          "gadgetID": 41022001,
          "target": "Self",
          "campID": 1001,
          "campTargetType": "Enemy",
          "born": {
            "$type": "ConfigBornByTarget",
            "offset": {
              "x": 0.0,
              "y": 2.5,
              "z": 10.0
            },
            "onGround": true
          }
        }
      ],
      "abilityMixins": [
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["Hurricane_BS", "Hurricane"],
          "modifierName": "Hurricane_Camera"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["Hurricane_BS", "Hurricane", "Hurricane_AS"],
          "modifierName": "Hurricane_Emotion"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["Hurricane_BS", "Hurricane"],
          "modifierName": "Elemental_Burst_Invincible"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["Hurricane_BS", "Hurricane"],
          "modifierName": "Elemental_Burst_IsGhostToEnemy"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["Hurricane_BS"],
          "modifierName": "Hurricane_CameraRadialBlur"
        }
      ],
      "modifiers": {
        "Hurricane_Camera": {
          "onAdded": [
            {
              "$type": "AvatarEnterCameraShot",
              "cameraMoveCfgPath": "Camera_Venti_Hurricane",
              "predicates": [
                {
                  "$type": "ByAttackNotHitScene",
                  "attackPattern": {
                    "$type": "ConfigAttackCircle",
                    "triggerType": "TriggerNoRepeat",
                    "height": 0.4,
                    "fanAngle": 360.0,
                    "radius": 1.4,
                    "born": {
                      "$type": "ConfigBornBySelf",
                      "offset": {
                        "x": 0.0,
                        "y": 1.4,
                        "z": 0.0
                      }
                    }
                  }
                },
                {
                  "$type": "ByAvatarInWaterDepth",
                  "compareType": "LessAndEqual",
                  "depth": 0.5
                }
              ]
            },
            {
              "$type": "AvatarCameraParam",
              "cameraParam": {
                "forceRadius": 6.0,
                "forceRadiusDuration": 0,
                "shouldKeepForceRadius": true
              }
            }
            // {
            // 	"$type" : "ControlEmotion",
            // 	"toggleBlink" : false,
            // 	"toggleEmoSync" : false,
            // 	"toggleEyeKey" : false,
            // },
          ],
          "onRemoved": [
            // {
            // 	"$type" : "ControlEmotion",
            // 	"toggleBlink" : true,
            // 	"toggleEmoSync" : true,
            // 	"toggleEyeKey" : true,
            // },
            {
              "$type": "AvatarExitCameraShot"
            }
          ],
          "onAvatarOut": [
            {
              "$type": "AvatarExitCameraShot",
              "doOffStage": true
            }
          ],
          "modifierMixins": [
            {
              "$type": "TriggerWeatherMixin",
              "type": "Skill",
              "weatherPattern": "Weather_Default_SkillPreset",
              "transDuration": 0.8, //这个同时是渐入时长和渐出时长。
              "duration": 1.5 //释放时变亮的参数
              // "duration":1.4,//释放时仍然暗的参数,剑变亮时间增长了。
            }
          ]
        },
        "Hurricane_Emotion": {
          "onAdded": [
            {
              "$type": "ControlEmotion",
              "toggleBlink": false,
              "toggleEmoSync": false,
              "toggleEyeKey": false
            }
          ],
          "onRemoved": [
            {
              "$type": "ControlEmotion",
              "doOffStage": true,
              "toggleBlink": true,
              "toggleEmoSync": true,
              "toggleEyeKey": true
            }
          ]
        },
        "Hurricane_CameraRadialBlur": {
          "duration": 1.0,
          "onRemoved": [
            {
              "$type": "ActCameraRadialBlur",
              "cameraRadialBlur": {
                "power": 0.08,
                "blurTime": 0.4,
                "fadeTime": 0.1
              }
            }
          ]
        },
        "Elemental_Burst_Invincible": {
          "state": "Invincible"
        },
        "Elemental_Burst_IsGhostToEnemy": {
          "onAdded": [
            {
              "$type": "AttachAbilityStateResistance",
              "resistanceListID": 11002
            }
          ]
        }
      }
    }
  },

  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Hurricane_FX",
      "onAdded": [
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_Avatar_Boy_Bow_Venti_Hurricane"
        },
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_Avatar_Boy_Bow_Venti_Hurricane_Open"
        },
        {
          "$type": "AttachModifier",
          "modifierName": "Hurricane_WindZone"
        },
        {
          "$type": "ApplyModifier",
          "modifierName": "Hurricane_Twisted_Handler",
          "predicates": [
            {
              "$type": "ByUnlockTalentParam",
              "talentParam": "Venti_Constellation_6"
            }
          ]
        },
        {
          "$type": "RemoveModifier",
          "modifierName": "Hurricane_Twisted_Handler",
          "predicates": [
            {
              "$type": "ByNot",
              "predicates": [
                {
                  "$type": "ByUnlockTalentParam",
                  "talentParam": "Venti_Constellation_6"
                }
              ]
            }
          ]
        }
      ],
      "modifiers": {
        "Hurricane_WindZone": {
          "duration": 8,
          "modifierMixins": [
            {
              "$type": "WindZoneMixin",
              "shapeName": "CircleR15",
              "strength": 6,
              "attenuation": 0.5,
              "innerRadius": 0.2,
              "born": {
                "$type": "ConfigBornByAttachPoint",
                "attachPointName": "RootNode",
                "offset": {
                  "x": 0.0,
                  "y": -0.5,
                  "z": 0.0
                }
              },
              "targetType": "Enemy",
              // "modifierName" : "InWind",
              "predicates": [
                // {
                //   "$type": "ByTargetWeight", //WindZoneLevel = 1
                //   "logic": "LesserOrEqual", //WindZoneLevel = 1
                //   "weight": 100.0, //WindZoneLevel = 1
                // },
              ]
            }
          ],
          "thinkInterval": 0.4,
          "onThinkInterval": [
            {
              "$type": "TriggerAttackEvent",
              "targetType": "Enemy",
              "attackEvent": {
                "attackPattern": {
                  "$type": "ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "radius": 4,
                  "born": {
                    "$type": "ConfigBornBySelf",
                    "offset": {
                      "x": 0.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  }
                },
                "attackInfo": {
                  "canBeModifiedBy": "OriginOwner",
                  "attenuationTag": "Elemental_Burst_Wind",
                  "attenuationGroup": "Venti",
                  "attackTag": "Elemental_Burst",
                  "attackProperty": {
                    "damagePercentage": "%Elemental_Burst_Damage",
                    "elementType": "Wind",
                    "elementDurability": 25,
                    "elementRank": 3,
                    "enBreak": 4
                  },
                  "hitPattern": {
                    "hitImpulseType": "LV2",
                    "reboundRatio": 0,
                    "hitHaltTime": 0.0,
                    "hitHaltTimeScale": 0.05,
                    "muteHitText": false
                  },
                  "forceCameraShake": false,
                  "cameraShake": {}
                }
              }
            }
          ],
          "onAttackLanded": [
            {
              "$type": "AttachModifier",
              "modifierName": "Drag",
              "target": "Target",
              "predicates": [
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["Elemental_Burst"]
                },
                {
                  "$type": "ByTargetWeight", //WindZoneLevel = 1
                  "logic": "LesserOrEqual", //WindZoneLevel = 1
                  "weight": 100.0 //WindZoneLevel = 1
                }
              ]
            },

            {
              "$type": "ApplyModifier",
              "modifierName": "Venti_Insight_Wane",
              "target": "Target",
              "predicates": [
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["Elemental_Burst"]
                },
                {
                  "$type": "ByUnlockTalentParam",
                  "talentParam": "Venti_Insight"
                }
              ]
            }
          ]
        },
        "Drag": {
          "duration": 1.0,
          "stacking": "Refresh",
          "state": "Struggle",
          "isLimitedProperties": true,
          "properties": {
            "Actor_AddGravityScale": -2
          }
        },
        "Venti_Insight_Wane": {
          "duration": 0.4,
          "stacking": "Refresh",
          "properties": {
            "Actor_AntiCriticalDelta": "%AntiCriticalDelta",
            "Actor_SubHurtDelta": "%SubHurtDelta"
          }
        },
        "Hurricane_Twisted_Handler": {
          "onAttackLanded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "UNIQUE_Hurricane_Twisted_Wind",
              "target": "Target",
              "predicates": [
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["Elemental_Burst"]
                },
                {
                  "$type": "ByHitElement",
                  "element": "Wind"
                },
                {
                  "$type": "ByEntityTypes",
                  "entityTypes": ["Monster"]
                }
              ]
            },
            {
              "$type": "ApplyModifier",
              "modifierName": "UNIQUE_Hurricane_Twisted_Fire",
              "target": "Target",
              "predicates": [
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["Elemental_Burst"]
                },
                {
                  "$type": "ByHitElement",
                  "element": "Fire"
                },
                {
                  "$type": "ByEntityTypes",
                  "entityTypes": ["Monster"]
                }
              ]
            },
            {
              "$type": "ApplyModifier",
              "modifierName": "UNIQUE_Hurricane_Twisted_Water",
              "target": "Target",
              "predicates": [
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["Elemental_Burst"]
                },
                {
                  "$type": "ByHitElement",
                  "element": "Water"
                },
                {
                  "$type": "ByEntityTypes",
                  "entityTypes": ["Monster"]
                }
              ]
            },
            {
              "$type": "ApplyModifier",
              "modifierName": "UNIQUE_Hurricane_Twisted_Electric",
              "target": "Target",
              "predicates": [
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["Elemental_Burst"]
                },
                {
                  "$type": "ByHitElement",
                  "element": "Electric"
                },
                {
                  "$type": "ByEntityTypes",
                  "entityTypes": ["Monster"]
                }
              ]
            },
            {
              "$type": "ApplyModifier",
              "modifierName": "UNIQUE_Hurricane_Twisted_Ice",
              "target": "Target",
              "predicates": [
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["Elemental_Burst"]
                },
                {
                  "$type": "ByHitElement",
                  "element": "Ice"
                },
                {
                  "$type": "ByEntityTypes",
                  "entityTypes": ["Monster"]
                }
              ]
            }
          ]
        },
        "UNIQUE_Hurricane_Twisted_Wind": {
          "isUnique": true,
          "stacking": "Refresh",
          "duration": "%WindBreathe_Hurricane_Duration",
          "isLimitedProperties": true,
          "properties": {
            "Actor_WindSubHurtDelta": "%WindBreathe_Hurricane_SubHurtDelta"
          }
        },
        "UNIQUE_Hurricane_Twisted_Fire": {
          "isUnique": true,
          "stacking": "Refresh",
          "duration": "%WindBreathe_Hurricane_Duration",
          "isLimitedProperties": true,
          "properties": {
            "Actor_FireSubHurtDelta": "%WindBreathe_Hurricane_SubHurtDelta"
          }
        },
        "UNIQUE_Hurricane_Twisted_Water": {
          "isUnique": true,
          "stacking": "Refresh",
          "duration": "%WindBreathe_Hurricane_Duration",
          "isLimitedProperties": true,
          "properties": {
            "Actor_WaterSubHurtDelta": "%WindBreathe_Hurricane_SubHurtDelta"
          }
        },
        "UNIQUE_Hurricane_Twisted_Electric": {
          "isUnique": true,
          "stacking": "Refresh",
          "duration": "%WindBreathe_Hurricane_Duration",
          "isLimitedProperties": true,
          "properties": {
            "Actor_ElecSubHurtDelta": "%WindBreathe_Hurricane_SubHurtDelta"
          }
        },
        "UNIQUE_Hurricane_Twisted_Ice": {
          "isUnique": true,
          "stacking": "Refresh",
          "duration": "%WindBreathe_Hurricane_Duration",
          "isLimitedProperties": true,
          "properties": {
            "Actor_IceSubHurtDelta": "%WindBreathe_Hurricane_SubHurtDelta"
          }
        }
      },
      "abilitySpecials": {
        "AntiCriticalDelta": -0.08,
        "Elemental_Burst_Damage": 0,
        "SubHurtDelta": 0,
        "WindBreathe_Hurricane_Duration": 10,
        "WindBreathe_Hurricane_SubHurtDelta": -0.2
      }
    }
  },
  ////////////////////////////////////////////////////////////////
  //
  //  温迪充能技属性转换逻辑（现在是完全COPY主角的）
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_Hurricane_Mix",
      "abilityMixins": [
        {
          "$type": "ElementHittingOtherPredicatedMixin",
          "prePredicates": [
            {
              "$type": "ByAttackTags",
              "attackTags": ["Hurricane_Mix_Detect"]
            },
            {
              "$type": "ByTargetGlobalValue",
              "key": "_ABILITY_Hurricane_IsMixed",
              "forceByCaster": true,
              "value": 1,
              "compareType": "Equal"
            }
          ],
          "elementBatchPredicateds": [
            {
              "elementTypeArr": ["Fire"],
              "successActions": [
                {
                  "$type": "ApplyModifier",
                  "modifierName": "Hurricane_Mix_Fire",
                  "target": "Self"
                },
                {
                  "$type": "AddGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed",
                  "value": -1,
                  "useLimitRange": true,
                  "maxValue": 1,
                  "minValue": 0
                }
              ]
            },
            {
              "elementTypeArr": ["Water"],
              "successActions": [
                {
                  "$type": "ApplyModifier",
                  "modifierName": "Hurricane_Mix_Water",
                  "target": "Self"
                },
                {
                  "$type": "AddGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed",
                  "value": -1,
                  "useLimitRange": true,
                  "maxValue": 1,
                  "minValue": 0
                }
              ]
            },
            {
              "elementTypeArr": ["Electric"],
              "successActions": [
                {
                  "$type": "ApplyModifier",
                  "modifierName": "Hurricane_Mix_Electric",
                  "target": "Self"
                },
                {
                  "$type": "AddGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed",
                  "value": -1,
                  "useLimitRange": true,
                  "maxValue": 1,
                  "minValue": 0
                }
              ]
            },
            {
              "elementTypeArr": ["Ice", "Frozen"],
              "successActions": [
                {
                  "$type": "ApplyModifier",
                  "modifierName": "Hurricane_Mix_Ice",
                  "target": "Self"
                },
                {
                  "$type": "AddGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed",
                  "value": -1,
                  "useLimitRange": true,
                  "maxValue": 1,
                  "minValue": 0
                }
              ]
            }
          ]
        }
      ],
      "onAdded": [
        {
          "$type": "AddGlobalValue",
          "key": "_ABILITY_Hurricane_IsMixed",
          "value": 1,
          "useLimitRange": true,
          "maxValue": 1,
          "minValue": 0
        },
        {
          "$type": "ApplyModifier",
          "modifierName": "Hurricane_Mix_Start",
          "target": "Self"
        }
      ],
      "onAbilityStart": [],
      "modifiers": {
        //要在龙卷风启动1秒后生效元素混合判定机制
        "Hurricane_Mix_Start": {
          "duration": 1.0,
          "onRemoved": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Hurricane_Mix_Handler",
              "target": "Self"
            }
          ]
        },
        "Hurricane_Mix_Handler": {
          "modifierMixins": [
            {
              "$type": "AttachModifierToSelfGlobalValueMixin",
              "globalValueKey": "_ABILITY_Hurricane_IsMixed",
              "valueSteps": [-1, 0.5, 1.5],
              "removeAppliedModifier": true,
              "modifierNameSteps": ["Blank", "Blank"]
            }
          ],
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Hurricane_Mix_Detect_Pre",
              "target": "Self"
            }
          ]
        },
        "Blank": {},
        "Hurricane_Mix_Wind_Material": {
          "duration": 6.0,
          "onAdded": [
            // {
            // 	"$type" : "AttachEffect",
            // 	"effectPattern" : "Eff_Avatar_WindBreathe_Tornado_Attach_Wind",
            // },
          ]
        },
        "Hurricane_Mix_Detect_Pre": {
          "modifierMixins": [
            {
              "$type": "AttachModifierToSelfGlobalValueMixin",
              "globalValueKey": "_ABILITY_Hurricane_IsMixed",
              "valueSteps": [-1, 0.5, 1.5],
              "removeAppliedModifier": true,
              "modifierNameSteps": ["Blank", "Hurricane_Mix_Detect"]
            }
          ]
        },
        "Hurricane_Mix_Detect": {
          "thinkInterval": 0.3,
          "onThinkInterval": [
            {
              "$type": "TriggerAttackEvent",
              "targetType": "All",
              "attackEvent": {
                "attackPattern": {
                  "$type": "ConfigAttackBox",
                  "triggerType": "TriggerNoRepeat",
                  "size": {
                    "x": 2.5,
                    "y": 5.0,
                    "z": 2.5
                  },
                  "born": {
                    "$type": "ConfigBornByAttachPoint",
                    "attachPointName": "RootNode",
                    "offset": {
                      "x": 0.0,
                      "y": 0.0,
                      "z": -1.0
                    }
                  }
                },
                "attackInfo": {
                  "attackTag": "Hurricane_Mix_Detect",
                  "attackProperty": {
                    "damagePercentage": 0,
                    "elementType": "AntiFire",
                    "elementDurability": 1,
                    "elementRank": 1.0,
                    "enBreak": 0
                  }
                }
              }
            }
          ]
        },
        "Hurricane_Mix_Fire": {
          "stacking": "Unique",
          "duration": 8.0,
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Hurricane_Mix_Fire_Damage"
            },
            {
              "$type": "ApplyModifier",
              "modifierName": "Hurricane_Mix_Fire_Material"
            }
          ]
        },
        "Hurricane_Mix_Fire_Damage": {
          "duration": 6.0,
          "thinkInterval": 0.4,
          "onThinkInterval": [
            {
              "$type": "TriggerAttackEvent",
              "targetType": "Enemy",
              "attackEvent": {
                "attackPattern": {
                  "$type": "ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "radius": 6,
                  "born": {
                    "$type": "ConfigBornBySelf",
                    "offset": {
                      "x": 0.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  }
                },
                "attackInfo": {
                  "canBeModifiedBy": "OriginOwner",
                  "attenuationTag": "Elemental_Burst_Fire",
                  "attenuationGroup": "Venti",
                  "attackTag": "Elemental_Burst",
                  "attackProperty": {
                    "damagePercentage": "%Hurricane_Mix_Damage",
                    "elementType": "Fire",
                    "elementDurability": 25,
                    "elementRank": 1.5,
                    "enBreak": 0
                  }
                }
              }
            }
          ]
        },
        "Hurricane_Mix_Fire_Material": {
          "onAdded": [
            // {
            // 	"$type": "AttachEffect",
            // 	"effectPattern": "Eff_Avatar_WindBreathe_Tornado_Attach_Fire",
            // },
            {
              "$type": "SendEffectTrigger",
              "parameter": "Get_Fire"
            },
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_Hurricane_IsMixed_Fire",
              "value": 1,
              "useLimitRange": true,
              "maxValue": 1,
              "minValue": 0
            }
          ]
        },
        "Hurricane_Mix_Water": {
          "stacking": "Unique",
          "duration": 8.0,
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Hurricane_Mix_Water_Damage"
            },
            {
              "$type": "ApplyModifier",
              "modifierName": "Hurricane_Mix_Water_Material"
            }
          ]
        },
        "Hurricane_Mix_Water_Damage": {
          "duration": 6.0,
          "thinkInterval": 0.4,
          "onThinkInterval": [
            {
              "$type": "TriggerAttackEvent",
              "targetType": "Enemy",
              "attackEvent": {
                "attackPattern": {
                  "$type": "ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "radius": 6,
                  "born": {
                    "$type": "ConfigBornBySelf",
                    "offset": {
                      "x": 0.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  }
                },
                "attackInfo": {
                  "canBeModifiedBy": "OriginOwner",
                  "attenuationTag": "Elemental_Burst_Water",
                  "attenuationGroup": "Venti",
                  "attackTag": "Elemental_Burst",
                  "attackProperty": {
                    "damagePercentage": "%Hurricane_Mix_Damage",
                    "elementType": "Water",
                    "elementDurability": 25,
                    "elementRank": 1.5,
                    "enBreak": 0
                  }
                }
              }
            }
          ]
        },
        "Hurricane_Mix_Water_Material": {
          "onAdded": [
            // {
            // 	"$type": "AttachEffect",
            // 	"effectPattern": "Eff_Avatar_WindBreathe_Tornado_Attach_Water",
            // },
            {
              "$type": "SendEffectTrigger",
              "parameter": "Get_Water"
            },
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_Hurricane_IsMixed_Water",
              "value": 1,
              "useLimitRange": true,
              "maxValue": 1,
              "minValue": 0
            }
          ]
        },
        "Hurricane_Mix_Electric": {
          "stacking": "Unique",
          "duration": 8.0,
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Hurricane_Mix_Electric_Damage"
            },
            {
              "$type": "ApplyModifier",
              "modifierName": "Hurricane_Mix_Electric_Material"
            }
          ]
        },
        "Hurricane_Mix_Electric_Damage": {
          "duration": 6.0,
          "thinkInterval": 0.4,
          "onThinkInterval": [
            {
              "$type": "TriggerAttackEvent",
              "targetType": "Enemy",
              "attackEvent": {
                "attackPattern": {
                  "$type": "ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "radius": 6,
                  "born": {
                    "$type": "ConfigBornBySelf",
                    "offset": {
                      "x": 0.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  }
                },
                "attackInfo": {
                  "canBeModifiedBy": "OriginOwner",
                  "attackTag": "Elemental_Burst",
                  "attenuationTag": "Elemental_Burst_Electric",
                  "attenuationGroup": "Venti",
                  "attackProperty": {
                    "damagePercentage": "%Hurricane_Mix_Damage",
                    "elementType": "Electric",
                    "elementDurability": 25,
                    "elementRank": 1.5,
                    "enBreak": 0
                  }
                }
              }
            }
          ]
        },
        "Hurricane_Mix_Electric_Material": {
          "onAdded": [
            // {
            // 	"$type": "AttachEffect",
            // 	"effectPattern": "Eff_Avatar_WindBreathe_Tornado_Attach_Electric",
            // },
            {
              "$type": "SendEffectTrigger",
              "parameter": "Get_Electric"
            },
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_Hurricane_IsMixed_Electric",
              "value": 1,
              "useLimitRange": true,
              "maxValue": 1,
              "minValue": 0
            }
          ]
        },
        "Hurricane_Mix_Ice": {
          "stacking": "Unique",
          "duration": 8.0,
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Hurricane_Mix_Ice_Damage"
            },
            {
              "$type": "ApplyModifier",
              "modifierName": "Hurricane_Mix_Ice_Material"
            }
          ]
        },
        "Hurricane_Mix_Ice_Damage": {
          "duration": 6.0,
          "thinkInterval": 0.4,
          "onThinkInterval": [
            {
              "$type": "TriggerAttackEvent",
              "targetType": "Enemy",
              "attackEvent": {
                "attackPattern": {
                  "$type": "ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "radius": 6,
                  "born": {
                    "$type": "ConfigBornBySelf",
                    "offset": {
                      "x": 0.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  }
                },
                "attackInfo": {
                  "canBeModifiedBy": "OriginOwner",
                  "attackTag": "Elemental_Burst",
                  "attenuationTag": "Elemental_Burst_Ice",
                  "attenuationGroup": "Venti",
                  "attackProperty": {
                    "damagePercentage": "%Hurricane_Mix_Damage",
                    "elementType": "Ice",
                    "elementDurability": 25,
                    "elementRank": 1.5,
                    "enBreak": 0
                  }
                }
              }
            }
          ]
        },
        "Hurricane_Mix_Ice_Material": {
          "onAdded": [
            // {
            // 	"$type": "AttachEffect",
            // 	"effectPattern": "Eff_Avatar_WindBreathe_Tornado_Attach_Ice",
            // },
            {
              "$type": "SendEffectTrigger",
              "parameter": "Get_Ice"
            },
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_Hurricane_IsMixed_Ice",
              "value": 1,
              "useLimitRange": true,
              "maxValue": 1,
              "minValue": 0
            }
          ]
        }
      },
      "abilitySpecials": {
        "Hurricane_Mix_Damage": 0
      }
    }
  },

  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_Hurricane_Dissipate",
      "onAdded": [
        {
          "$type": "ApplyModifier",
          "modifierName": "Hurricane_Life_Timer"
        }
      ],
      "onAbilityStart": [],
      "modifiers": {
        "Hurricane_Life_Timer": {
          "duration": 8.1, //多5秒时间播消失特效
          "onRemoved": [
            {
              "$type": "SendEffectTrigger",
              "parameter": "Wind_Dissipate",
              "predicates": [
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed",
                  "value": 1,
                  "compareType": "Equal"
                }
              ]
            },
            {
              "$type": "SendEffectTrigger",
              "parameter": "Fire_Dissipate",
              "predicates": [
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed",
                  "value": 0,
                  "compareType": "Equal"
                },
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed_Fire",
                  "value": 1,
                  "compareType": "MoreThanAndEqual"
                }
              ]
            },
            {
              "$type": "SendEffectTrigger",
              "parameter": "Water_Dissipate",
              "predicates": [
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed",
                  "value": 0,
                  "compareType": "Equal"
                },
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed_Water",
                  "value": 1,
                  "compareType": "MoreThanAndEqual"
                }
              ]
            },
            {
              "$type": "SendEffectTrigger",
              "parameter": "Electric_Dissipate",
              "predicates": [
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed",
                  "value": 0,
                  "compareType": "Equal"
                },
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed_Electric",
                  "value": 1,
                  "compareType": "MoreThanAndEqual"
                }
              ]
            },
            {
              "$type": "SendEffectTrigger",
              "parameter": "Ice_Dissipate",
              "predicates": [
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed",
                  "value": 0,
                  "compareType": "Equal"
                },
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed_Ice",
                  "value": 1,
                  "compareType": "MoreThanAndEqual"
                }
              ]
            },
            {
              "$type": "ApplyModifier",
              "modifierName": "Hurricane_Destroy"
            }
          ]
        },
        "Hurricane_Destroy": {
          "duration": 6,
          "onRemoved": [
            {
              "$type": "KillSelf"
            }
          ]
        }
      }
    }
  },

  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_Hurricane_DropBall",
      "onAdded": [
        {
          "$type": "ApplyModifier",
          "modifierName": "Hurricane_ElementBall_Handler",
          "target": "Self",
          "predicates": [
            {
              "$type": "ByUnlockTalentParam",
              "talentParam": "Venti_Enhanced_Hurricane"
            }
          ]
        }
      ],
      "modifiers": {
        "Hurricane_ElementBall_Handler": {
          "duration": 8,
          "onRemoved": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Hurricane_GetElement_Wind",
              "target": "OriginOwner"
            },
            {
              "$type": "Predicated",
              "target": "Self",
              "targetPredicates": [
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed",
                  "value": 0,
                  "compareType": "Equal"
                },
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed_Fire",
                  "value": 1,
                  "compareType": "MoreThanAndEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "ApplyModifier",
                  "modifierName": "Hurricane_GetElement_Fire",
                  "target": "AllPlayerAvatars",
                  "predicates": [
                    {
                      "$type": "ByTargetPositionToSelfPosition",
                      "compareType": "XZ",
                      "value": 40,
                      "logic": "LesserOrEqual"
                    }
                  ]
                }
              ]
            },
            {
              "$type": "Predicated",
              "target": "Self",
              "targetPredicates": [
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed",
                  "value": 0,
                  "compareType": "Equal"
                },
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed_Water",
                  "value": 1,
                  "compareType": "MoreThanAndEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "ApplyModifier",
                  "modifierName": "Hurricane_GetElement_Water",
                  "target": "AllPlayerAvatars",
                  "predicates": [
                    {
                      "$type": "ByTargetPositionToSelfPosition",
                      "compareType": "XZ",
                      "value": 40,
                      "logic": "LesserOrEqual"
                    }
                  ]
                }
              ]
            },
            {
              "$type": "Predicated",
              "target": "Self",
              "targetPredicates": [
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed",
                  "value": 0,
                  "compareType": "Equal"
                },
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed_Electric",
                  "value": 1,
                  "compareType": "MoreThanAndEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "ApplyModifier",
                  "modifierName": "Hurricane_GetElement_Electric",
                  "target": "AllPlayerAvatars",
                  "predicates": [
                    {
                      "$type": "ByTargetPositionToSelfPosition",
                      "compareType": "XZ",
                      "value": 40,
                      "logic": "LesserOrEqual"
                    }
                  ]
                }
              ]
            },
            {
              "$type": "Predicated",
              "target": "Self",
              "targetPredicates": [
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed",
                  "value": 0,
                  "compareType": "Equal"
                },
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_ABILITY_Hurricane_IsMixed_Ice",
                  "value": 1,
                  "compareType": "MoreThanAndEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "ApplyModifier",
                  "modifierName": "Hurricane_GetElement_Ice",
                  "target": "AllPlayerAvatars",
                  "predicates": [
                    {
                      "$type": "ByTargetPositionToSelfPosition",
                      "compareType": "XZ",
                      "value": 40,
                      "logic": "LesserOrEqual"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "Hurricane_GetElement_Wind": {
          "duration": 1.0,
          "stacking": "Unique",
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Hurricane_GetElement_Wind_Handler",
              "predicates": [
                {
                  "$type": "ByAvatarElementType",
                  "elementType": "Wind"
                }
              ],
              "doOffStage": true
            }
          ]
        },
        "Hurricane_GetElement_Wind_Handler": {
          "duration": 1.1,
          "stacking": "Unique",
          "onAdded": [
            {
              "$type": "ReviveElemEnergy",
              "value": 15,
              "target": "Self",
              "doOffStage": true
            }
          ]
        },
        "Hurricane_GetElement_Fire": {
          "duration": 1.0,
          "stacking": "Unique",
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Hurricane_GetElement_Fire_Handler",
              "predicates": [
                {
                  "$type": "ByAvatarElementType",
                  "elementType": "Fire"
                }
              ],
              "doOffStage": true
            }
          ]
        },
        "Hurricane_GetElement_Fire_Handler": {
          "duration": 1.1,
          "stacking": "Unique",
          "onAdded": [
            {
              "$type": "ReviveElemEnergy",
              "value": 15,
              "target": "Self",
              "doOffStage": true
            }
          ]
        },
        "Hurricane_GetElement_Water": {
          "duration": 1.0,
          "stacking": "Unique",
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Hurricane_GetElement_Water_Handler",
              "predicates": [
                {
                  "$type": "ByAvatarElementType",
                  "elementType": "Water"
                }
              ],
              "doOffStage": true
            }
          ]
        },
        "Hurricane_GetElement_Water_Handler": {
          "duration": 1.1,
          "stacking": "Unique",
          "onAdded": [
            {
              "$type": "ReviveElemEnergy",
              "value": 15,
              "target": "Self",
              "doOffStage": true
            }
          ]
        },
        "Hurricane_GetElement_Electric": {
          "duration": 1.0,
          "stacking": "Unique",
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Hurricane_GetElement_Electric_Handler",
              "predicates": [
                {
                  "$type": "ByAvatarElementType",
                  "elementType": "Electric"
                }
              ],
              "doOffStage": true
            }
          ]
        },
        "Hurricane_GetElement_Electric_Handler": {
          "duration": 1.1,
          "stacking": "Unique",
          "onAdded": [
            {
              "$type": "ReviveElemEnergy",
              "value": 15,
              "target": "Self",
              "doOffStage": true
            }
          ]
        },
        "Hurricane_GetElement_Ice": {
          "duration": 1.0,
          "stacking": "Unique",
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Hurricane_GetElement_Ice_Handler",
              "predicates": [
                {
                  "$type": "ByAvatarElementType",
                  "elementType": "Ice"
                }
              ],
              "doOffStage": true
            }
          ]
        },
        "Hurricane_GetElement_Ice_Handler": {
          "duration": 1.1,
          "stacking": "Unique",
          "onAdded": [
            {
              "$type": "ReviveElemEnergy",
              "value": 15,
              "target": "Self",
              "doOffStage": true
            }
          ]
        }
      }
    }
  },
  ////////////////////////////////////////////////////////////////
  //
  //  以下为天赋所添加的技能
  //
  ////////////////////////////////////////////////////////////////

  // //温迪吃球后强化自身的风属性攻击力
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Venti_Talent_Windfury",
      "isDynamicAbility": true,
      "abilityMixins": [
        {
          "$type": "DoActionByEnergyChangeMixin",
          "elementTypes": [
            "Wind",
            "Fire",
            "Water",
            "Electric",
            "Rock",
            "Ice",
            "Grass"
          ],
          "doWhenEnergyMax": true,
          "onGainEnergyByBall": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Venti_Windfury",
              "target": "Self"
            }
          ]
        }
      ],
      "modifiers": {
        "Venti_Windfury": {
          "duration": 10,
          "isLimitedProperties": true,
          "properties": {
            "Actor_WindAddHurtDelta": "%Windfury_DamageUp"
          },
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Avatar_Boy_Bow_Venti_Wind_AttackEnhance"
            }
          ]
        }
      },
      "abilitySpecials": {
        "Windfury_DamageUp": 0.25
      }
    }
  },
  // 提升温迪得飞行速度
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_FlyChampion",
      "abilityMixins": [
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["Fly"],
          "modifierName": "StaminaReduce"
        }
      ],
      "modifiers": {
        "StaminaReduce": {
          "modifierMixins": [],
          "properties": {
            "Actor_CostStaminaRatio": "%StaminaReduce"
          }
        }
      },
      "abilitySpecials": {
        "StaminaReduce": -0.08
      }
    }
  },

  //温迪的全队滑翔体力降低

  // {
  // 	"Default":
  // 	{
  // 		"$type": "ConfigAbility",
  // 		"abilityName": "Avatar_Venti_Talent_ReduceFlyStamina2",
  // 		"onAdded": [
  // 		  {
  // 		    "$type": "ApplyModifier",
  // 		    "modifierName": "CheckMixin",
  // 		    "doOffStage": true,
  // 		  },
  // 		],
  // 		// "abilityMixins":
  // 		// [
  // 		// 	{
  // 		// 		"$type": "AttachModifierToSelfGlobalValueMixin",
  // 		// 		"globalValueKey": "_ABILITY_Talent_ReduceFlyStamina_Trigger",
  // 		// 		"valueSteps" : [-0.5, 0.5, 1.5],
  // 		// 		"removeAppliedModifier": true,
  // 		// 		"modifierNameSteps" : ["Blank", "Talent_ReduceFlyStamina_Trigger"],
  // 		// 	},
  // 		// ],
  // 		"modifiers":
  // 		{
  // 		  "CheckMixin": {
  // 		    "modifierMixins": [
  // 		      {
  // 		        "$type": "AttachModifierToSelfGlobalValueMixin",
  // 		        "globalValueKey": "_ABILITY_Talent_ReduceFlyStamina_Trigger",
  // 		        "defaultGlobalValueOnCreate": 0,
  // 		        "valueSteps": [ -0.5, 0.5, 1.5 ],
  // 		        "removeAppliedModifier": true,
  // 		        "modifierNameSteps": [ "Blank", "Talent_ReduceFlyStamina_Trigger" ],
  // 		      },
  // 		    ],
  // 		  },
  // 		  "Blank": {
  // 		    "duration": 0.1,
  // 		  },
  // 		  "Talent_ReduceFlyStamina_Trigger": {
  // 		    "duration": 0.1,
  // 		    "onRemoved": [
  // 		      {
  // 		        "$type": "AddGlobalValue",
  // 		        "key": "_ABILITY_Team_Talent_ReduceFlyStamina",
  // 		        "value": 2,
  // 		        "useLimitRange": true,
  // 		        "maxValue": 2,
  // 		        "minValue": 0,
  // 		        "doOffStage": true,
  // 		        "target": "Team",
  // 		      },
  // 		    ],
  // 		  },
  // 		},
  // 	}
  // },

  ////////////////////////////////////////////////////////////////
  //
  //  天赋 队伍滑翔体力消耗降低 ver1.0.1(on team)
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_FlyStamina_Reduction",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "AttachModifier", //从interval里复制的
          "target": "CurTeamAvatars",
          "modifierName": "UNIQUE_FlyStaminaReduction",
          "doOffStage": true
        },
        {
          "$type": "AttachModifier",
          "modifierName": "Venti_FlyStaminaReduction_Handler",
          "doOffStage": true
        }
      ],
      "modifiers": {
        "Venti_FlyStaminaReduction_Handler": {
          "thinkInterval": 5,
          "onThinkInterval": [
            {
              "$type": "AttachModifier",
              "target": "CurTeamAvatars",
              "modifierName": "UNIQUE_FlyStaminaReduction",
              "doOffStage": true
            }
          ]
        },
        "UNIQUE_FlyStaminaReduction": {
          "isUnique": true,
          "modifierMixins": [
            {
              "$type": "AttachToStateIDMixin",
              "stateIDs": ["Fly"],
              "modifierName": "FlyStamina_Reduction"
            }
          ]
        },
        "FlyStamina_Reduction": {
          "properties": {
            "Actor_CostStaminaRatio": -0.2
          }
        }
      }
    }
  },

  // {
  //   "Default":
  //   {
  //     "$type":"ConfigAbility",
  //     "abilityName":"Avatar_Venti_Talent_ReduceFlyStamina2",
  //     "onAdded":
  //     [
  //       {
  //         "$type":"AttachModifier",
  //         "modifierName":"UNIQUE_WatchingCurAvatarModifier_Fly",
  //         "target":"Self",
  //         "doOffStage":true,
  //       },
  //       // {
  //       //   "$type":"AttachModifier",
  //       //   "modifierName":"UNIQUE_WatchingCurAvatarModifier_Fly3",
  //       //   "target":"Self",
  //       //   "doOffStage":true,
  //       // }
  //     ],
  //     "modifiers":
  //     {
  //     	// "UNIQUE_WatchingCurAvatarModifier_Fly3":
  //     	// {
  //      //    "isUnique":true,
  //      //    "modifierMixins":
  //      //    [
  //      //      {
  //      //        "$type":"DoActionByTeamStatusMixin",
  //      //        "modifierName":"UNIQUE_WatchingCurAvatarModifier_Fly",
  //      //        "doOffStage":true,
  //      //      },
  //      //    ]
  //     	// },
  //       "UNIQUE_WatchingCurAvatarModifier_Fly":
  //       {
  //         "isUnique":true,
  //         "modifierMixins":
  //         [
  //           {
  //             "$type":"CurLocalAvatarMixin",
  //             "modifierName":"UNIQUE_FlyStaminaReduction_Handler1",
  //             "doOffStage":true,
  //           }
  //         ]
  //       },

  //       "UNIQUE_FlyStaminaReduction_Handler1":
  //       {
  //         "isUnique":true,
  //         "onAdded":
  //         [
  //           {
  //             "$type":"RemoveUniqueModifier",
  //             "modifierName":"UNIQUE_FlyStaminaReduction_Handler",
  //          "target":"CurLocalAvatar",
  //             "doOffStage":true,
  //           },
  //      	{
  //          "$type":"AttachModifier",
  //          "modifierName":"UNIQUE_FlyStaminaReduction_Handler",
  //          "target":"CurLocalAvatar",
  //             "doOffStage":true,
  //      	},
  //         ]
  //       },

  //       "UNIQUE_FlyStaminaReduction_Handler":
  //       {
  //         "isUnique":true,
  //         "modifierMixins":
  //         [
  //           {
  //             "$type": "AttachToStateIDMixin",
  //             "stateIDs": [ "Fly" ],
  //             "modifierName": "Avatar_Venti_Talent_ReduceFlyStamina",
  //           }
  //         ],

  //       },
  //       "Avatar_Venti_Talent_ReduceFlyStamina":
  //       {
  //         "properties":
  //         {
  //           "Actor_CostStaminaRatio":"%Venti_Talent_ReduceFlyStamina",
  //         },
  //       },
  //     },
  //     "abilitySpecials":
  //     {
  //       "Venti_Talent_ReduceFlyStamina":-0.3,
  //     },
  //   }
  // },

  // 分裂箭，目标是人马同款！(这里只负责表现)
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Venti_KageBunshinShoot",
      "abilityMixins": [],
      "modifiers": {}
    }
  },
  //////////////////////////////////////////////////////////////////////////
  ///温迪天赋分裂箭的配置，太多了，拎出来
  /////////////////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_Talnet_ShootArrow_Enchanted_Wind",
      "onAdded": [
        {
          "$type": "ApplyModifier",
          "modifierName": "Talent_ShootArrow_Enchanted_Wind"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "TriggerAttackEvent",
          "targetType": "Enemy",
          "attackEvent": {
            "attackPattern": {
              "$type": "ConfigAttackBox",
              "triggerType": "TriggerNoRepeat",
              "size": {
                "x": 0.1,
                "y": 0.1,
                "z": 1.0
              },
              "born": {
                "$type": "ConfigBornByCollisionPoint",
                "offset": {
                  "x": 0.0, // + means up, - means down
                  "y": 0.0, // + means left, - means right
                  "z": -0.5 // + means forward, - means backward
                }
              },
              "checkHitLayerType": "Both"
            },
            "attackInfo": {
              "canBeModifiedBy": "OriginOwner",
              "attackTag": "ExtraAttack",
              "attenuationTag": "ExtraAttack",
              "attenuationGroup": "Venti",
              "attackProperty": {
                "damagePercentage": "%Talent_DamageWithWind*0.33",
                "strikeType": "Pierce",
                "elementType": "Wind",
                "elementDurability": 25,
                "enBreak": 2,
                "enHeadBreak": 6
              },
              "hitPattern": {
                "onHitEffectName": "Eff_WindMagic_Arrow_Hit",
                "hitImpulseType": "LV2",
                "reboundRatio": 0,
                "hitHaltTime": 0.0,
                "hitHaltTimeScale": 0.01,
                "muteHitText": false
              },
              "canHitHead": true,
              "hitHeadPattern": {
                "onHitEffectName": "Eff_Arrow_Hit_Head_Wind",
                "hitImpulseType": "LV5",
                "reboundRatio": 0,
                "hitHaltTime": 0.12,
                "hitHaltTimeScale": 0.01,
                "muteHitText": false
              },
              "bulletWane": {
                "waneDelay": 0.7, // 表示从Bullet创生之后这么久，开始套用衰减规则
                "damageWaneInterval": 0.05, // 伤害衰减周期，每过这么久，进行一次伤害衰减
                "damageWaneRatio": 0.1, // 每次进行伤害衰减时，按照DamageWaneRatio的比例，在damagePercentage上进行【扣除】，最多扣除到0
                "hitLevelWaneInterval": 0.1, // 受击等级衰减周期，每过这么久，进行一次受击等级衰减，每次将当前受击等级往下降一级：Air→Heavy→Light→Shake→Mute
                "hitLevelWaneMin": "Mute", // 受击等级最少衰减为这个等级。如果原本就不高于这个等级，则不予衰减。
                "damageWaneMinRatio": 0.1,
                "elementDurabilityWaneInterval": 0.05,
                "elementDurabilityWaneRatio": 0.1,
                "elementDurabilityWaneMinRatio": 0.1
              }
            }
          }
        }
      ],
      "modifiers": {
        "Talent_ShootArrow_Enchanted_Wind": {
          "elementType": "Wind",
          "elementDurability": 50,
          "onAdded": []
        }
      },
      "abilitySpecials": {
        "Talent_DamageWithWind": 0
      }
    }
  },
  //////withoutwind///////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_Talnet_ShootArrow_Enchanted_WithoutWind",
      "onAbilityStart": [
        {
          "$type": "TriggerAttackEvent",
          "targetType": "Enemy",
          "attackEvent": {
            "attackPattern": {
              "$type": "ConfigAttackBox",
              "triggerType": "TriggerNoRepeat",
              "size": {
                "x": 0.1,
                "y": 0.1,
                "z": 1.0
              },
              "born": {
                "$type": "ConfigBornByCollisionPoint",
                "offset": {
                  "x": 0.0, // + means up, - means down
                  "y": 0.0, // + means left, - means right
                  "z": -0.5 // + means forward, - means backward
                }
              },
              "checkHitLayerType": "Both"
            },
            "attackInfo": {
              "canBeModifiedBy": "OriginOwner",
              "attenuationTag": "ExtraAttack",
              "attenuationGroup": "Venti",
              "attackTag": "ExtraAttack",
              "attackProperty": {
                "damagePercentage": "%Talent_DamageWithoutWind*0.33",
                "strikeType": "Pierce",
                "enBreak": 1,
                "enHeadBreak": 3
              },
              "hitPattern": {
                "onHitEffectName": "default",
                "hitImpulseType": "LV2",
                "reboundRatio": 0,
                "hitHaltTime": 0.0,
                "hitHaltTimeScale": 0.01,
                "muteHitText": false
              },
              "canHitHead": true,
              "hitHeadPattern": {
                "onHitEffectName": "Eff_Arrow_Hit_Head",
                "hitImpulseType": "LV5",
                "reboundRatio": 0,
                "hitHaltTime": 0.12,
                "hitHaltTimeScale": 0.01,
                "muteHitText": false
              },
              "bulletWane": {
                "waneDelay": 0.7, // 表示从Bullet创生之后这么久，开始套用衰减规则
                "damageWaneInterval": 0.05, // 伤害衰减周期，每过这么久，进行一次伤害衰减
                "damageWaneRatio": 0.1, // 每次进行伤害衰减时，按照DamageWaneRatio的比例，在damagePercentage上进行【扣除】，最多扣除到0
                "hitLevelWaneInterval": 0.1, // 受击等级衰减周期，每过这么久，进行一次受击等级衰减，每次将当前受击等级往下降一级：Air→Heavy→Light→Shake→Mute
                "hitLevelWaneMin": "Mute", // 受击等级最少衰减为这个等级。如果原本就不高于这个等级，则不予衰减。
                "damageWaneMinRatio": 0.1,
                "elementDurabilityWaneInterval": 0.05,
                "elementDurabilityWaneRatio": 0.1,
                "elementDurabilityWaneMinRatio": 0.1
              }
            }
          }
        }
      ],
      "modifiers": {},
      "abilitySpecials": {
        "Talent_DamageWithoutWind": 0
      }
    }
  },

  /////////////////////////////////////////////////////////
  //
  // 温迪天赋风场
  //
  /////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_WindField",
      "onAdded": [
        {
          "$type": "ApplyModifier",
          "modifierName": "WindField"
        }
      ],
      "modifiers": {
        "WindField": {
          "duration": 20,
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Item_WindSeed_WindField"
            }
          ]
        }
      }
    }
  },

  ////////////////////////////////////////////////////////////////
  //
  //  空中攻击
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Venti_FallingAnthem",
      "abilityMixins": [
        {
          "$type": "AvatarChangeSkillMixin",
          "priority": "AvatarCommon",
          "jumpSkillID": 5022010,
          "flySkillID": 5022010
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FallingAnthem_BS"],
          "modifierName": "FallingAnthem_BS_Material"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FallingAnthem_Loop"],
          "modifierName": "FallingAnthem_Loop_Normal"
        },
        {
          "$type": "AttachToAnimatorStateIDMixin",
          "stateIDs": [
            "FallingAnthem_BS_2",
            "FallingAnthem_Loop",
            "FallingAnthem_Loop_Low"
          ],
          "modifierName": "FallingAnthem_LoopDamage"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FallingAnthem_BS"],
          "modifierName": "FallingAnthem_BS_VelocityForce_Initialize"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": [
            "FallingAnthem_BS",
            "FallingAnthem_Loop",
            "FallingAnthem_AS_1",
            "FallingAnthem_AS_2"
          ],
          "modifierName": "FallingAnthem_Height_Detect"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": [
            "FallingAnthem_BS",
            "FallingAnthem_Loop",
            "FallingAnthem_AS_1",
            "FallingAnthem_AS_2"
          ],
          "modifierName": "FallingAnthem_FallingDamageImmune_01"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FallingAnthem_BS", "FallingAnthem_Loop"],
          "modifierName": "Inertia"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": [
            "FallingAnthem_BS",
            "FallingAnthem_Loop",
            "FallingAnthem_AS_1",
            "FallingAnthem_AS_2"
          ],
          "modifierName": "FallingAnthem_OverHead_Camera"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FallingAnthem_BS"],
          "modifierName": "FallingAnthem_ClearVelocityForce"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FallingAnthem_BS", "FallingAnthem_Loop"],
          "modifierName": "FallingAnthem_AttachEffect_BS_01" //气流效果
        }
      ],
      "onAdded": [],
      "onAbilityStart": [
        //普通状态第一段
        {
          "$type": "TriggerAttackEvent",
          "targetType": "Enemy",
          "attackEvent": {
            "attackPattern": {
              "$type": "ConfigAttackCircle",
              "triggerType": "TriggerNoRepeat",
              "scale": 1.0,
              "height": 2.0,
              "centerYOffset": 0.0,
              "offsetZ": 0.0,
              "fanAngle": 360.0,
              "radius": 3.0,
              "followRootNodeY": false,
              "followTransformY": false,
              "offsetAngle": 0.0,
              "born": {
                "$type": "ConfigBornByTarget",
                "offset": {
                  "x": 0.0,
                  "y": -0.5,
                  "z": 0.0
                }
              }
            },
            "attackInfo": {
              "attackTag": "FallingAttack",
              "attackProperty": {
                "damagePercentage": "%FallingAnthem_Normal_Rank_1_Damage",
                "strikeType": "Pierce",
                "attackType": "Melee",
                "elementType": "None",
                "elementDurability": 25,
                "enBreak": 50
              },
              "hitPattern": {
                "onHitEffectName": "none",
                "hitImpulseType": "LV2",
                "retreatType": "ByAttacker",
                "reboundRatio": 0,
                "canBeDefenceHalt": false,
                "hitHaltTime": 0,
                "hitHaltTimeScale": 0.1,
                "muteHitText": false
              }
              /*
                          "forceCameraShake": true,

                          "cameraShake":
                          {
                              "shakeType": "CustomVector",
                          "shakeRange": 0.3,
                          "shakeTime": 0.12,
                          "shakeDistance": 30,
                          "shakeDir":
                            {
                              "x": 0,
                              "y": 1,
                              "z": 0,
                            },
                          },

                          "cameraShake":
                          {
                              "shakeType": "CustomVector",
                              "shakeRange": 0.08,
                              "shakeTime": 0.06,
                              "shakeDistance": 15,
                              "shakeDir":
                              {
                                  "x": 0,
                                  "y": 1,
                                  "z": 0,
                              },
                              "extension":
                              {
                                  "baseCycle": 0.24,
                                  "cycleDamping": 0,
                                  "rangeAttenuation": 0.3,
                              },
                          },
                          */
            }
          },
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "forceByCaster": true,
              "value": 0,
              "compareType": "NoneOrEqual"
            }
          ]
        },
        //普通状态第二段
        {
          "$type": "TriggerAttackEvent",
          "targetType": "Enemy",
          "attackEvent": {
            "attackPattern": {
              "$type": "ConfigAttackCircle",
              "triggerType": "TriggerNoRepeat",
              "scale": 1.0,
              "height": 2.0,
              "centerYOffset": 0.0,
              "offsetZ": 0.0,
              "fanAngle": 360.0,
              "radius": 3.5,
              "followRootNodeY": false,
              "followTransformY": false,
              "offsetAngle": 0.0,
              "born": {
                "$type": "ConfigBornByTarget",
                "offset": {
                  "x": 0.0,
                  "y": -0.5,
                  "z": 0.0
                }
              }
            },
            "attackInfo": {
              "attackTag": "FallingAttack",
              "attackProperty": {
                "damagePercentage": "%FallingAnthem_Normal_Rank_2_Damage",
                "strikeType": "Pierce",
                "attackType": "Melee",
                "elementType": "None",
                "elementDurability": 25,
                "enBreak": 100
              },
              "hitPattern": {
                "onHitEffectName": "none",
                "hitImpulseType": "LV3",
                "retreatType": "ByAttacker",
                "reboundRatio": 0,
                "canBeDefenceHalt": false,
                "hitHaltTime": 0,
                "hitHaltTimeScale": 0.1,
                "muteHitText": false
              }
              /*
                          "forceCameraShake": false,
                          "cameraShake":
                          {
                              "shakeType": "CustomVector",
                              "shakeRange": 0.08,
                              "shakeTime": 0.06,
                              "shakeDistance": 15,
                              "shakeDir":
                              {
                                  "x": 0,
                                  "y": 1,
                                  "z": 1,
                              },
                              "extension":
                              {
                                  "baseCycle": 0.4,
                                  "cycleDamping": 0,
                                  "rangeAttenuation": 0.3,
                              },
                          },
                          */
            }
          },
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "forceByCaster": true,
              "value": 1,
              "compareType": "Equal"
            }
          ]
        },
        //普通状态第一段
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_Avatar_Bow_FallAnthem_Strike_01",
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "forceByCaster": true,
              "value": 0,
              "compareType": "NoneOrEqual"
            }
          ]
        },
        //普通状态第二段
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_Avatar_Bow_FallAnthem_Strike_02",
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "forceByCaster": true,
              "value": 1,
              "compareType": "Equal"
            }
          ]
        }
      ],
      "modifiers": {
        "FallingAnthem_AttachEffect_BS_01": {
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Avatar_Bow_FallAnthem_BS_01"
            }
          ]
        },
        "FallingAnthem_BS_Material": {
          "onAdded": [
            {
              "$type": "FireEffect",
              "effectPattern": "Eff_Avatar_Bow_FallAnthem_BS"
            }
          ],
          "onRemoved": [
            {
              "$type": "ActCameraRadialBlur",
              "cameraRadialBlur": {
                "power": 0.3,
                "blurTime": 0.3,
                "fadeTime": 0.15
              }
            }
          ]
        },
        "FallingAnthem_BS_VelocityForce_Initialize": {
          "properties": {
            "Actor_AddGravityScale": -2
          },
          "onAdded": [
            {
              "$type": "RemoveVelocityForce",
              "forces": ["RushMoveType"]
            }
          ]
        },
        "FallingAnthem_LoopDamage": {
          "thinkInterval": 0.3,
          "onThinkInterval": [
            {
              "$type": "TriggerAttackEvent",
              "targetType": "Enemy",
              "attackEvent": {
                "attackPattern": {
                  "$type": "ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "radius": 1.0,
                  "born": {
                    "$type": "ConfigBornBySelf",
                    "offset": {
                      "x": 0.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  }
                },
                "attackInfo": {
                  "attackTag": "FallingAttack",
                  "attackProperty": {
                    "damagePercentage": "%FallingAnthem_Normal_Loop_Damage",
                    "strikeType": "Pierce",
                    "attackType": "Melee",
                    "elementType": "None",
                    "elementDurability": 0,
                    "enBreak": 10
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitImpulseType": "LV2",
                    "reboundRatio": 0,
                    "canBeDefenceHalt": false,
                    "hitHaltTime": 0,
                    "hitHaltTimeScale": 0.02,
                    "muteHitText": false
                  }
                }
              }
            }
          ]
        },
        "FallingAnthem_FallingDamageImmune_01": {
          "onAdded": [
            {
              "$type": "ClearGlobalValue",
              "key": "_ABILITY_FallingAttack_Altitude"
            },
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAttack_Altitude",
              "value": "%FallingAnthem_FallingDamageRatio_Lv0",
              "useLimitRange": true,
              "maxValue": "%FallingAnthem_FallingDamageRatio_Lv0",
              "minValue": "%FallingAnthem_FallingDamageRatio_Lv0",
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv0",
                  "logic": "LesserOrEqual"
                }
              ]
            }, //==================================================================================
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAttack_Altitude",
              "value": "%FallingAnthem_FallingDamageRatio_Lv1",
              "useLimitRange": true,
              "maxValue": "%FallingAnthem_FallingDamageRatio_Lv1",
              "minValue": "%FallingAnthem_FallingDamageRatio_Lv1",
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv1",
                  "logic": "LesserOrEqual"
                },
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv0",
                  "logic": "Greater"
                }
              ]
            }, //==================================================================================
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAttack_Altitude",
              "value": "%FallingAnthem_FallingDamageRatio_Lv2",
              "useLimitRange": true,
              "maxValue": "%FallingAnthem_FallingDamageRatio_Lv2",
              "minValue": "%FallingAnthem_FallingDamageRatio_Lv2",
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv2",
                  "logic": "LesserOrEqual"
                },
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv1",
                  "logic": "Greater"
                }
              ]
            }, //==================================================================================
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAttack_Altitude",
              "value": "%FallingAnthem_FallingDamageRatio_Lv3",
              "useLimitRange": true,
              "maxValue": "%FallingAnthem_FallingDamageRatio_Lv3",
              "minValue": "%FallingAnthem_FallingDamageRatio_Lv3",
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv3",
                  "logic": "LesserOrEqual"
                },
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv2",
                  "logic": "Greater"
                }
              ]
            }, //==================================================================================
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAttack_Altitude",
              "value": "%FallingAnthem_FallingDamageRatio_Lv4",
              "useLimitRange": true,
              "maxValue": "%FallingAnthem_FallingDamageRatio_Lv4",
              "minValue": "%FallingAnthem_FallingDamageRatio_Lv4",
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv3",
                  "logic": "Greater"
                }
              ]
            }, //==================================================================================

            {
              "$type": "AttachModifier",
              "modifierName": "FallingAnthem_FallingDamageImmune_02"
            }
          ]
        },
        "FallingAnthem_FallingDamageImmune_02": {
          "onAdded": [
            {
              "$type": "SetGlobalValueToOverrideMap",
              "globalValueKey": "_ABILITY_FallingAttack_Altitude",
              "overrideMapKey": "FallingAnthem_FallingDamageRatio"
            },
            {
              "$type": "AttachModifier",
              "modifierName": "FallingAnthem_FallingDamageImmune_03"
            }
          ]
        },
        "FallingAnthem_FallingDamageImmune_03": {
          "properties": {
            "Actor_FallingDamageRatio": "%FallingAnthem_FallingDamageRatio"
          }
        },
        "FallingAnthem_Loop_Normal": {
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Avatar_Bow_FallAnthem_Loop_02",
              "predicates": [
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_ABILITY_FallingAnthem_UseCamera",
                  "forceByCaster": true,
                  "value": 1,
                  "compareType": "Equal"
                }
              ]
            }
          ]
        },
        //水平惯性继承
        "Inertia": {
          "modifierMixins": [
            {
              "$type": "ApplyInertiaVelocityMixin",
              "damping": 0,
              "useXZ": false,
              "useY": false
            }
          ]
        },
        "FallingAnthem_Height_Detect": {
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "value": 0,
              "useLimitRange": true,
              "maxValue": 0,
              "minValue": 0,
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": 2.4,
                  "logic": "LesserOrEqual"
                }
              ]
            },
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "value": 5,
              "useLimitRange": true,
              "maxValue": 1,
              "minValue": 0,
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": 2.4,
                  "logic": "Greater"
                }
              ]
            },
            {
              "$type": "SetAnimatorFloat",
              "floatID": "FallingAnthem_UseCamera",
              "value": 0,
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": 2.4,
                  "logic": "LesserOrEqual"
                }
              ]
            },
            {
              "$type": "SetAnimatorFloat",
              "floatID": "FallingAnthem_UseCamera",
              "value": 1,
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": 2.4,
                  "logic": "Greater"
                }
              ]
            }
          ],
          "onRemoved": [
            {
              "$type": "SetAnimatorFloat",
              "floatID": "FallingAnthem_UseCamera",
              "value": 0
            },
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "value": 0,
              "useLimitRange": true,
              "maxValue": 0,
              "minValue": 0
            }
          ]
        },
        "FallingAnthem_OverHead_Camera": {
          "onAdded": [
            {
              "$type": "AvatarCameraParam",
              "lockParam": false,
              "cameraParam": {
                "forceRadius": 4.5,
                "forceRadiusDuration": 0.2,
                "shouldKeepForceRadius": true
              },
              "predicates": [
                {
                  "$type": "ByAnimatorFloat",
                  "parameter": "FallingAnthem_UseCamera",
                  "value": 1,
                  "logic": "Equal"
                }
              ]
            }
          ]
        },
        "FallingAnthem_OverHead_Camera_Remover": {
          "onAdded": [
            {
              "doOffStage": true,
              "$type": "AvatarExitCameraShot"
            }
          ]
        },
        "FallingAnthem_Landed_Camera": {
          "onAdded": [
            {
              "$type": "AvatarCameraParam",
              "lockParam": false,
              "cameraParam": {
                "forceRadius": 6.0,
                "forceRadiusDuration": 0.1,
                "shouldKeepForceRadius": true
              },
              "predicates": [
                {
                  "$type": "ByAnimatorFloat",
                  "parameter": "FallingAnthem_UseCamera",
                  "value": 1,
                  "logic": "Equal"
                }
              ]
            }
          ]
        },
        "FallingAnthem_ClearVelocityForce": {
          "onAdded": [
            {
              "$type": "RemoveVelocityForce",
              "forces": ["RushMoveType", "InertiaType"]
            }
          ]
        }
      },
      "abilitySpecials": {
        "FallingAnthem_Normal_Loop_Damage": 0,
        "FallingAnthem_Normal_Rank_1_Damage": 0,
        "FallingAnthem_Normal_Rank_2_Damage": 0,

        "FallingAnthem_Altitude_Lv0": 20,
        "FallingAnthem_Altitude_Lv1": 40,
        "FallingAnthem_Altitude_Lv2": 60,
        "FallingAnthem_Altitude_Lv3": 100,
        "FallingAnthem_Altitude_Lv4": 200,

        "FallingAnthem_FallingDamageRatio_Lv0": -1,
        "FallingAnthem_FallingDamageRatio_Lv1": -1,
        "FallingAnthem_FallingDamageRatio_Lv2": -0.9,
        "FallingAnthem_FallingDamageRatio_Lv3": -0.8,
        "FallingAnthem_FallingDamageRatio_Lv4": -0.6,

        "FallingAnthem_FallingDamageRatio": 0
      }
    }
  }
]
