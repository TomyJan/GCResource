[
  //========================================================将描述用普攻（100545），切换回正常逻辑普攻 10054
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_PlayerBoy_ExtraAttack_Common",
      "isDynamicAbility": true,
      "abilityMixins": [
        {
          "$type": "ButtonHoldChargeMixin",
          "skillID": 100540,
          "chargeTime": 0.12,
          "secondChargeTime": 0.2,
          "OnBeginUncharged": [
            {
              "$type": "SetAnimatorTrigger",
              "triggerID": "DoSkill"
            },
            {
              "$type": "SetAnimatorInt",
              "intID": "SkillID",
              "value": 99,
              "predicates": [
                {
                  "$type": "ByAny",
                  "predicates": [
                    {
                      "$type": "ByAnimatorInt",
                      "value": 0,
                      "parameter": "ComboCount",
                      "logic": "Equal"
                    },
                    {
                      "$type": "ByAnimatorInt",
                      "value": 5,
                      "parameter": "ComboCount",
                      "logic": "Equal"
                    }
                  ]
                }
              ]
            },
            {
              "$type": "SetAnimatorBool",
              "boolID": "IsCharging",
              "value": false
            }
          ],
          "OnReleaseUncharged": [
            /*						{
							"$type": "SetAnimatorTrigger",
							"triggerID": "DoSkill",
						},*/
            {
              "$type": "SetAnimatorInt",
              "intID": "SkillID",
              "value": 1
            }
          ],
          "OnBeginCharged": [
            {
              "$type": "SetAnimatorBool",
              "boolID": "IsCharging",
              "value": true
            }
          ],
          "OnReleaseCharged": [
            {
              "$type": "SetAnimatorBool",
              "boolID": "IsCharging",
              "value": false
            },
            /*						{
							"$type": "SetAnimatorTrigger",
							"triggerID": "DoSkill",
						},*/
            {
              "$type": "SetAnimatorInt",
              "intID": "SkillID",
              "value": 1
            }
            /*						{
							"$type": "ResetAnimatorTrigger",
							"triggerID": "DoSkill",
						},*/
          ],
          "OnBeginSecondCharged": [
            {
              "$type": "SetAnimatorTrigger",
              "triggerID": "DoSkill",
              "predicates": [
                {
                  "$type": "ByLocalAvatarStamina",
                  //故意少判了一点点体力，为了顾及一部分网络延迟
                  "stamina": "%ExtraAttack_Sword_Stamina_Cost+%Flexible_Stamina",
                  "logic": "GreaterOrEqual"
                }
              ]
            },
            {
              "$type": "SetAnimatorInt",
              "intID": "SkillID",
              "value": 6,
              "predicates": [
                {
                  "$type": "ByLocalAvatarStamina",
                  //故意少判了一点点体力，为了顾及一部分网络延迟
                  "stamina": "%ExtraAttack_Sword_Stamina_Cost+%Flexible_Stamina",
                  "logic": "GreaterOrEqual"
                }
              ]
            },
            {
              "$type": "SetAnimatorBool",
              "boolID": "IsCharging",
              "value": false
            }
            /*						{
							"$type": "ResetAnimatorTrigger",
							"triggerID": "DoSkill",
						},*/
          ],
          "OnReleaseSecondCharged": [],
          "chargeStateIDs": [
            "Attack01",
            "Attack02",
            "Attack03",
            "Attack04",
            "Run"
          ]
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["ExtraAttack"],
          "modifierName": "ExtraAttack_StaminaCost"
        }
      ],
      "modifiers": {
        "ExtraAttack_StaminaCost": {
          // "duration": 0.2,
          "onAdded": [
            {
              "$type": "AvatarSkillStart",
              "skillID": 10001,
              "costStaminaRatio": "%ExtraAttack_Sword_Stamina_Cost"
            }
          ]
        }
      },
      "abilitySpecials": {
        //故意少判了一点点体力，为了顾及一部分网络延迟
        "ExtraAttack_Sword_Stamina_Cost": 0,
        "Flexible_Stamina": -2
      }
    }
  },

  //========================================================将描述用普攻（100545），切换回正常逻辑普攻 10054
  //
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_PlayerGirl_ExtraAttack_Common",
      "isDynamicAbility": true,
      "abilityMixins": [
        {
          "$type": "ButtonHoldChargeMixin",
          "skillID": 100550,
          "chargeTime": 0.12,
          "secondChargeTime": 0.2,
          "OnBeginUncharged": [
            {
              "$type": "SetAnimatorTrigger",
              "triggerID": "DoSkill"
            },
            {
              "$type": "SetAnimatorInt",
              "intID": "SkillID",
              "value": 99,
              "predicates": [
                {
                  "$type": "ByAny",
                  "predicates": [
                    {
                      "$type": "ByAnimatorInt",
                      "value": 0,
                      "parameter": "ComboCount",
                      "logic": "Equal"
                    },
                    {
                      "$type": "ByAnimatorInt",
                      "value": 5,
                      "parameter": "ComboCount",
                      "logic": "Equal"
                    }
                  ]
                }
              ]
            },
            {
              "$type": "SetAnimatorBool",
              "boolID": "IsCharging",
              "value": false
            }
          ],
          "OnReleaseUncharged": [
            /*						{
							"$type": "SetAnimatorTrigger",
							"triggerID": "DoSkill",
						},*/
            {
              "$type": "SetAnimatorInt",
              "intID": "SkillID",
              "value": 1
            }
          ],
          "OnBeginCharged": [
            {
              "$type": "SetAnimatorBool",
              "boolID": "IsCharging",
              "value": true
            }
          ],
          "OnReleaseCharged": [
            {
              "$type": "SetAnimatorBool",
              "boolID": "IsCharging",
              "value": false
            },
            /*						{
							"$type": "SetAnimatorTrigger",
							"triggerID": "DoSkill",
						},*/
            {
              "$type": "SetAnimatorInt",
              "intID": "SkillID",
              "value": 1
            }
            /*						{
							"$type": "ResetAnimatorTrigger",
							"triggerID": "DoSkill",
						},*/
          ],
          "OnBeginSecondCharged": [
            {
              "$type": "SetAnimatorTrigger",
              "triggerID": "DoSkill",
              "predicates": [
                {
                  "$type": "ByLocalAvatarStamina",
                  "stamina": "%ExtraAttack_Sword_Stamina_Cost+%Flexible_Stamina",
                  "logic": "GreaterOrEqual"
                }
              ]
            },
            {
              "$type": "SetAnimatorInt",
              "intID": "SkillID",
              "value": 6,
              "predicates": [
                {
                  "$type": "ByLocalAvatarStamina",
                  "stamina": "%ExtraAttack_Sword_Stamina_Cost+%Flexible_Stamina",
                  "logic": "GreaterOrEqual"
                }
              ]
            },
            {
              "$type": "SetAnimatorBool",
              "boolID": "IsCharging",
              "value": false
            }
            /*						{
							"$type": "ResetAnimatorTrigger",
							"triggerID": "DoSkill",
						},*/
          ],
          "OnReleaseSecondCharged": [],
          "chargeStateIDs": [
            "Attack01",
            "Attack02",
            "Attack03",
            "Attack04",
            "Run"
          ]
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["ExtraAttack"],
          "modifierName": "ExtraAttack_StaminaCost"
        }
      ],
      "modifiers": {
        "ExtraAttack_StaminaCost": {
          // "duration": 0.2,
          "onAdded": [
            {
              "$type": "AvatarSkillStart",
              "skillID": 10001,
              "costStaminaRatio": "%ExtraAttack_Sword_Stamina_Cost"
            }
          ]
        }
      },
      "abilitySpecials": {
        //故意少判了一点点体力，为了顾及一部分网络延迟
        "ExtraAttack_Sword_Stamina_Cost": 0,
        "Flexible_Stamina": -2
      }
    }
  },
  ////////////////////////////////////////////////////////////////
  //
  //  ExtraAttack For PlayerBoy
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_PlayerBoy_ExtraAttack",
      "abilityMixins": [
        {
          "$type": "ButtonHoldChargeMixin",
          "skillID": 10054,
          "chargeTime": 0.12,
          "secondChargeTime": 0.2,
          "OnBeginUncharged": [
            {
              "$type": "SetAnimatorTrigger",
              "triggerID": "DoSkill"
            },
            {
              "$type": "SetAnimatorInt",
              "intID": "SkillID",
              "value": 99,
              "predicates": [
                {
                  "$type": "ByAny",
                  "predicates": [
                    {
                      "$type": "ByAnimatorInt",
                      "value": 0,
                      "parameter": "ComboCount",
                      "logic": "Equal"
                    },
                    {
                      "$type": "ByAnimatorInt",
                      "value": 5,
                      "parameter": "ComboCount",
                      "logic": "Equal"
                    }
                  ]
                }
              ]
            },
            {
              "$type": "SetAnimatorBool",
              "boolID": "IsCharging",
              "value": false
            }
          ],
          "OnReleaseUncharged": [
            /*						{
							"$type": "SetAnimatorTrigger",
							"triggerID": "DoSkill",
						},*/
            {
              "$type": "SetAnimatorInt",
              "intID": "SkillID",
              "value": 1
            }
          ],
          "OnBeginCharged": [
            {
              "$type": "SetAnimatorBool",
              "boolID": "IsCharging",
              "value": true
            }
          ],
          "OnReleaseCharged": [
            {
              "$type": "SetAnimatorBool",
              "boolID": "IsCharging",
              "value": false
            },
            /*						{
							"$type": "SetAnimatorTrigger",
							"triggerID": "DoSkill",
						},*/
            {
              "$type": "SetAnimatorInt",
              "intID": "SkillID",
              "value": 1
            }
            /*						{
							"$type": "ResetAnimatorTrigger",
							"triggerID": "DoSkill",
						},*/
          ],
          "OnBeginSecondCharged": [
            {
              "$type": "SetAnimatorTrigger",
              "triggerID": "DoSkill",
              "predicates": [
                {
                  "$type": "ByLocalAvatarStamina",
                  //故意少判了一点点体力，为了顾及一部分网络延迟
                  "stamina": "%ExtraAttack_Sword_Stamina_Cost+%Flexible_Stamina",
                  "logic": "GreaterOrEqual"
                }
              ]
            },
            {
              "$type": "SetAnimatorInt",
              "intID": "SkillID",
              "value": 6,
              "predicates": [
                {
                  "$type": "ByLocalAvatarStamina",
                  //故意少判了一点点体力，为了顾及一部分网络延迟
                  "stamina": "%ExtraAttack_Sword_Stamina_Cost+%Flexible_Stamina",
                  "logic": "GreaterOrEqual"
                }
              ]
            },
            {
              "$type": "SetAnimatorBool",
              "boolID": "IsCharging",
              "value": false
            }
            /*						{
							"$type": "ResetAnimatorTrigger",
							"triggerID": "DoSkill",
						},*/
          ],
          "OnReleaseSecondCharged": [],
          "chargeStateIDs": [
            "Attack01",
            "Attack02",
            "Attack03",
            "Attack04",
            "Run"
          ]
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["ExtraAttack"],
          "modifierName": "ExtraAttack_StaminaCost"
        }
      ],
      "modifiers": {
        "ExtraAttack_StaminaCost": {
          // "duration": 0.2,
          "onAdded": [
            {
              "$type": "AvatarSkillStart",
              "skillID": 10001,
              "costStaminaRatio": "%ExtraAttack_Sword_Stamina_Cost"
            }
          ]
        }
      },
      "abilitySpecials": {
        //故意少判了一点点体力，为了顾及一部分网络延迟
        "ExtraAttack_Sword_Stamina_Cost": 0,
        "Flexible_Stamina": -2
      }
    }
  },
  ////////////////////////////////////////////////////////////////
  //
  //  ExtraAttack For PlayerGirl   看起来应该没在使用。-By HTC 2020.10.17
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_PlayerGirl_ExtraAttack",
      "abilityMixins": [
        {
          "$type": "ButtonHoldChargeMixin",
          "skillID": 10055,
          "chargeTime": 0.12,
          "secondChargeTime": 0.2,
          "OnBeginUncharged": [
            {
              "$type": "SetAnimatorTrigger",
              "triggerID": "DoSkill"
            },
            {
              "$type": "SetAnimatorInt",
              "intID": "SkillID",
              "value": 99,
              "predicates": [
                {
                  "$type": "ByAny",
                  "predicates": [
                    {
                      "$type": "ByAnimatorInt",
                      "value": 0,
                      "parameter": "ComboCount",
                      "logic": "Equal"
                    },
                    {
                      "$type": "ByAnimatorInt",
                      "value": 5,
                      "parameter": "ComboCount",
                      "logic": "Equal"
                    }
                  ]
                }
              ]
            },
            {
              "$type": "SetAnimatorBool",
              "boolID": "IsCharging",
              "value": false
            }
          ],
          "OnReleaseUncharged": [
            /*						{
							"$type": "SetAnimatorTrigger",
							"triggerID": "DoSkill",
						},*/
            {
              "$type": "SetAnimatorInt",
              "intID": "SkillID",
              "value": 1
            }
          ],
          "OnBeginCharged": [
            {
              "$type": "SetAnimatorBool",
              "boolID": "IsCharging",
              "value": true
            }
          ],
          "OnReleaseCharged": [
            {
              "$type": "SetAnimatorBool",
              "boolID": "IsCharging",
              "value": false
            },
            /*						{
							"$type": "SetAnimatorTrigger",
							"triggerID": "DoSkill",
						},*/
            {
              "$type": "SetAnimatorInt",
              "intID": "SkillID",
              "value": 1
            }
            /*						{
							"$type": "ResetAnimatorTrigger",
							"triggerID": "DoSkill",
						},*/
          ],
          "OnBeginSecondCharged": [
            {
              "$type": "SetAnimatorTrigger",
              "triggerID": "DoSkill",
              "predicates": [
                {
                  "$type": "ByLocalAvatarStamina",
                  "stamina": "%ExtraAttack_Sword_Stamina_Cost+%Flexible_Stamina",
                  "logic": "GreaterOrEqual"
                }
              ]
            },
            {
              "$type": "SetAnimatorInt",
              "intID": "SkillID",
              "value": 6,
              "predicates": [
                {
                  "$type": "ByLocalAvatarStamina",
                  "stamina": "%ExtraAttack_Sword_Stamina_Cost+%Flexible_Stamina",
                  "logic": "GreaterOrEqual"
                }
              ]
            },
            {
              "$type": "SetAnimatorBool",
              "boolID": "IsCharging",
              "value": false
            }
            /*						{
							"$type": "ResetAnimatorTrigger",
							"triggerID": "DoSkill",
						},*/
          ],
          "OnReleaseSecondCharged": [],
          "chargeStateIDs": [
            "Attack01",
            "Attack02",
            "Attack03",
            "Attack04",
            "Run"
          ]
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["ExtraAttack"],
          "modifierName": "ExtraAttack_StaminaCost"
        }
      ],
      "modifiers": {
        "ExtraAttack_StaminaCost": {
          // "duration": 0.2,
          "onAdded": [
            {
              "$type": "AvatarSkillStart",
              "skillID": 10001,
              "costStaminaRatio": "%ExtraAttack_Sword_Stamina_Cost"
            }
          ]
        }
      },
      "abilitySpecials": {
        //故意少判了一点点体力，为了顾及一部分网络延迟
        "ExtraAttack_Sword_Stamina_Cost": 0,
        "Flexible_Stamina": -2
      }
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Player_ExtraAttack_Damage",
      "onAdded": [
        {
          "$type": "ApplyModifier",
          "modifierName": "Player_ExtraAttack_Material",
          "target": "Self"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "ApplyModifier",
          "modifierName": "Player_ExtraAttack_Damage_Modifier",
          "target": "Target"
        },
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_Avatar_Lady_Sword_Qin_ExtraAttackHit"
          /*					"born" :
					{
						"$type" : "ConfigBornByCollisionPoint",
					},*/
        }
      ],
      "modifiers": {
        "Player_ExtraAttack_Material": {
          "onAdded": [
            {
              "$type": "FireEffect",
              "effectPattern": "Eff_Avatar_Boy_Sword_PlayerBoy_ExtraAttack_Wave"
            }
          ]
        },
        "Player_ExtraAttack_Damage_Modifier": {
          "duration": 0.1,
          "onAdded": [
            {
              "$type": "TriggerAttackEvent",
              "target": "Caster",
              "targetType": "Enemy",
              "attackEvent": {
                "attackPattern": {
                  "$type": "ConfigAttackSphere",
                  "duration": 0.0,
                  "triggerType": "TriggerNoRepeat",
                  "radius": 1.0,
                  "born": {
                    "$type": "ConfigBornBySelf"
                  }
                },
                "attackInfo": {
                  "attackProperty": {
                    "damagePercentage": "%ExtraAttack_Damage",
                    "strikeType": "Slash",
                    "elementDurability": 20,
                    "elementType": "None",
                    "attackType": "Range",
                    "overrideByWeapon": true,
                    "enBreak": 72
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitImpulseType": "LV3",
                    "reboundRatio": 0,
                    "hitHaltTime": 0.0,
                    "hitHaltTimeScale": 0.05,
                    "muteHitText": false
                  },
                  "forceCameraShake": false
                }
              }
            }
          ]
        }
      },
      "abilitySpecials": {
        "ExtraAttack_Damage": 0.8
      }
    }
  },
  ////////////////////////////////////////////////////////////////
  //
  //  男主角用 普攻数值提取
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_PlayerBoy_NormalAttack_DamageHandler",
      "abilityMixins": [
        {
          "$type": "ModifyDamageMixin",
          "animEventNames": ["ATK01"],
          "damagePercentage": "%NormalAttack_01_DamagePercentage"
        },
        {
          "$type": "ModifyDamageMixin",
          "animEventNames": ["ATK02"],
          "damagePercentage": "%NormalAttack_02_DamagePercentage"
        },
        {
          "$type": "ModifyDamageMixin",
          "animEventNames": ["ATK03"],
          "damagePercentage": "%NormalAttack_03_DamagePercentage"
        },
        {
          "$type": "ModifyDamageMixin",
          "animEventNames": ["ATK04"],
          "damagePercentage": "%NormalAttack_04_DamagePercentage"
        },
        {
          "$type": "ModifyDamageMixin",
          "animEventNames": ["ATK05"],
          "damagePercentage": "%NormalAttack_05_DamagePercentage"
        },
        {
          "$type": "ModifyDamageMixin",
          "animEventNames": ["ExtraAttack_1"],
          "damagePercentage": "%ExtraAttack_01_DamagePercentage"
        },
        {
          "$type": "ModifyDamageMixin",
          "animEventNames": ["ExtraAttack_2"],
          "damagePercentage": "%ExtraAttack_02_DamagePercentage"
        }
      ],
      "abilitySpecials": {
        "NormalAttack_01_DamagePercentage": 0,
        "NormalAttack_02_DamagePercentage": 0,
        "NormalAttack_03_DamagePercentage": 0,
        "NormalAttack_04_DamagePercentage": 0,
        "NormalAttack_05_DamagePercentage": 0,
        "ExtraAttack_01_DamagePercentage": 0,
        "ExtraAttack_02_DamagePercentage": 0
      }
    }
  },
  ////////////////////////////////////////////////////////////////
  //
  //  女主角用 普攻数值提取
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_PlayerGirl_NormalAttack_DamageHandler",
      "abilityMixins": [
        {
          "$type": "ModifyDamageMixin",
          "animEventNames": ["ATK01"],
          "damagePercentage": "%NormalAttack_01_DamagePercentage"
        },
        {
          "$type": "ModifyDamageMixin",
          "animEventNames": ["ATK02"],
          "damagePercentage": "%NormalAttack_02_DamagePercentage"
        },
        {
          "$type": "ModifyDamageMixin",
          "animEventNames": ["ATK03"],
          "damagePercentage": "%NormalAttack_03_DamagePercentage"
        },
        {
          "$type": "ModifyDamageMixin",
          "animEventNames": ["ATK04"],
          "damagePercentage": "%NormalAttack_04_DamagePercentage"
        },
        {
          "$type": "ModifyDamageMixin",
          "animEventNames": ["ATK05"],
          "damagePercentage": "%NormalAttack_05_DamagePercentage"
        },
        {
          "$type": "ModifyDamageMixin",
          "animEventNames": ["ExtraAttack_1"],
          "damagePercentage": "%ExtraAttack_01_DamagePercentage"
        },
        {
          "$type": "ModifyDamageMixin",
          "animEventNames": ["ExtraAttack_2"],
          "damagePercentage": "%ExtraAttack_02_DamagePercentage"
        }
      ],
      "abilitySpecials": {
        "NormalAttack_01_DamagePercentage": 0,
        "NormalAttack_02_DamagePercentage": 0,
        "NormalAttack_03_DamagePercentage": 0,
        "NormalAttack_04_DamagePercentage": 0,
        "NormalAttack_05_DamagePercentage": 0,
        "ExtraAttack_01_DamagePercentage": 0,
        "ExtraAttack_02_DamagePercentage": 0
      }
    }
  },

  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_PlayerBoy_FallingAnthem",
      "abilityMixins": [
        {
          "$type": "AvatarChangeSkillMixin",
          "priority": "AvatarCommon",
          "jumpSkillID": 5005010,
          "flySkillID": 5005010
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FallingAnthem_BS"],
          "modifierName": "FallingAnthem_BS_Material"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FallingAnthem_BS"],
          "modifierName": "FallingAnthem_Loop_Normal"
        },
        {
          "$type": "AttachToAnimatorStateIDMixin",
          "stateIDs": [
            "FallingAnthem_BS_2",
            "FallingAnthem_Loop",
            "FallingAnthem_Loop_Low"
          ],
          "modifierName": "FallingAnthem_LoopDamage"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FallingAnthem_BS"],
          "modifierName": "FallingAnthem_BS_VelocityForce_Initialize"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": [
            "FallingAnthem_BS",
            "FallingAnthem_Loop",
            "FallingAnthem_AS_1",
            "FallingAnthem_AS_2"
          ],
          "modifierName": "FallingAnthem_Height_Detect"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": [
            "FallingAnthem_BS",
            "FallingAnthem_Loop",
            "FallingAnthem_AS_1",
            "FallingAnthem_AS_2"
          ],
          "modifierName": "FallingAnthem_FallingDamageImmune_01"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FallingAnthem_BS", "FallingAnthem_Loop"],
          "modifierName": "Inertia"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": [
            "FallingAnthem_BS",
            "FallingAnthem_Loop",
            "FallingAnthem_AS_1",
            "FallingAnthem_AS_2"
          ],
          "modifierName": "FallingAnthem_OverHead_Camera"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FallingAnthem_BS"],
          "modifierName": "FallingAnthem_ClearVelocityForce"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FallingAnthem_AS_1", "FallingAnthem_AS_2"],
          "modifierName": "FallingAnthem_ClearVelocityForce_AS"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FallingAnthem_BS", "FallingAnthem_Loop"],
          "modifierName": "FallingAnthem_AttachWeaponEffect"
        },
        {
          "$type": "AttachToAnimatorStateIDMixin",
          "stateIDs": ["FallingAnthem_BS_2"],
          "modifierName": "FallingAnthem_CameraRadialBlur"
        }
      ],
      "onAbilityStart": [
        //普通状态第一段
        {
          "$type": "TriggerAttackEvent",
          "targetType": "Enemy",
          "attackEvent": {
            "attackPattern": {
              "$type": "ConfigAttackCircle",
              "triggerType": "TriggerNoRepeat",
              "scale": 1.0,
              "height": 2.0,
              "centerYOffset": 0.0,
              "offsetZ": 0.0,
              "fanAngle": 360.0,
              "radius": 3.0,
              "followRootNodeY": false,
              "followTransformY": false,
              "offsetAngle": 0.0,
              "born": {
                "$type": "ConfigBornByTarget",
                "offset": {
                  "x": 0.0,
                  "y": -0.5,
                  "z": 1.0
                }
              }
            },
            "attackInfo": {
              "attackTag": "FallingAttack",
              "attackProperty": {
                "damagePercentage": "%FallingAnthem_Normal_Rank_1_Damage",
                "overrideByWeapon": true,
                "strikeType": "Blunt",
                "attackType": "Melee",
                "elementType": "None",
                "elementDurability": 25,
                "elementRank": 1.0,
                "enBreak": 100
              },
              "hitPattern": {
                "onHitEffectName": "none",
                "hitImpulseType": "LV4",
                "retreatType": "ByAttacker",
                "reboundRatio": 0,
                "canBeDefenceHalt": false,
                "hitHaltTime": 0,
                "hitHaltTimeScale": 0.1,
                "muteHitText": false
              },
              "forceCameraShake": true,
              "cameraShake": {
                "shakeType": "CustomVector",
                "shakeRange": 0.24,
                "shakeTime": 0.12,
                "shakeDistance": 30,
                "shakeDir": {
                  "x": 0,
                  "y": 1,
                  "z": 0
                },
                "extension": {
                  "baseCycle": 0.24,
                  "cycleDamping": 0,
                  "rangeAttenuation": 0.3
                }
              }
            }
          },
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "forceByCaster": true,
              "value": 0,
              "compareType": "NoneOrEqual"
            }
          ]
        },
        //普通状态第二段
        {
          "$type": "TriggerAttackEvent",
          "targetType": "Enemy",
          "attackEvent": {
            "attackPattern": {
              "$type": "ConfigAttackCircle",
              "triggerType": "TriggerNoRepeat",
              "scale": 1.0,
              "height": 2.0,
              "centerYOffset": 0.0,
              "offsetZ": 0.0,
              "fanAngle": 360.0,
              "radius": 5.0,
              "followRootNodeY": false,
              "followTransformY": false,
              "offsetAngle": 0.0,
              "born": {
                "$type": "ConfigBornByTarget",
                "offset": {
                  "x": 0.0,
                  "y": -0.5,
                  "z": 1.0
                }
              }
            },
            "attackInfo": {
              "attackTag": "FallingAttack",
              "attackProperty": {
                "damagePercentage": "%FallingAnthem_Normal_Rank_2_Damage",
                "overrideByWeapon": true,
                "strikeType": "Blunt",
                "attackType": "Melee",
                "elementType": "None",
                "elementDurability": 25,
                "elementRank": 1.0,
                "enBreak": 150
              },
              "hitPattern": {
                "onHitEffectName": "none",
                "hitImpulseType": "LV7",
                "retreatType": "ByAttacker",
                "reboundRatio": 0,
                "canBeDefenceHalt": false,
                "hitHaltTime": 0,
                "hitHaltTimeScale": 0.1,
                "muteHitText": false
              },
              "forceCameraShake": true,
              "cameraShake": {
                "shakeType": "CustomVector",
                "shakeRange": 0.5,
                "shakeTime": 0.2,
                "shakeDistance": 30,
                "shakeDir": {
                  "x": 0,
                  "y": 1,
                  "z": 1
                },
                "extension": {
                  "baseCycle": 0.4,
                  "cycleDamping": 0,
                  "rangeAttenuation": 0.3
                }
              }
            }
          },
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "forceByCaster": true,
              "value": 1,
              "compareType": "Equal"
            }
          ]
        },
        //普通状态第一段
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_Avatar_Sword_FallAnthem_Strike_01",
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "forceByCaster": true,
              "value": 0,
              "compareType": "NoneOrEqual"
            }
          ]
        },
        //普通状态第二段
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_Avatar_Sword_FallAnthem_Strike_02",
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "forceByCaster": true,
              "value": 1,
              "compareType": "Equal"
            }
          ]
        }
      ],
      "modifiers": {
        "FallingAnthem_AttachWeaponEffect": {
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Avatar_Sword_FallAnthem_Self_01"
            }
          ]
        },
        "FallingAnthem_CameraRadialBlur": {
          "duration": 0.23,
          "modifierMixins": [
            {
              "$type": "CameraBlurMixin",
              "cameraRadialBlur": {
                "power": 0.3,
                "fadeTime": 0.15
              }
            }
          ]
        },
        "FallingAnthem_BS_Material": {
          "onAdded": [
            {
              "$type": "FireEffect",
              "effectPattern": "Eff_Avatar_Sword_FallAnthem_BS"
            }
          ]
        },
        "FallingAnthem_BS_VelocityForce_Initialize": {
          "properties": {
            "Actor_AddGravityScale": -2
          },
          "onAdded": [
            {
              "$type": "RemoveVelocityForce",
              "forces": ["RushMoveType"]
            }
          ]
        },
        "FallingAnthem_LoopDamage": {
          "thinkInterval": 0.3,
          "onThinkInterval": [
            {
              "$type": "TriggerAttackEvent",
              "targetType": "Enemy",
              "attackEvent": {
                "attackPattern": {
                  "$type": "ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "radius": 1.0,
                  "born": {
                    "$type": "ConfigBornBySelf",
                    "offset": {
                      "x": 0.0,
                      "y": 0.0,
                      "z": 1
                    }
                  }
                },
                "attackInfo": {
                  "attackTag": "FallingAttack",
                  "attackProperty": {
                    "damagePercentage": "%FallingAnthem_Normal_Loop_Damage",
                    "strikeType": "Slash",
                    "overrideByWeapon": true,
                    "attackType": "Melee",
                    "elementType": "None",
                    "elementDurability": 0,
                    "enBreak": 25
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitImpulseType": "LV2",
                    // "hitLevel": "Light", //hitlevel = 2
                    // "hitImpulseX": 200, //hitlevel = 2
                    // "hitImpulseY": 0, //hitlevel = 2
                    "reboundRatio": 0,
                    "canBeDefenceHalt": false,
                    "hitHaltTime": 0,
                    "hitHaltTimeScale": 0.02,
                    "muteHitText": false
                  }
                }
              }
            }
          ]
        },
        "FallingAnthem_FallingDamageImmune_01": {
          "onAdded": [
            {
              "$type": "ClearGlobalValue",
              "key": "_ABILITY_FallingAttack_Altitude"
            },
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAttack_Altitude",
              "value": "%FallingAnthem_FallingDamageRatio_Lv0",
              "useLimitRange": true,
              "maxValue": "%FallingAnthem_FallingDamageRatio_Lv0",
              "minValue": "%FallingAnthem_FallingDamageRatio_Lv0",
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv0",
                  "logic": "LesserOrEqual"
                }
              ]
            }, //==================================================================================
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAttack_Altitude",
              "value": "%FallingAnthem_FallingDamageRatio_Lv1",
              "useLimitRange": true,
              "maxValue": "%FallingAnthem_FallingDamageRatio_Lv1",
              "minValue": "%FallingAnthem_FallingDamageRatio_Lv1",
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv1",
                  "logic": "LesserOrEqual"
                },
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv0",
                  "logic": "Greater"
                }
              ]
            }, //==================================================================================
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAttack_Altitude",
              "value": "%FallingAnthem_FallingDamageRatio_Lv2",
              "useLimitRange": true,
              "maxValue": "%FallingAnthem_FallingDamageRatio_Lv2",
              "minValue": "%FallingAnthem_FallingDamageRatio_Lv2",
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv2",
                  "logic": "LesserOrEqual"
                },
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv1",
                  "logic": "Greater"
                }
              ]
            }, //==================================================================================
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAttack_Altitude",
              "value": "%FallingAnthem_FallingDamageRatio_Lv3",
              "useLimitRange": true,
              "maxValue": "%FallingAnthem_FallingDamageRatio_Lv3",
              "minValue": "%FallingAnthem_FallingDamageRatio_Lv3",
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv3",
                  "logic": "LesserOrEqual"
                },
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv2",
                  "logic": "Greater"
                }
              ]
            }, //==================================================================================
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAttack_Altitude",
              "value": "%FallingAnthem_FallingDamageRatio_Lv4",
              "useLimitRange": true,
              "maxValue": "%FallingAnthem_FallingDamageRatio_Lv4",
              "minValue": "%FallingAnthem_FallingDamageRatio_Lv4",
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv3",
                  "logic": "Greater"
                }
              ]
            }, //==================================================================================

            {
              "$type": "AttachModifier",
              "modifierName": "FallingAnthem_FallingDamageImmune_02"
            }
          ]
        },
        "FallingAnthem_FallingDamageImmune_02": {
          "onAdded": [
            {
              "$type": "SetGlobalValueToOverrideMap",
              "globalValueKey": "_ABILITY_FallingAttack_Altitude",
              "overrideMapKey": "FallingAnthem_FallingDamageRatio"
            },
            {
              "$type": "AttachModifier",
              "modifierName": "FallingAnthem_FallingDamageImmune_03"
            }
          ]
        },
        "FallingAnthem_FallingDamageImmune_03": {
          "properties": {
            "Actor_FallingDamageRatio": "%FallingAnthem_FallingDamageRatio"
          }
        },
        "FallingAnthem_Loop_Normal": {
          "modifierMixins": [
            {
              "$type": "AttachModifierToSelfGlobalValueMixin",
              "globalValueKey": "_ABILITY_FallingAnthem_UseCamera",
              "valueSteps": [-1, 0.5, 1.5],
              "removeAppliedModifier": true,
              "modifierNameSteps": [
                "FallingAnthem_Loop_Normal_Rank_1",
                "FallingAnthem_Loop_Normal_Rank_2"
              ]
            }
          ]
        },
        "FallingAnthem_Loop_Normal_Rank_1": {
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Avatar_Sword_FallAnthem_Loop_01"
            }
          ]
        },
        "FallingAnthem_Loop_Normal_Rank_2": {
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Avatar_Sword_FallAnthem_Loop_02"
            }
          ]
        },
        //水平惯性继承
        "Inertia": {
          "modifierMixins": [
            {
              "$type": "ApplyInertiaVelocityMixin",
              "damping": 0,
              "useXZ": false,
              "useY": false
            }
          ]
        },
        "FallingAnthem_Height_Detect": {
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "value": 0,
              "useLimitRange": true,
              "maxValue": 0,
              "minValue": 0,
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": 2.4,
                  "logic": "LesserOrEqual"
                }
              ]
            },
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "value": 5,
              "useLimitRange": true,
              "maxValue": 1,
              "minValue": 0,
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": 2.4,
                  "logic": "Greater"
                }
              ]
            },
            {
              "$type": "SetAnimatorFloat",
              "floatID": "FallingAnthem_UseCamera",
              "value": 0,
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": 2.4,
                  "logic": "LesserOrEqual"
                }
              ]
            },
            {
              "$type": "SetAnimatorFloat",
              "floatID": "FallingAnthem_UseCamera",
              "value": 1,
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": 2.4,
                  "logic": "Greater"
                }
              ]
            }
          ],
          "onRemoved": [
            {
              "$type": "SetAnimatorFloat",
              "floatID": "FallingAnthem_UseCamera",
              "value": 0
            },
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "value": 0,
              "useLimitRange": true,
              "maxValue": 0,
              "minValue": 0
            }
          ]
        },
        "FallingAnthem_OverHead_Camera": {
          "onAdded": [
            {
              "$type": "AvatarCameraParam",
              "lockParam": false,
              "cameraParam": {
                "forceRadius": 4.5,
                "forceRadiusDuration": 0.2,
                "shouldKeepForceRadius": true
              },
              "predicates": [
                {
                  "$type": "ByAnimatorFloat",
                  "parameter": "FallingAnthem_UseCamera",
                  "value": 1,
                  "logic": "Equal"
                }
              ]
            }
          ]
        },
        "FallingAnthem_OverHead_Camera_Remover": {
          "onAdded": [
            {
              "doOffStage": true,
              "$type": "AvatarExitCameraShot"
            }
          ]
        },
        "FallingAnthem_Landed_Camera": {
          "onAdded": [
            {
              "$type": "AvatarCameraParam",
              "lockParam": false,
              "cameraParam": {
                "forceRadius": 6.0,
                "forceRadiusDuration": 0.1,
                "shouldKeepForceRadius": true
              },
              "predicates": [
                {
                  "$type": "ByAnimatorFloat",
                  "parameter": "FallingAnthem_UseCamera",
                  "value": 1,
                  "logic": "Equal"
                }
              ]
            }
          ]
        },
        "FallingAnthem_ClearVelocityForce": {
          "onAdded": [
            {
              "$type": "RemoveVelocityForce",
              "forces": ["RushMoveType", "InertiaType"]
            }
          ]
        },
        "FallingAnthem_ClearVelocityForce_AS": {
          "onAdded": [
            {
              "$type": "RemoveVelocityForce",
              "forces": ["RushMoveType", "InertiaType"]
            }
          ]
        }
      },
      "abilitySpecials": {
        "FallingAnthem_Normal_Loop_Damage": 0,
        "FallingAnthem_Normal_Rank_1_Damage": 0,
        "FallingAnthem_Normal_Rank_2_Damage": 0,

        "FallingAnthem_Altitude_Lv0": 20,
        "FallingAnthem_Altitude_Lv1": 40,
        "FallingAnthem_Altitude_Lv2": 60,
        "FallingAnthem_Altitude_Lv3": 100,
        "FallingAnthem_Altitude_Lv4": 200,

        "FallingAnthem_FallingDamageRatio_Lv0": -1,
        "FallingAnthem_FallingDamageRatio_Lv1": -1,
        "FallingAnthem_FallingDamageRatio_Lv2": -0.9,
        "FallingAnthem_FallingDamageRatio_Lv3": -0.8,
        "FallingAnthem_FallingDamageRatio_Lv4": -0.6,

        "FallingAnthem_FallingDamageRatio": 0
      }
    }
  },

  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_PlayerGirl_FallingAnthem",
      "abilityMixins": [
        {
          "$type": "AvatarChangeSkillMixin",
          "priority": "AvatarCommon",
          "jumpSkillID": 5007010,
          "flySkillID": 5007010
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FallingAnthem_BS"],
          "modifierName": "FallingAnthem_BS_Material"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FallingAnthem_BS"],
          "modifierName": "FallingAnthem_Loop_Normal"
        },
        {
          "$type": "AttachToAnimatorStateIDMixin",
          "stateIDs": [
            "FallingAnthem_BS_2",
            "FallingAnthem_Loop",
            "FallingAnthem_Loop_Low"
          ],
          "modifierName": "FallingAnthem_LoopDamage"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FallingAnthem_BS"],
          "modifierName": "FallingAnthem_BS_VelocityForce_Initialize"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": [
            "FallingAnthem_BS",
            "FallingAnthem_Loop",
            "FallingAnthem_AS_1",
            "FallingAnthem_AS_2"
          ],
          "modifierName": "FallingAnthem_Height_Detect"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": [
            "FallingAnthem_BS",
            "FallingAnthem_Loop",
            "FallingAnthem_AS_1",
            "FallingAnthem_AS_2"
          ],
          "modifierName": "FallingAnthem_FallingDamageImmune_01"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FallingAnthem_BS", "FallingAnthem_Loop"],
          "modifierName": "Inertia"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": [
            "FallingAnthem_BS",
            "FallingAnthem_Loop",
            "FallingAnthem_AS_1",
            "FallingAnthem_AS_2"
          ],
          "modifierName": "FallingAnthem_OverHead_Camera"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FallingAnthem_BS"],
          "modifierName": "FallingAnthem_ClearVelocityForce"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FallingAnthem_AS_1", "FallingAnthem_AS_2"],
          "modifierName": "FallingAnthem_ClearVelocityForce_AS"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FallingAnthem_BS", "FallingAnthem_Loop"],
          "modifierName": "FallingAnthem_AttachWeaponEffect"
        },
        {
          "$type": "AttachToAnimatorStateIDMixin",
          "stateIDs": ["FallingAnthem_BS_2"],
          "modifierName": "FallingAnthem_CameraRadialBlur"
        }
      ],
      "onAbilityStart": [
        //普通状态第一段
        {
          "$type": "TriggerAttackEvent",
          "targetType": "Enemy",
          "attackEvent": {
            "attackPattern": {
              "$type": "ConfigAttackCircle",
              "triggerType": "TriggerNoRepeat",
              "scale": 1.0,
              "height": 2.0,
              "centerYOffset": 0.0,
              "offsetZ": 0.0,
              "fanAngle": 360.0,
              "radius": 3.0,
              "followRootNodeY": false,
              "followTransformY": false,
              "offsetAngle": 0.0,
              "born": {
                "$type": "ConfigBornByTarget",
                "offset": {
                  "x": 0.0,
                  "y": -0.5,
                  "z": 1.0
                }
              }
            },
            "attackInfo": {
              "attackTag": "FallingAttack",
              "attackProperty": {
                "damagePercentage": "%FallingAnthem_Normal_Rank_1_Damage",
                "overrideByWeapon": true,
                "strikeType": "Blunt",
                "attackType": "Melee",
                "elementType": "None",
                "elementDurability": 25,
                "elementRank": 1.0,
                "enBreak": 100
              },
              "hitPattern": {
                "onHitEffectName": "none",
                "hitImpulseType": "LV4",
                "retreatType": "ByAttacker",
                "reboundRatio": 0,
                "canBeDefenceHalt": false,
                "hitHaltTime": 0,
                "hitHaltTimeScale": 0.1,
                "muteHitText": false
              },
              "forceCameraShake": true,
              "cameraShake": {
                "shakeType": "CustomVector",
                "shakeRange": 0.24,
                "shakeTime": 0.12,
                "shakeDistance": 30,
                "shakeDir": {
                  "x": 0,
                  "y": 1,
                  "z": 0
                },
                "extension": {
                  "baseCycle": 0.24,
                  "cycleDamping": 0,
                  "rangeAttenuation": 0.3
                }
              }
            }
          },
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "forceByCaster": true,
              "value": 0,
              "compareType": "NoneOrEqual"
            }
          ]
        },
        //普通状态第二段
        {
          "$type": "TriggerAttackEvent",
          "targetType": "Enemy",
          "attackEvent": {
            "attackPattern": {
              "$type": "ConfigAttackCircle",
              "triggerType": "TriggerNoRepeat",
              "scale": 1.0,
              "height": 2.0,
              "centerYOffset": 0.0,
              "offsetZ": 0.0,
              "fanAngle": 360.0,
              "radius": 5.0,
              "followRootNodeY": false,
              "followTransformY": false,
              "offsetAngle": 0.0,
              "born": {
                "$type": "ConfigBornByTarget",
                "offset": {
                  "x": 0.0,
                  "y": -0.5,
                  "z": 1.0
                }
              }
            },
            "attackInfo": {
              "attackTag": "FallingAttack",
              "attackProperty": {
                "damagePercentage": "%FallingAnthem_Normal_Rank_2_Damage",
                "overrideByWeapon": true,
                "strikeType": "Blunt",
                "attackType": "Melee",
                "elementType": "None",
                "elementDurability": 25,
                "elementRank": 1.0,
                "enBreak": 150
              },
              "hitPattern": {
                "onHitEffectName": "none",
                "hitImpulseType": "LV7",
                "retreatType": "ByAttacker",
                "reboundRatio": 0,
                "canBeDefenceHalt": false,
                "hitHaltTime": 0,
                "hitHaltTimeScale": 0.1,
                "muteHitText": false
              },
              "forceCameraShake": true,
              "cameraShake": {
                "shakeType": "CustomVector",
                "shakeRange": 0.5,
                "shakeTime": 0.2,
                "shakeDistance": 30,
                "shakeDir": {
                  "x": 0,
                  "y": 1,
                  "z": 1
                },
                "extension": {
                  "baseCycle": 0.4,
                  "cycleDamping": 0,
                  "rangeAttenuation": 0.3
                }
              }
            }
          },
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "forceByCaster": true,
              "value": 1,
              "compareType": "Equal"
            }
          ]
        },
        //普通状态第一段
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_Avatar_Sword_FallAnthem_Strike_01",
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "forceByCaster": true,
              "value": 0,
              "compareType": "NoneOrEqual"
            }
          ]
        },
        //普通状态第二段
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_Avatar_Sword_FallAnthem_Strike_02",
          "predicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "forceByCaster": true,
              "value": 1,
              "compareType": "Equal"
            }
          ]
        }
      ],
      "modifiers": {
        "FallingAnthem_AttachWeaponEffect": {
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Avatar_Sword_FallAnthem_Self_01"
            }
          ]
        },
        "FallingAnthem_CameraRadialBlur": {
          "duration": 0.23,
          "modifierMixins": [
            {
              "$type": "CameraBlurMixin",
              "cameraRadialBlur": {
                "power": 0.3,
                "fadeTime": 0.15
              }
            }
          ]
        },
        "FallingAnthem_BS_Material": {
          "onAdded": [
            {
              "$type": "FireEffect",
              "effectPattern": "Eff_Avatar_Sword_FallAnthem_BS"
            }
          ]
        },
        "FallingAnthem_BS_VelocityForce_Initialize": {
          "properties": {
            "Actor_AddGravityScale": -2
          },
          "onAdded": [
            {
              "$type": "RemoveVelocityForce",
              "forces": ["RushMoveType"]
            }
          ]
        },
        "FallingAnthem_LoopDamage": {
          "thinkInterval": 0.3,
          "onThinkInterval": [
            {
              "$type": "TriggerAttackEvent",
              "targetType": "Enemy",
              "attackEvent": {
                "attackPattern": {
                  "$type": "ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "radius": 1.0,
                  "born": {
                    "$type": "ConfigBornBySelf",
                    "offset": {
                      "x": 0.0,
                      "y": 0.0,
                      "z": 1
                    }
                  }
                },
                "attackInfo": {
                  "attackTag": "FallingAttack",
                  "attackProperty": {
                    "damagePercentage": "%FallingAnthem_Normal_Loop_Damage",
                    "strikeType": "Slash",
                    "overrideByWeapon": true,
                    "attackType": "Melee",
                    "elementType": "None",
                    "elementDurability": 0,
                    "enBreak": 25
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitImpulseType": "LV2",
                    // "hitLevel": "Light", //hitlevel = 2
                    // "hitImpulseX": 200, //hitlevel = 2
                    // "hitImpulseY": 0, //hitlevel = 2
                    "reboundRatio": 0,
                    "canBeDefenceHalt": false,
                    "hitHaltTime": 0,
                    "hitHaltTimeScale": 0.02,
                    "muteHitText": false
                  }
                }
              }
            }
          ]
        },
        "FallingAnthem_FallingDamageImmune_01": {
          "onAdded": [
            {
              "$type": "ClearGlobalValue",
              "key": "_ABILITY_FallingAttack_Altitude"
            },
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAttack_Altitude",
              "value": "%FallingAnthem_FallingDamageRatio_Lv0",
              "useLimitRange": true,
              "maxValue": "%FallingAnthem_FallingDamageRatio_Lv0",
              "minValue": "%FallingAnthem_FallingDamageRatio_Lv0",
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv0",
                  "logic": "LesserOrEqual"
                }
              ]
            }, //==================================================================================
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAttack_Altitude",
              "value": "%FallingAnthem_FallingDamageRatio_Lv1",
              "useLimitRange": true,
              "maxValue": "%FallingAnthem_FallingDamageRatio_Lv1",
              "minValue": "%FallingAnthem_FallingDamageRatio_Lv1",
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv1",
                  "logic": "LesserOrEqual"
                },
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv0",
                  "logic": "Greater"
                }
              ]
            }, //==================================================================================
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAttack_Altitude",
              "value": "%FallingAnthem_FallingDamageRatio_Lv2",
              "useLimitRange": true,
              "maxValue": "%FallingAnthem_FallingDamageRatio_Lv2",
              "minValue": "%FallingAnthem_FallingDamageRatio_Lv2",
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv2",
                  "logic": "LesserOrEqual"
                },
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv1",
                  "logic": "Greater"
                }
              ]
            }, //==================================================================================
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAttack_Altitude",
              "value": "%FallingAnthem_FallingDamageRatio_Lv3",
              "useLimitRange": true,
              "maxValue": "%FallingAnthem_FallingDamageRatio_Lv3",
              "minValue": "%FallingAnthem_FallingDamageRatio_Lv3",
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv3",
                  "logic": "LesserOrEqual"
                },
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv2",
                  "logic": "Greater"
                }
              ]
            }, //==================================================================================
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAttack_Altitude",
              "value": "%FallingAnthem_FallingDamageRatio_Lv4",
              "useLimitRange": true,
              "maxValue": "%FallingAnthem_FallingDamageRatio_Lv4",
              "minValue": "%FallingAnthem_FallingDamageRatio_Lv4",
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": "%FallingAnthem_Altitude_Lv3",
                  "logic": "Greater"
                }
              ]
            }, //==================================================================================

            {
              "$type": "AttachModifier",
              "modifierName": "FallingAnthem_FallingDamageImmune_02"
            }
          ]
        },
        "FallingAnthem_FallingDamageImmune_02": {
          "onAdded": [
            {
              "$type": "SetGlobalValueToOverrideMap",
              "globalValueKey": "_ABILITY_FallingAttack_Altitude",
              "overrideMapKey": "FallingAnthem_FallingDamageRatio"
            },
            {
              "$type": "AttachModifier",
              "modifierName": "FallingAnthem_FallingDamageImmune_03"
            }
          ]
        },
        "FallingAnthem_FallingDamageImmune_03": {
          "properties": {
            "Actor_FallingDamageRatio": "%FallingAnthem_FallingDamageRatio"
          }
        },
        "FallingAnthem_Loop_Normal": {
          "modifierMixins": [
            {
              "$type": "AttachModifierToSelfGlobalValueMixin",
              "globalValueKey": "_ABILITY_FallingAnthem_UseCamera",
              "valueSteps": [-1, 0.5, 1.5],
              "removeAppliedModifier": true,
              "modifierNameSteps": [
                "FallingAnthem_Loop_Normal_Rank_1",
                "FallingAnthem_Loop_Normal_Rank_2"
              ]
            }
          ]
        },
        "FallingAnthem_Loop_Normal_Rank_1": {
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Avatar_Sword_FallAnthem_Loop_01"
            }
          ]
        },
        "FallingAnthem_Loop_Normal_Rank_2": {
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Avatar_Sword_FallAnthem_Loop_02"
            }
          ]
        },
        //水平惯性继承
        "Inertia": {
          "modifierMixins": [
            {
              "$type": "ApplyInertiaVelocityMixin",
              "damping": 0,
              "useXZ": false,
              "useY": false
            }
          ]
        },
        "FallingAnthem_Height_Detect": {
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "value": 0,
              "useLimitRange": true,
              "maxValue": 0,
              "minValue": 0,
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": 2.4,
                  "logic": "LesserOrEqual"
                }
              ]
            },
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "value": 5,
              "useLimitRange": true,
              "maxValue": 1,
              "minValue": 0,
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": 2.4,
                  "logic": "Greater"
                }
              ]
            },
            {
              "$type": "SetAnimatorFloat",
              "floatID": "FallingAnthem_UseCamera",
              "value": 0,
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": 2.4,
                  "logic": "LesserOrEqual"
                }
              ]
            },
            {
              "$type": "SetAnimatorFloat",
              "floatID": "FallingAnthem_UseCamera",
              "value": 1,
              "predicates": [
                {
                  "$type": "ByTargetAltitude",
                  "value": 2.4,
                  "logic": "Greater"
                }
              ]
            }
          ],
          "onRemoved": [
            {
              "$type": "SetAnimatorFloat",
              "floatID": "FallingAnthem_UseCamera",
              "value": 0
            },
            {
              "$type": "AddGlobalValue",
              "key": "_ABILITY_FallingAnthem_UseCamera",
              "value": 0,
              "useLimitRange": true,
              "maxValue": 0,
              "minValue": 0
            }
          ]
        },
        "FallingAnthem_OverHead_Camera": {
          "onAdded": [
            {
              "$type": "AvatarCameraParam",
              "lockParam": false,
              "cameraParam": {
                "forceRadius": 4.5,
                "forceRadiusDuration": 0.2,
                "shouldKeepForceRadius": true
              },
              "predicates": [
                {
                  "$type": "ByAnimatorFloat",
                  "parameter": "FallingAnthem_UseCamera",
                  "value": 1,
                  "logic": "Equal"
                }
              ]
            }
          ]
        },
        "FallingAnthem_OverHead_Camera_Remover": {
          "onAdded": [
            {
              "doOffStage": true,
              "$type": "AvatarExitCameraShot"
            }
          ]
        },
        "FallingAnthem_Landed_Camera": {
          "onAdded": [
            {
              "$type": "AvatarCameraParam",
              "lockParam": false,
              "cameraParam": {
                "forceRadius": 6.0,
                "forceRadiusDuration": 0.1,
                "shouldKeepForceRadius": true
              },
              "predicates": [
                {
                  "$type": "ByAnimatorFloat",
                  "parameter": "FallingAnthem_UseCamera",
                  "value": 1,
                  "logic": "Equal"
                }
              ]
            }
          ]
        },
        "FallingAnthem_ClearVelocityForce": {
          "onAdded": [
            {
              "$type": "RemoveVelocityForce",
              "forces": ["RushMoveType", "InertiaType"]
            }
          ]
        },
        "FallingAnthem_ClearVelocityForce_AS": {
          "onAdded": [
            {
              "$type": "RemoveVelocityForce",
              "forces": ["RushMoveType", "InertiaType"]
            }
          ]
        }
      },
      "abilitySpecials": {
        "FallingAnthem_Normal_Loop_Damage": 0,
        "FallingAnthem_Normal_Rank_1_Damage": 0,
        "FallingAnthem_Normal_Rank_2_Damage": 0,

        "FallingAnthem_Altitude_Lv0": 20,
        "FallingAnthem_Altitude_Lv1": 40,
        "FallingAnthem_Altitude_Lv2": 60,
        "FallingAnthem_Altitude_Lv3": 100,
        "FallingAnthem_Altitude_Lv4": 200,

        "FallingAnthem_FallingDamageRatio_Lv0": -1,
        "FallingAnthem_FallingDamageRatio_Lv1": -1,
        "FallingAnthem_FallingDamageRatio_Lv2": -0.9,
        "FallingAnthem_FallingDamageRatio_Lv3": -0.8,
        "FallingAnthem_FallingDamageRatio_Lv4": -0.6,

        "FallingAnthem_FallingDamageRatio": 0
      }
    }
  },
  ////////////////////////////////////////////////////////////////
  //
  //  角色弹跳蘑菇用ability，
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Trampoline_Jump_Controller",
      "isDynamicAbility": true,
      "abilityMixins": [],
      "onAbilityStart": [
        {
          "$type": "SetCameraEntityDampRatio",
          "dampRatio": 2.5,
          "predicates": [
            {
              "$type": "ByTrampolineType",
              "isExcitedState": false
            }
          ]
        },
        {
          "$type": "SetCameraEntityDampRatio",
          "dampRatio": 1.8,
          "predicates": [
            {
              "$type": "ByTrampolineType",
              "isExcitedState": true
            }
          ]
        },

        {
          "$type": "EnableRocketJump",
          "type": "Trampoline",
          "canBeHandledOnRecover": true,
          "enable": true,
          "extention": {
            "xzMultiplier": 1.0,
            "yMultiplier": 10
          },
          "predicates": [
            {
              "$type": "ByTrampolineType",
              "isExcitedState": false
            }
          ]
        },
        {
          "$type": "EnableRocketJump",
          "type": "Trampoline",
          "canBeHandledOnRecover": true,
          "enable": true,
          "extention": {
            "xzMultiplier": 1.0,
            "yMultiplier": 20
          },
          "predicates": [
            {
              "$type": "ByTrampolineType",
              "isExcitedState": true
            }
          ]
        },
        {
          "$type": "ApplyModifier",
          "target": "Self",
          "modifierName": "Avatar_Trampoline_FallingDamage_Controller"
        },
        {
          "$type": "TryTriggerTrampolineJump",
          "successActions": [
            {
              "$type": "AddGlobalValue",
              "key": "SuccessTriggerTrampolineJump",
              "value": 1
            }
          ],
          "failActions": [
            {
              "doOffStage": true,
              "$type": "EnableRocketJump",
              "canBeHandledOnRecover": true,
              "type": "Trampoline",
              "enable": false
            },
            {
              "$type": "RemoveModifier",
              "target": "Self",
              "modifierName": "Avatar_Trampoline_FallingDamage_Controller"
            },
            {
              "$type": "SetCameraEntityDampRatio",
              "dampRatio": 1
            }
          ]
        },
        {
          "$type": "ApplyModifier",
          "modifierName": "UNIQUE_Trampoline_Jump_Controller",
          "target": "Self"
        },
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_SceneObj_JumpMushroom_02"
        }
      ],
      "modifiers": {
        "UNIQUE_Trampoline_Jump_Controller": {
          "isUnique": true,
          "stacking": "Refresh",
          "duration": 3,
          "modifierMixins": [
            {
              "$type": "AttachToStateIDMixin",
              "modifierName": "UNIQUE_Trampoline_Jump_Unable",
              "stateIDs": ["Jump"],
              "target": "Self"
            },
            {
              "$type": "AttachToStateIDMixin",
              "modifierName": "UNIQUE_Trampoline_Jump_CameraDamping_Close",
              "stateIDs": ["Jump", "Fall"],
              "target": "Self"
            }
          ],
          "onRemoved": [
            //保底把蘑菇跳和镜头平滑干掉
            {
              "$type": "SetCameraEntityDampRatio",
              "dampRatio": 1,
              "doOffStage": true
            },
            {
              "doOffStage": true,
              "$type": "EnableRocketJump",
              "canBeHandledOnRecover": true,
              "type": "Trampoline",
              "enable": false
            }
          ]
        },
        "UNIQUE_Trampoline_Jump_Unable": {
          "isUnique": true,
          "modifierMixins": [
            {
              "$type": "OverrideAvatarMoveSpeedRatioMixin",
              "minValue": -1.0,
              "maxValue": 0.4
            }
          ],
          "onRemoved": [
            {
              "doOffStage": true,
              "$type": "EnableRocketJump",
              "canBeHandledOnRecover": true,
              "type": "Trampoline",
              "enable": false
            }
          ],
          "onKill": [
            {
              "doOffStage": true,
              "$type": "EnableRocketJump",
              "canBeHandledOnRecover": true,
              "type": "Trampoline",
              "enable": false
            }
          ]
        },
        "UNIQUE_Trampoline_Jump_CameraDamping_Close": {
          "isUnique": true,
          "onRemoved": [
            {
              "$type": "SetCameraEntityDampRatio",
              "dampRatio": 1
            }
          ],
          "onKill": [
            {
              "$type": "SetCameraEntityDampRatio",
              "dampRatio": 1
            }
          ]
        },
        "Avatar_Trampoline_FallingDamage_Controller": {
          "stacking": "Refresh",
          "duration": 3.5,
          "modifierMixins": [
            {
              "$type": "AttachToAnimatorStateIDMixin",
              "stateIDs": ["DropDown"],
              "modifierName": "Avatar_Trampoline_FallingDamage_Immune_Handler"
            }
          ],
          "onRemoved": [
            {
              "$type": "SetGlobalValue",
              "key": "SuccessTriggerTrampolineJump",
              "value": 0
            }
          ]
        },
        "Avatar_Trampoline_FallingDamage_Immune_Handler": {
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Avatar_Trampoline_FallingDamage_Immune"
            }
          ],
          "onRemoved": [
            {
              "$type": "RemoveModifier",
              "modifierName": "Avatar_Trampoline_FallingDamage_Immune"
            }
          ]
        },
        "Avatar_Trampoline_FallingDamage_Immune": {
          "properties": {
            "Actor_FallingDamageRatio": -1
          }
        }
      }
    }
  }
]
