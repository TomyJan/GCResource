[
  ////////////////////////////////////////////////////////////////
  //
  //  冲刺时的无敌帧
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_SprintBS_Invincible",
      "isDynamicAbility": true,
      /*			"abilityMixins":
			[
				{
					"$type": "AttachToNormalizedTimeMixin",
					"stateID": "SprintBS",
					"modifierName": "SprintBS_Invincible",
					"normalizeStart": 0.1,
					"normalizeEnd": 0.16,
				}
			],*/
      "onAbilityStart": [
        {
          "$type": "ApplyModifier",
          "doOffStage": true,
          "modifierName": "SprintBS_Invincible",
          "target": "Self"
        }
      ],
      "modifiers": {
        /*				"SprintBS_Invincible":
				{
					"duration": 0.3,
					"state": "IsGhostToEnemy",
				},	*/
        "SprintBS_Invincible": {
          "duration": 0.3,
          "stacking": "Multiple",
          "stackingOption": {
            "maxModifierNumForMultipleType": 2
          },
          "onAdded": [
            {
              "$type": "EnableHitBoxByName",
              "doOffStage": true,
              "hitBoxNames": ["HitBox"],
              "setEnable": false
            }
          ],
          "onRemoved": [
            {
              "$type": "EnableHitBoxByName",
              "doOffStage": true,
              "hitBoxNames": ["HitBox"],
              "setEnable": true
            }
          ],
          "properties": {
            "Actor_EndureDelta": 0
          }
        }
      }
    }
  },
  ////////////////////////////////////////////////////////////////
  //
  //  角色固定对冰冻效果时间减免（试做）
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Freeze_Duration_Reducer",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "AttachAbilityStateResistance",
          "resistanceListID": 14002,
          "durationRatio": 0.4
        }
      ]
    }
  },
  ////////////////////////////////////////////////////////////////
  //
  //  少女法器击飞隐身弹起效果
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Girl_Catalyst_HitFallToGround_Hide",
      "abilityMixins": [
        {
          "$type": "AttachToNormalizedTimeMixin",
          "stateID": "Hit_Throw_Ground",
          "modifierName": "Girl_Catalyst_HitFallToGround_Visible_Handler",
          "normalizeStart": 0.155,
          "normalizeEnd": 0.272
        },
        {
          "$type": "AttachToNormalizedTimeMixin",
          "stateID": "Hit_Throw_Ground",
          "modifierName": "Girl_Catalyst_HitFallToGround_HideSpark",
          "normalizeStart": 0.115,
          "normalizeEnd": 0.272
        }
      ],
      "modifiers": {
        "Girl_Catalyst_HitFallToGround_HideSpark": {
          "onAdded": [
            {
              "$type": "FireEffect",
              "effectPattern": "Eff_Avatar_Girl_Catalyst_HitFallToGround_HideSpark"
            }
          ]
        },
        "Girl_Catalyst_HitFallToGround_Visible_Handler": {
          "onAdded": [
            {
              "$type": "TriggerSetVisible",
              "visible": false
            }
          ],
          "onRemoved": [
            {
              "$type": "TriggerSetVisible",
              "visible": true,
              "doOffStage": true
            },
            {
              "$type": "FireEffect",
              "effectPattern": "Eff_Avatar_Girl_Catalyst_HitFallToGround_ShowSpark"
            }
          ]
        }
      }
    }
  },

  ////////////////////////////////////////////////////////////////
  //
  //  弓箭手瞄准射击表情   (未使用2020.10.16 by htc)
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Bow_Aim_EmoController",
      "abilityMixins": [
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["Aim"],
          "modifierName": "AimLoop_EmoController"
        }
      ],
      "modifiers": {
        "AimLoop_EmoController": {
          "onAdded": [
            {
              "$type": "PlayEmoSync",
              "emoSyncAssetPath": "Cutscene/ShortDialog/Cs_Emo_Avatar_Simple_Common_Set/Cs_Emo_Avatar_Common_Bow_Fight_Aim"
            },
            {
              "$type": "ControlEmotion",
              "toggleBlink": false
            }
          ],
          "onRemoved": [
            {
              "$type": "PlayEmoSync",
              "emoSyncAssetPath": "Cutscene/ShortDialog/Cs_Emo_Avatar_Simple_Common_Set/Cs_Emo_Avatar_Common_Normal"
            },
            {
              "$type": "ControlEmotion",
              "toggleBlink": true
            }
          ]
        }
      }
    }
  },
  ////////////////////////////////////////////////////////////////
  //
  //  岩属性创生物创生时检测技能
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_RockGadget_Summon_Detect",
      "onAdded": [
        // {
        // 	"$type": "ApplyModifier",
        // 	"modifierName": "RockGadget_Summon_Detect",
        // },
        // {
        // 	"$type": "ApplyModifier",
        // 	"modifierName": "RockGadget_Summon_Suicide",
        // },
        {
          "$type": "AddGlobalValue",
          "key": "_COMMON_GADGET_ISSUMMON",
          "value": 1,
          "useLimitRange": true,
          "maxValue": 1,
          "minValue": 0
        }
      ],
      "modifiers": {
        "RockGadget_Summon_Detect": {
          "onAdded": [
            {
              "$type": "TriggerAttackEvent",
              "targetType": "All",
              "canHitHead": false,
              "attackEvent": {
                "attackPattern": {
                  "$type": "ConfigAttackBox",
                  "triggerType": "TriggerNoRepeat",
                  "size": {
                    "x": 2.8,
                    "y": 4.2,
                    "z": 2.8
                  },
                  "born": {
                    "$type": "ConfigBornBySelf",
                    "offset": {
                      "x": 0.0,
                      "y": 2.0,
                      "z": -1.4
                    }
                  }
                },
                "attackInfo": {
                  "attackTag": "Gadget_Summon_Detect",
                  "attackProperty": {
                    "damagePercentage": 0,
                    "elementType": "None",
                    "elementDurability": 0,
                    "elementRank": 1.0,
                    "enBreak": 0
                  }
                }
              }
            }
          ]
        },
        "RockGadget_Summon_Suicide": {
          "onAttackLanded": [
            {
              "$type": "Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "ByTargetType",
                  "targetType": "Self",
                  "isTarget": false
                },
                {
                  "$type": "ByAny",
                  "predicates": [
                    {
                      "$type": "ByTargetGlobalValue",
                      "key": "_COMMON_GADGET_ISSUMMON",
                      "value": 0,
                      "compareType": "MoreThan"
                    },
                    {
                      "$type": "ByTargetGlobalValue",
                      "key": "_SCENE_GADGET_ISSUMMON",
                      "value": 0,
                      "compareType": "MoreThan"
                    }
                  ]
                }
              ],
              "successActions": [
                {
                  "$type": "KillSelf",
                  "target": "Self"
                },
                {
                  "$type": "ActCameraShake",
                  "cameraShake": {
                    "shakeRange": 0.04,
                    "shakeTime": 0.08
                  }
                }
              ]
            }
          ]
        }
      }
    }
  },
  ////////////////////////////////////////////////////////////////
  //
  //  岩创生物重量变化（迭代完combat.property的配置，要干掉）
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "RocketGadget_WeightRatio",
      "onAdded": [
        {
          "$type": "ApplyModifier",
          "modifierName": "RocketGadget_WeightRatio",
          "target": "Self"
        }
      ],
      "modifiers": {
        "RocketGadget_WeightRatio": {
          "properties": {
            "Entity_WeightRatio": 2
          }
        }
      }
    }
  },

  ////////////////////////////////////////////////////////////////
  //
  //  角色成就监听器（1.1 watcher完善后换做法）
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Common_Achievement_Listener",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "ApplyModifier",
          "modifierName": "Achievement_Listener_82001",
          "target": "Self"
        },
        {
          "$type": "ApplyModifier",
          "modifierName": "Achievement_Listener_82002",
          "target": "Self"
        },
        {
          "$type": "ApplyModifier",
          "modifierName": "Achievement_Listener_82003",
          "target": "Self"
        }
      ],
      "modifiers": {
        //用弓箭射中在空中飞行的鹰。
        "Achievement_Listener_82001": {
          "onAttackLanded": [
            {
              "$type": "Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "ByEntityTypes",
                  "target": "Target",
                  "entityTypes": ["Monster"]
                },
                {
                  "$type": "ByTargetConfigID",
                  "target": "Target",
                  "configIdArray": [28030201, 28030202, 28030203, 28030204]
                },
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["ExtraAttack"]
                }
              ],
              "successActions": [
                {
                  "$type": "DoWatcherSystemAction",
                  "watcherId": 82001,
                  "authorityOnly": true
                }
              ]
            }
          ]
        },
        //在远距离，通过瞄准射击击中敌人要害。
        "Achievement_Listener_82002": {
          "onAttackLanded": [
            {
              "$type": "Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "ByEntityTypes",
                  "target": "Target",
                  "entityTypes": ["Monster"]
                },
                // {
                // 	"$type":"ByHitBoxName",
                // 	"hitBoxNames":["HeadBox","BackBox"],
                // },
                {
                  "$type": "ByHitBoxType",
                  "hitBoxType": "Head"
                },
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["ExtraAttack"]
                },
                {
                  "$type": "ByTargetPositionToSelfPosition",
                  "target": "Target",
                  "compareType": "XYZ",
                  "value": 38,
                  "logic": "GreaterOrEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "DoWatcherSystemAction",
                  "watcherId": 82002,
                  "authorityOnly": true
                }
              ]
            }
          ]
        },
        //在超远距离，通过瞄准射击击中敌人要害。
        "Achievement_Listener_82003": {
          "onAttackLanded": [
            {
              "$type": "Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "ByEntityTypes",
                  "target": "Target",
                  "entityTypes": ["Monster"]
                },
                // {
                // 	"$type":"ByHitBoxName",
                // 	"hitBoxNames":["HeadBox","BackBox"],
                // },
                {
                  "$type": "ByHitBoxType",
                  "hitBoxType": "Head"
                },
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["ExtraAttack"]
                },
                {
                  "$type": "ByTargetPositionToSelfPosition",
                  "target": "Target",
                  "compareType": "XYZ",
                  "value": 80,
                  "logic": "GreaterOrEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "DoWatcherSystemAction",
                  "watcherId": 82003,
                  "authorityOnly": true
                }
              ]
            }
          ]
        }
      }
    }
  },
  ////////////////////////////////////////////////////////////////
  //
  //  角色成就监听器 空中攻擊
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_FallAnthem_Achievement_Listener",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "ApplyModifier",
          "modifierName": "Achievement_Listener_82159", //按理说不应该写在这儿，但是为了不新增 ability,就先写在这里了。
          "target": "Self"
        }
      ],
      "abilityMixins": [
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": [
            "FallingAnthem_BS",
            "FallingAnthem_Loop",
            "FallingAnthem_AS_1",
            "FallingAnthem_AS_2"
          ],
          "modifierName": "Achievement_Listener_82060"
        }
      ],
      "modifiers": {
        //下落超過5秒后擊敗敵人
        "Achievement_Listener_82060": {
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_FallAnthem_Achievement_Timer",
              "target": "Self",
              "value": -5,
              "useLimitRange": true,
              "maxValue": 5,
              "minValue": 0
            }
          ],
          "thinkInterval": 1,
          "onThinkInterval": [
            {
              "$type": "AddGlobalValue",
              "key": "_FallAnthem_Achievement_Timer",
              "target": "Self",
              "value": 1,
              "useLimitRange": true,
              "maxValue": 5,
              "minValue": 0
            }
          ],
          "onAttackLanded": [
            {
              "$type": "Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "ByEntityTypes",
                  "target": "Target",
                  "entityTypes": ["Monster"]
                },
                {
                  "$type": "ByAttackTags",
                  "attackTags": ["FallingAttack"]
                },
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "_FallAnthem_Achievement_Timer",
                  "value": 5,
                  "compareType": "MoreThanAndEqual",
                  "forceByCaster": true
                }
              ],
              "successActions": [
                {
                  "$type": "DoWatcherSystemAction",
                  "watcherId": 82060,
                  "authorityOnly": true
                }
              ]
            }
          ],
          "onRemoved": [
            {
              "$type": "AddGlobalValue",
              "key": "_FallAnthem_Achievement_Timer",
              "target": "Self",
              "value": -5,
              "useLimitRange": true,
              "maxValue": 5,
              "minValue": 0
            }
          ]
        },
        //XX秒内，通过原激化、超激化或蔓激化，破除至少2台元能构装体或半永恒统辖矩阵的不可视状态。
        "Achievement_Listener_82159": {
          "modifierMixins": [
            {
              "$type": "CountCheckEventMixin",
              "eventKey": "Achievement_82159",
              "checkTime": 3,
              "checkCount": 2,
              "actionQueue": [
                {
                  "$type": "DoWatcherSystemAction",
                  "watcherId": 82159,
                  "authorityOnly": true
                }
              ],
              "predicates": []
            }
          ]
        }
      }
    }
  },

  ////////////////////////////////////////////////////////////////
  //
  //  龙血BUFF监听
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Watcher_SnowMountain_MPPlay",
      "isDynamicAbility": true,
      "abilityMixins": [
        {
          "$type": "AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "HAS_BLOOD_BUFF_MARK",
          "valueSteps": [-1, 0.5, 1.5],
          "removeAppliedModifier": true,
          "modifierNameSteps": ["Blank", "BloodSmash_Buff_AttackCount_Handler"]
        }
      ],
      "onAdded": [
        // {
        // 	"$type": "AttachModifier",
        // 	"modifierName": "BloodSmash_Buff_AttackCount_Handler",
        // 	"target": "Self",
        // 	"doOffStage":true,
        // },
        {
          "$type": "ApplyModifier",
          "modifierName": "UNIQUE_SnowMountain_MPPlay_Trigger_Wtacher_Handler",
          "target": "Team",
          "doOffStage": true
        }
      ],
      "modifiers": {
        "Blank": {
          //这个人很懒
        },
        //有龙血BUFF时才把这个modifier挂在角色身上，监听角色有没有打到急冻树
        "BloodSmash_Buff_AttackCount_Handler": {
          "onAttackLanded": [
            {
              "$type": "Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "ByEntityTypes",
                  "entityTypes": ["Monster"]
                },
                {
                  "$type": "ByTargetConfigID",
                  "target": "Target",
                  "configIdArray": [26020102]
                }
              ],
              "successActions": [
                {
                  "$type": "ApplyModifier",
                  "modifierName": "Team_BloodSmash_Buff_Attack_Count",
                  "target": "Team",
                  "doOffStage": false //后台角色造成伤害时不计数，看现在的龙血BUFF配置，后台角色无法触发龙血效果
                }
              ]
            }
          ]
        },
        "Team_BloodSmash_Buff_Attack_Count": {
          "duration": 0.2,
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "doOffStage": true,
              "key": "_ABILITY_Team_BloodSmash_Buff_Attack_Count",
              "value": 1,
              "useLimitRange": true,
              "maxValue": 10,
              "minValue": 0
            }
          ]
        },
        "UNIQUE_SnowMountain_MPPlay_Trigger_Wtacher_Handler": {
          "isUnique": true,
          "onAdded": [
            {
              //每次挑战开始时重置计数
              "$type": "AddGlobalValue",
              "doOffStage": true,
              "key": "_ABILITY_Team_BloodSmash_Buff_Attack_Count",
              "value": -10,
              "useLimitRange": true,
              "maxValue": 10,
              "minValue": 0
            }
          ],
          "stacking": "Unique",
          "modifierMixins": [
            {
              "$type": "AttachModifierToSelfGlobalValueMixin",
              "globalValueKey": "_ABILITY_Team_BloodSmash_Buff_Attack_Count",
              "valueSteps": [-1, 9.5, 10.5],
              "removeAppliedModifier": true,
              "modifierNameSteps": [
                "Blank_2",
                "SnowMountain_MPPlay_Trigger_Wtacher"
              ]
              // "actionQueues":
              // [
              // 	[
              // 		//do nothing
              // 	],
              // 	[
              // 		//计数到了，完成watcher
              // 		{
              // 			"$type":"DoWatcherSystemAction",
              // 			"watcherId":3010116,
              // 			"authorityOnly":true,
              // 		},
              // 	],
              // ],
            }
          ]
        },
        "Blank_2": {
          //这个人很懒
        },
        "SnowMountain_MPPlay_Trigger_Wtacher": {
          "onAdded": [
            //计数到了，完成watcher
            {
              "$type": "DoWatcherSystemAction",
              "watcherId": 3010116,
              "authorityOnly": true
            },
            {
              "$type": "ApplyModifier",
              "modifierName": "XnowMountain_MPPlay_ResetAttackCount",
              "target": "Self"
            }
          ]
        },
        "XnowMountain_MPPlay_ResetAttackCount": {
          "duration": 1,
          "onAdded": [
            {
              //挑战完成后重置计数
              "$type": "AddGlobalValue",
              "doOffStage": true,
              "key": "_ABILITY_Team_BloodSmash_Buff_Attack_Count",
              "value": -10,
              "useLimitRange": true,
              "maxValue": 10,
              "minValue": 0
            }
          ]
        }
      }
    }
  },

  ////////////////////////////////////////////////////////////////
  //
  //  角色普攻与重击回能( 表现方面的配置需要等回能表现统一优化)
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Attack_ReviveEnergy",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "ApplyModifier",
          "modifierName": "Avatar_Sword_ReviveEnergy_Handler",
          "target": "Self",
          "doOffStage": true,
          "predicates": [
            {
              "$type": "ByAvatarWeaponType",
              "weaponTypes": ["WEAPON_SWORD_ONE_HAND"]
            }
          ]
        },
        {
          "$type": "ApplyModifier",
          "modifierName": "Avatar_Bow_ReviveEnergy_Handler",
          "target": "Self",
          "predicates": [
            {
              "$type": "ByAvatarWeaponType",
              "weaponTypes": ["WEAPON_BOW"]
            }
          ]
        },
        {
          "$type": "ApplyModifier",
          "modifierName": "Avatar_Claymore_ReviveEnergy_Handler",
          "target": "Self",
          "predicates": [
            {
              "$type": "ByAvatarWeaponType",
              "weaponTypes": ["WEAPON_CLAYMORE"]
            }
          ]
        },
        {
          "$type": "ApplyModifier",
          "modifierName": "Avatar_Pole_ReviveEnergy_Handler",
          "target": "Self",
          "predicates": [
            {
              "$type": "ByAvatarWeaponType",
              "weaponTypes": ["WEAPON_POLE"]
            }
          ]
        },
        {
          "$type": "ApplyModifier",
          "modifierName": "Avatar_Catalyst_ReviveEnergy_Handler",
          "target": "Self",
          "predicates": [
            {
              "$type": "ByAvatarWeaponType",
              "weaponTypes": ["WEAPON_CATALYST"]
            }
          ]
        }
      ],
      "modifiers": {
        //单手剑角色回能
        "Avatar_Sword_ReviveEnergy_Handler": {
          "modifierMixins": [
            {
              "$type": "AttackReviveEnergyMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack"
              ],
              "maxValue": 1,
              "minValue": 0.1,
              "addValue": 0.05,
              "reviveAction": {
                "$type": "ReviveElemEnergy",
                "value": 1,
                "target": "Self"
              },
              "fireEffectActions": {
                "Fire": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Fire"
                },
                "Ice": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Ice"
                },
                "Electric": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Electric"
                },
                "Water": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Water"
                },
                "Wind": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Wind"
                },
                "Rock": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Rock"
                },
                "Grass": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Grass"
                }
              }
            }
          ]
        },
        //弓角色回能
        "Avatar_Bow_ReviveEnergy_Handler": {
          "modifierMixins": [
            {
              "$type": "AttackReviveEnergyMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack"
              ],
              "maxValue": 1,
              "minValue": 0,
              "addValue": 0.05,
              "reviveAction": {
                "$type": "ReviveElemEnergy",
                "value": 1,
                "target": "Self"
              },
              "fireEffectActions": {
                "Fire": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Fire"
                },
                "Ice": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Ice"
                },
                "Electric": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Electric"
                },
                "Water": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Water"
                },
                "Wind": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Wind"
                },
                "Rock": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Rock"
                },
                "Grass": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Grass"
                }
              }
            }
          ]
        },
        //双手角色回能
        "Avatar_Claymore_ReviveEnergy_Handler": {
          "modifierMixins": [
            {
              "$type": "AttackReviveEnergyMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack"
              ],
              "maxValue": 1,
              "minValue": 0,
              "addValue": 0.1,
              "reviveAction": {
                "$type": "ReviveElemEnergy",
                "value": 1,
                "target": "Self"
              },
              "fireEffectActions": {
                "Fire": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Fire"
                },
                "Ice": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Ice"
                },
                "Electric": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Electric"
                },
                "Water": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Water"
                },
                "Wind": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Wind"
                },
                "Rock": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Rock"
                },
                "Grass": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Grass"
                }
              }
            }
          ]
        },
        //长枪角色回能
        "Avatar_Pole_ReviveEnergy_Handler": {
          "modifierMixins": [
            {
              "$type": "AttackReviveEnergyMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack"
              ],
              "maxValue": 1,
              "minValue": 0,
              "addValue": 0.04,
              "reviveAction": {
                "$type": "ReviveElemEnergy",
                "value": 1,
                "target": "Self"
              },
              "fireEffectActions": {
                "Fire": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Fire"
                },
                "Ice": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Ice"
                },
                "Electric": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Electric"
                },
                "Water": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Water"
                },
                "Wind": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Wind"
                },
                "Rock": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Rock"
                },
                "Grass": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Grass"
                }
              }
            }
          ]
        },
        //法器角色回能
        "Avatar_Catalyst_ReviveEnergy_Handler": {
          "modifierMixins": [
            {
              "$type": "AttackReviveEnergyMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack"
              ],
              "maxValue": 1,
              "minValue": 0,
              "addValue": 0.1,
              "reviveAction": {
                "$type": "ReviveElemEnergy",
                "value": 1,
                "target": "Self"
              },
              "fireEffectActions": {
                "Fire": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Fire"
                },
                "Ice": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Ice"
                },
                "Electric": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Electric"
                },
                "Water": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Water"
                },
                "Wind": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Wind"
                },
                "Rock": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Rock"
                },
                "Grass": {
                  "$type": "FireEffect",
                  "effectPattern": "Eff_Avatar_ReviveEnergy_Grass"
                }
              }
            }
          ]
        }
      },
      "abilitySpecials": {
        "Pole_ReviveEnergy_Chance": 0,
        "Bow_ReviveEnergy_Chance": 0,
        "Sword_ReviveEnergy_Chance": 0,
        "Claymore_ReviveEnergy_Chance": 0,
        "Catalyst_ReviveEnergy_Chance": 0
      }
    }
  },
  ////////////////////////////////////////////////////////////////
  //
  //  一定次数的Shake受击会变成Light
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Component_Initializer",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "ApplyModifier",
          "target": "Self",
          "doOffStage": true,
          "modifierName": "Visible_Initializer_Handler"
        },
        {
          "$type": "ApplyModifier",
          "target": "Self",
          "doOffStage": true,
          "modifierName": "PushCollider_Initializer_Handler"
        },
        {
          "$type": "ApplyModifier",
          "target": "Self",
          "doOffStage": true,
          "modifierName": "ElectricFairy_Initializer_Handler"
        }
      ],
      "modifiers": {
        "Visible_Initializer_Handler": {
          "onAdded": [
            {
              "$type": "TriggerSetVisible",
              "doOffStage": true,
              "canBeHandledOnRecover": true,
              "visible": true
            }
          ]
        },
        "PushCollider_Initializer_Handler": {
          "onAdded": [
            {
              "$type": "TriggerSetPassThrough",
              "passThrough": false,
              "doOffStage": true,
              "canBeHandledOnRecover": true
            }
          ]
        },
        //雷灵ServerBuff标志位初始化
        "ElectricFairy_Initializer_Handler": {
          "onAdded": [
            {
              "$type": "SetGlobalValue",
              "key": "HAS_ELECTRIC_FAIRY_BUFF_Team",
              "value": 0,
              "target": "Team",
              "doOffStage": true
            }
          ]
        }
      }
    }
  },

  ////////////////////////////////////////////////////////////////
  //
  //  音乐游戏-竖琴（暂时没用，现在直接通过EventPattern驱动）
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_PlayMusic_Lyre_Controller",
      "isDynamicAbility": true,
      "abilityMixins": [
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["PlayMusic_Lyre_BS", "PlayMusic_Lyre_Loop"],
          "modifierName": "Avatar_PlayMusic_Lyre"
        }
      ],
      "modifiers": {
        "Avatar_PlayMusic_Lyre": {
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Avatar_PlayMusic_Lyre"
            }
          ],
          "onRemoved": [
            {
              "$type": "FireEffect",
              "effectPattern": "Eff_Avatar_PlayMusic_Lyre_AS"
            }
          ]
        }
      }
    }
  },

  ////////////////////////////////////////////////////////////////
  //
  //  超级试玩远程击杀监听
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Watcher_SuperTrial_RangeKillEnemy",
      "isDynamicAbility": true,
      "abilityMixins": [
        {
          "$type": "DoActionByKillingMixin",
          "detectWindow": 0.6, //这段时间之后击杀都算，但是无论是modifiermixin还是abilitymixin都需要角色在场。
          "onKill": [
            {
              "$type": "Predicated", //务必要用这个写法，不然other无法传递给predicate
              "target": "Other",
              "targetPredicates": [
                {
                  "$type": "ByTargetPositionToSelfPosition",
                  "compareType": "XZ",
                  "forceByCaster": true,
                  "value": 3,
                  "logic": "GreaterOrEqual"
                },
                {
                  "$type": "ByCurrentSceneId",
                  "forceByCaster": true,
                  "sceneIds": [43006]
                },
                {
                  "$type": "ByEntityTypes",
                  "entityTypes": ["Monster"]
                },
                {
                  "$type": "ByIsTargetCamp",
                  "campBaseOn": "Caster",
                  "campTargetType": "Enemy"
                }
              ],
              "successActions": [
                //计数到了，完成watcher
                {
                  "$type": "DoWatcherSystemAction",
                  "target": "Caster",
                  "watcherId": 1502220,
                  "authorityOnly": true
                }
              ]
            }
          ]
        }
      ]
    }
  },

  ////////////////////////////////////////////////////////////////
  //
  //  岩创生物受钝击销毁的用逻辑
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_RockGadget_KillByBlunt",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "ApplyModifier",
          "modifierName": "RockDurability_Handler"
        }
      ],
      "modifiers": {
        "RockDurability_Handler": {
          "elementType": "Rock",
          "elementDurability": 100,
          "onBeingHit": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Recover_RockDurability"
            }
          ],
          "onRemoved": [
            {
              "$type": "KillSelf"
            }
          ]
        },
        "Recover_RockDurability": {
          "duration": 0.5,
          "onAdded": [
            {
              "$type": "AddElementDurability",
              "value": 100,
              "modifierName": "RockDurability_Handler",
              "elementType": "Rock",
              "useLimitRange": true,
              "maxValue": 100.0
            }
          ]
        }
      }
    }
  },

  ////////////////////////////////////////////////////////////////
  //
  //  角色后台时屏蔽反应的测试 case ,验证完成后需要删除
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_ElementReaction_Test",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "ApplyModifier",
          "modifierName": "A_Element_Test"
        },
        {
          "$type": "ApplyModifier",
          "modifierName": "B_Element_Test"
        }
      ],
      "modifiers": {
        "A_Element_Test": {
          "elementType": "Electric",
          "elementDurability": 100
        },
        "B_Element_Test": {
          "thinkInterval": 2.5,
          "onThinkInterval": [
            {
              "$type": "DamageByAttackValue",
              "doOffStage": true,
              "born": {
                "$type": "ConfigBornByAttachPoint",
                "attachPointName": "RootNode",
                "offset": {
                  "x": 0,
                  "y": 0,
                  "z": 0
                }
              },
              "attackInfo": {
                "attackTag": "ElementReaction_Test",
                "attackProperty": {
                  "damagePercentage": 1,
                  "elementType": "Fire",
                  "elementDurability": 25,
                  "strikeType": "Default",
                  "ignoreAttackerProperty": true,
                  "enBreak": 0
                },
                "hitPattern": {
                  "onHitEffectName": "default",
                  "hitImpulseType": "LV1",
                  "hitHaltTime": 0.0,
                  "hitHaltTimeScale": 0.05,
                  "muteHitText": false
                }
              }
            }
          ]
        }
      }
    }
  },

  ////////////////////////////////////////////////////////////////
  //
  //  角色 HDMesh 通用管理逻辑
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_HDMesh_Controller",
      "isDynamicAbility": true,
      "abilityMixins": [
        // 角色在飞行与攀爬时隐藏HDMesh
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["Fly", "Climb"],
          "modifierName": "Avatar_Enable_HDMesh"
        }
      ],
      "onAbilityStart": [],
      "modifiers": {
        "Avatar_Enable_HDMesh": {
          "onAdded": [
            {
              "$type": "EnableHDMesh",
              "enable": false,
              "hdMeshKey": "Default"
            }
          ],
          "onRemoved": [
            {
              "$type": "EnableHDMesh",
              "enable": true,
              "hdMeshKey": "Default",
              "doOffStage": true,
              "canBeHandledOnRecover": true
            }
          ]
        }
      }
    }
  }
]
