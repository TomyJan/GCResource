[
  ////////////////////////////////////////////////////////////////
  //
  //  CrouchThrow
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_PlayerBoy_CrouchThrowTrigger",
      "onAdded": [
        {
          "$type": "AddGlobalValue",
          "key": "_DUMMY_THROW_RANGE",
          "value": 4,
          "useLimitRange": true,
          "maxValue": 10,
          "minValue": 4
        }
      ],
      "abilityMixins": [
        {
          "$type": "SkillButtonHoldChargeMixin",
          "skillID": 10035,
          "beforeStateIDs": ["CrouchThrowBS"],
          "chargeLoopStateIDs": ["CrouchThrowLoop", "CrouchThrowAS"],
          "chargeLoopDurations": [0.05, 6.5],
          "nextLoopTriggerID": "NextLoopTrigger",
          "endHoldTrigger": "EndHoldTrigger"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["CrouchThrowLoop"],
          "modifierName": "Charge"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["CrouchThrowLoop"],
          "modifierName": "Charge2"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["CrouchThrowLoop"],
          "modifierName": "Focus"
        }
        // {
        // 	"$type": "AttachToStateIDMixin",
        // 	"stateIDs": ["CrouchThrowAS"],
        // 	"modifierName": "Dummy_OnHand_Throw_Middle",
        // },
      ],
      "abilitySpecials": {
        "DummyThrowSpeedUp": 0
      },
      "modifiers": {
        "Focus": {
          "onAdded": [
            {
              "$type": "AvatarEnterFocus",
              "cameraFollowLower": {
                "x": 0.8,
                "y": 0.2,
                "z": -2.5
              },
              "cameraFollowUpper": {
                "x": 0.5,
                "y": -0.2,
                "z": 0.0
              },
              "cameraFastFocusMode": false,
              "showCrosshair": false
            }
          ],
          "onRemoved": [
            {
              "$type": "AvatarExitFocus"
            }
          ]
        },
        "Charge": {
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Charge_Return",
              "target": "Self"
            }
          ],
          "thinkInterval": 8,
          "onThinkInterval": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Charge_Return",
              "target": "Self"
            }
          ],
          "onRemoved": [
            {
              "$type": "RemoveModifier",
              "modifierName": "Charge_Return",
              "target": "Self"
            }
          ]
        },
        "Charge_Return": {
          "duration": 3.9,
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_DUMMY_THROW_RANGE",
              "value": 3,
              "useLimitRange": true,
              "maxValue": 3,
              "minValue": 3
            },
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Ambor_Dummy_Line"
            }
          ],
          "thinkInterval": 0.1,
          "onThinkInterval": [
            {
              "$type": "AddGlobalValue",
              "key": "_DUMMY_THROW_RANGE",
              "value": 0.25,
              "useLimitRange": true,
              "maxValue": 10,
              "minValue": 3
            },
            {
              "$type": "SetGlobalValueToOverrideMap",
              "abilityFormula": "None",
              "isFromOwner": false,
              "globalValueKey": "_DUMMY_THROW_RANGE",
              "overrideMapKey": "DummyThrowSpeedUp"
            }
          ]
        },
        "Charge2": {
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Charge_Return2_Trigger",
              "target": "Self"
            }
          ],
          "onRemoved": [
            {
              "$type": "RemoveModifier",
              "modifierName": "Charge_Return2",
              "target": "Self"
            },
            {
              "$type": "RemoveModifier",
              "modifierName": "Charge_Return2_Trigger",
              "target": "Self"
            }
          ]
        },
        "Charge_Return2_Trigger": {
          "duration": 5,
          "thinkInterval": 4,
          "onThinkInterval": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Charge_Return2",
              "target": "Self"
            }
          ]
        },
        "Charge_Return2": {
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Charge_Return2_Loop",
              "target": "Self"
            }
          ],
          "thinkInterval": 8,
          "onThinkInterval": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Charge_Return2_Loop",
              "target": "Self"
            }
          ],
          "onRemoved": [
            {
              "$type": "RemoveModifier",
              "modifierName": "Charge_Return2_Loop",
              "target": "Self"
            }
          ]
        },
        "Charge_Return2_Loop": {
          "duration": 3.9,
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_DUMMY_THROW_RANGE",
              "value": 10,
              "useLimitRange": true,
              "maxValue": 10,
              "minValue": 10
            },
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Ambor_Dummy_Line"
            }
          ],
          "thinkInterval": 0.1,
          "onThinkInterval": [
            {
              "$type": "AddGlobalValue",
              "key": "_DUMMY_THROW_RANGE",
              "value": -0.25,
              "useLimitRange": true,
              "maxValue": 10,
              "minValue": 3
            },
            {
              "$type": "SetGlobalValueToOverrideMap",
              "abilityFormula": "None",
              "isFromOwner": false,
              "globalValueKey": "_DUMMY_THROW_RANGE",
              "overrideMapKey": "DummyThrowSpeedUp"
            }
          ]
        }
        // "Dummy_OnHand_Throw_Middle":
        // {
        // 	"duration" : 0.12,
        // 	"onAdded":
        // 	[
        // 		{
        // 			"$type": "AttachEffect",
        // 			"effectPattern": "Eff_SkillObj_Dummy_HoldupStandby",
        // 		},
        // 	],
        // },
      }
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_PlayerBoy_CrouchThrow",
      "onAbilityStart": [
        {
          "$type": "AvatarSkillStart",
          "skillID": 10384
        },
        {
          "$type": "TriggerBullet",
          "bulletID": 70300036,
          "born": {
            "$type": "ConfigBornByTarget",
            "offset": {
              "x": 0.0,
              "y": 1.8,
              "z": 0.1
            }
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_PlayerBoy_CrouchThrow_Speed_Fix",
      "onAdded": [
        {
          "$type": "SetGlobalValueToOverrideMap",
          "abilityFormula": "DummyThrowSpeed",
          "isFromOwner": true,
          "globalValueKey": "_DUMMY_THROW_RANGE",
          "overrideMapKey": "DummyThrowSpeedUp"
        },
        {
          "$type": "AttachModifier",
          "modifierName": "SpeedUP",
          "target": "Self"
        }
      ],
      "abilitySpecials": {
        "DummyThrowSpeedUp": 0
      },
      "modifiers": {
        "SpeedUP": {
          "properties": {
            "Animator_OverallSpeedRatio": "%DummyThrowSpeedUp"
          }
        }
      }
    }
  },
  //潜入诱饵击中后
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_PlayerBoy_CreateCrouchThrow",
      "onAdded": [
        {
          "$type": "AttachEffect",
          "effectPattern": "Eff_Ambor_Dummy_Throw"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "FireAISoundEvent",
          "volume": 0
        },
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_Ambor_Dummy_ThrowGround"
        }
      ]
    }
  },
  ////////////////////////////////////////////////////////////////
  //
  //  FindCatThrow
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_PlayerBoy_FindCatThrowTrigger",
      "onAdded": [
        {
          "$type": "AddGlobalValue",
          "key": "_DUMMY_THROW_RANGE",
          "value": 4,
          "useLimitRange": true,
          "maxValue": 10,
          "minValue": 4
        }
      ],
      "abilityMixins": [
        {
          "$type": "SkillButtonHoldChargeMixin",
          "skillID": 10384,
          "beforeStateIDs": ["FindCatThrowBS"],
          "chargeLoopStateIDs": ["FindCatThrowLoop", "FindCatThrowAS"],
          "chargeLoopDurations": [0.05, 6.5],
          "nextLoopTriggerID": "NextLoopTrigger",
          "endHoldTrigger": "EndHoldTrigger"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FindCatThrowLoop"],
          "modifierName": "Charge"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FindCatThrowLoop"],
          "modifierName": "Charge2"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["FindCatThrowLoop"],
          "modifierName": "Focus"
        }
        // {
        // 	"$type": "AttachToStateIDMixin",
        // 	"stateIDs": ["FindCatThrowAS"],
        // 	"modifierName": "Dummy_OnHand_Throw_Middle",
        // },
      ],
      "abilitySpecials": {
        "DummyThrowSpeedUp": 0
      },
      "modifiers": {
        "Focus": {
          "onAdded": [
            {
              "$type": "AvatarEnterFocus",
              "cameraFollowLower": {
                "x": 0.8,
                "y": 0.2,
                "z": -2.5
              },
              "cameraFollowUpper": {
                "x": 0.5,
                "y": -0.2,
                "z": 0.0
              },
              "cameraFastFocusMode": false,
              "showCrosshair": false
            }
          ],
          "onRemoved": [
            {
              "$type": "AvatarExitFocus"
            }
          ]
        },
        "Charge": {
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Charge_Return",
              "target": "Self"
            }
          ],
          "thinkInterval": 8,
          "onThinkInterval": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Charge_Return",
              "target": "Self"
            }
          ],
          "onRemoved": [
            {
              "$type": "RemoveModifier",
              "modifierName": "Charge_Return",
              "target": "Self"
            }
          ]
        },
        "Charge_Return": {
          "duration": 3.9,
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_DUMMY_THROW_RANGE",
              "value": 3,
              "useLimitRange": true,
              "maxValue": 3,
              "minValue": 3
            },
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Ambor_Dummy_Line"
            }
          ],
          "thinkInterval": 0.1,
          "onThinkInterval": [
            {
              "$type": "AddGlobalValue",
              "key": "_DUMMY_THROW_RANGE",
              "value": 0.25,
              "useLimitRange": true,
              "maxValue": 10,
              "minValue": 3
            },
            {
              "$type": "SetGlobalValueToOverrideMap",
              "abilityFormula": "None",
              "isFromOwner": false,
              "globalValueKey": "_DUMMY_THROW_RANGE",
              "overrideMapKey": "DummyThrowSpeedUp"
            }
          ]
        },
        "Charge2": {
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Charge_Return2_Trigger",
              "target": "Self"
            }
          ],
          "onRemoved": [
            {
              "$type": "RemoveModifier",
              "modifierName": "Charge_Return2",
              "target": "Self"
            },
            {
              "$type": "RemoveModifier",
              "modifierName": "Charge_Return2_Trigger",
              "target": "Self"
            }
          ]
        },
        "Charge_Return2_Trigger": {
          "duration": 5,
          "thinkInterval": 4,
          "onThinkInterval": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Charge_Return2",
              "target": "Self"
            }
          ]
        },
        "Charge_Return2": {
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Charge_Return2_Loop",
              "target": "Self"
            }
          ],
          "thinkInterval": 8,
          "onThinkInterval": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Charge_Return2_Loop",
              "target": "Self"
            }
          ],
          "onRemoved": [
            {
              "$type": "RemoveModifier",
              "modifierName": "Charge_Return2_Loop",
              "target": "Self"
            }
          ]
        },
        "Charge_Return2_Loop": {
          "duration": 3.9,
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_DUMMY_THROW_RANGE",
              "value": 10,
              "useLimitRange": true,
              "maxValue": 10,
              "minValue": 10
            },
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Ambor_Dummy_Line"
            }
          ],
          "thinkInterval": 0.1,
          "onThinkInterval": [
            {
              "$type": "AddGlobalValue",
              "key": "_DUMMY_THROW_RANGE",
              "value": -0.25,
              "useLimitRange": true,
              "maxValue": 10,
              "minValue": 3
            },
            {
              "$type": "SetGlobalValueToOverrideMap",
              "abilityFormula": "None",
              "isFromOwner": false,
              "globalValueKey": "_DUMMY_THROW_RANGE",
              "overrideMapKey": "DummyThrowSpeedUp"
            }
          ]
        }
        // "Dummy_OnHand_Throw_Middle":
        // {
        // 	"duration" : 0.12,
        // 	"onAdded":
        // 	[
        // 		{
        // 			"$type": "AttachEffect",
        // 			"effectPattern": "Eff_SkillObj_Dummy_HoldupStandby",
        // 		},
        // 	],
        // },
      }
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_PlayerBoy_FindCatThrow",
      "onAdded": [
        // {
        // 	"$type": "AttachEffect",
        // 	"effectPattern": "Eff_Ambor_Dummy_Throw",
        // },
        // {
        // 	"$type": "ApplyModifier",
        // 	"modifierName": "UNIQUE_Fish_Add_Sundder_Modifier",
        // 	"target": "Self",
        // }
      ],
      "predicates": [
        {
          "$type": "ByItemNumber",
          "itemId": 100084,
          "itemNum": 1
        }
      ],
      // "modifiers": {
      // 	"UNIQUE_Fish_Add_Sundder_Modifier": {
      // 		"stacking": "Unique",
      // 		"isUnique": true,
      // 		"modifierMixins": [
      // 			{
      // 				"$type": "DoActionByCreateGadgetMixin",
      // 				"CreateGadgetMixinType": 2,
      // 				"actionQueue": [
      // 					{
      // 						"$type": "ApplyModifier",
      // 						"modifierName": "Fish",
      // 						"target": "Target",
      // 					},
      // 					{
      // 						"$type": "ApplyModifier",
      // 						"modifierName": "UNIQUE_Fish_Add_Sundder_Modifier",
      // 						"target": "Target",
      // 					},
      // 				],
      // 			},
      // 		],
      // 	},
      // 	"Fish": {
      // 		"duration": 60,
      // 		"onAdded": [
      // 			{
      // 				"$type": "BroadcastNeuronStimulate",
      // 				"neuronName": "SURROUND",
      // 				"stimulate": true,
      // 				"range": 15.0,
      // 			},
      // 		],
      // 		"onKill": [
      // 			{
      // 				"$type": "BroadcastNeuronStimulate",
      // 				"neuronName": "SURROUND",
      // 				"stimulate": false,
      // 				"range": 15.0,
      // 			},
      // 		],
      // 		"onRemoved": [
      // 			{
      // 				"$type": "BroadcastNeuronStimulate",
      // 				"neuronName": "SURROUND",
      // 				"stimulate": false,
      // 				"range": 15.0,
      // 			},
      // 		],
      // 	},
      // },
      "onAbilityStart": [
        {
          "$type": "Predicated",
          "target": "Self",
          "targetPredicates": [
            {
              "$type": "ByItemNumber",
              "itemId": 100084,
              "itemNum": 1
            }
          ],
          "successActions": [
            {
              "$type": "AvatarSkillStart",
              "skillID": 10384
            },
            {
              "$type": "UseItem",
              "itemId": 100084,
              "itemNum": 1
            },
            {
              "$type": "TriggerBullet",
              "bulletID": 41029006,
              "born": {
                "$type": "ConfigBornByTarget",
                "offset": {
                  "x": 0.0,
                  "y": 2.0,
                  "z": 1.0
                }
              }
            }
          ]
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_PlayerBoy_FindCatThrow_Speed_Fix",
      "onAdded": [
        {
          "$type": "SetGlobalValueToOverrideMap",
          "abilityFormula": "DummyThrowSpeed",
          "isFromOwner": true,
          "globalValueKey": "_DUMMY_THROW_RANGE",
          "overrideMapKey": "DummyThrowSpeedUp"
        },
        {
          "$type": "AttachModifier",
          "modifierName": "SpeedUP",
          "target": "Self"
        }
      ],
      "abilitySpecials": {
        "DummyThrowSpeedUp": 0
      },
      "modifiers": {
        "SpeedUP": {
          "properties": {
            "Animator_OverallSpeedRatio": "%DummyThrowSpeedUp"
          }
        }
      }
    }
  },
  //潜入诱饵击中后
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_PlayerBoy_CreateFindCatThrow",
      "onAdded": [
        {
          "$type": "AttachEffect",
          "effectPattern": "Eff_Ambor_Dummy_Throw"
        }

        // {
        // 	"$type": "ApplyModifier",
        // 	"modifierName": "UNIQUE_Fish_Add_Sundder_Modifier",
        // 	"target": "Self",
        // }
      ],
      "onAbilityStart": [
        // {
        // 	"$type": "FireAISoundEvent",
        // 	"volume": 0,
        // },
        {
          "$type": "CreateGadget",
          "target": "Self",
          "gadgetID": 70710025,
          //"gadgetID": 70710018,
          // "campID": 5001,
          // "campTargetType": "All",
          "born": {
            "$type": "ConfigBornByCollisionPoint",
            //"attachPointName" : "RootNode",
            "offset": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            },
            "onGround": true
          }
        },
        // {
        // 	"$type": "CreateItem",
        // 	"target": "Self",
        // 	"count": 1,
        // 	"itemID": 100084,
        // 	"born": {
        // 		"$type": "ConfigBornByCollisionPoint",
        // 		//"attachPointName" : "RootNode",
        // 		"offset": {
        // 			"x": 0.0,
        // 			"y": 0.0,
        // 			"z": 0.0,
        // 		},
        // 		"onGround": true,
        // 	},
        // },
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_Ambor_Dummy_ThrowGround"
        }
      ]

      // "modifiers": {
      // 	"UNIQUE_Fish_Add_Sundder_Modifier": {
      // 		"stacking": "Unique",
      // 		"isUnique": true,
      // 		"modifierMixins": [
      // 			{
      // 				"$type": "DoActionByCreateGadgetMixin",
      // 				"CreateGadgetMixinType": 1,
      // 				"actionQueue": [
      // 					{
      // 						"$type": "ApplyModifier",
      // 						"modifierName": "Fish",
      // 						"target": "Target",
      // 					},
      // 				],
      // 			},
      // 		],
      // 	},
      // 	"Fish": {
      // 		"duration": 30,
      // 		"onAdded": [
      // 			{
      // 				"$type": "BroadcastNeuronStimulate",
      // 				"neuronName": "SURROUND",
      // 				"stimulate": true,
      // 				"range": 15.0,
      // 			},
      // 		],
      // 		"onKill": [
      // 			{
      // 				"$type": "BroadcastNeuronStimulate",
      // 				"neuronName": "SURROUND",
      // 				"stimulate": false,
      // 				"range": 15.0,
      // 			},
      // 		],
      // 		"onRemoved": [
      // 			{
      // 				"$type": "BroadcastNeuronStimulate",
      // 				"neuronName": "SURROUND",
      // 				"stimulate": false,
      // 				"range": 15.0,
      // 			},
      // 		],
      // 	},
      // },
    }
  },
  ////////////////////////////////////////////////////////////////
  //
  //  avatar_camCtrl
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Player_CamCtrl",
      "onAbilityStart": [
        {
          "$type": "ApplyModifier",
          "modifierName": "UNIQUE_Avatar_CameraCtrl",
          "target": "Self",
          "doOffStage": true
        }
      ],
      "modifiers": {
        "UNIQUE_Avatar_CameraCtrl": {
          "isUnique": true,
          "modifierMixins": [
            {
              "$type": "AttachToStateIDMixin",
              "stateIDs": ["Fly"],
              "modifierName": "Avatar_Flying_CameraCtrl"
            }
          ]
        },
        "Avatar_Flying_CameraCtrl": {
          "onAdded": [
            {
              "$type": "AvatarEnterCameraShot",
              "cameraMoveCfgPath": "Camera_Avatar_FlyingBomber"
            },
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_AmborBomb_Alert"
            }
          ],
          "onRemoved": [
            {
              "doOffStage": true,
              "$type": "AvatarExitCameraShot"
            }
          ]
        }
      }
    }
  },
  ////////////////////////////////////////////////////////////////
  //
  //  Flying-Bomber
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Player_FlyingBomber",
      "onAbilityStart": [
        {
          "$type": "ApplyModifier",
          "modifierName": "MixinStart",
          "target": "Self"
        }
      ],
      "modifiers": {
        // "UNIQUE_Avatar_CameraCtrl" :
        // {
        // 	"isUnique" : true,
        // 	"modifierMixins":
        // 	[
        // 		{
        // 			"$type": "AttachToStateIDMixin",
        // 			"stateIDs": ["Fly"],
        // 			"modifierName" : "Avatar_Flying_CameraCtrl",
        // 		},
        // 	],
        // },
        // "Avatar_Flying_CameraCtrl":
        // {
        // 	"onAdded":
        // 	[
        // 		{
        // 			"$type": "AvatarEnterCameraShot",
        // 			"cameraMoveCfgPath": "Camera_Avatar_FlyingBomber",
        // 		},
        // 		{
        // 			"$type":"AttachEffect",
        // 			"effectPattern":"Eff_AmborBomb_Alert",
        // 		},
        // 	],
        // 	"onRemoved":
        // 	[
        // 		{
        // 			"doOffStage": true,
        // 			"$type": "AvatarExitCameraShot",
        // 		},
        // 	],
        // },
        "AmborBulletChain": {
          "duration": 0.4,
          "thinkInterval": 0.15,
          "onThinkInterval": [
            {
              "$type": "TriggerBullet",
              "bulletID": 40000179,
              "born": {
                "$type": "ConfigBornByTarget",
                "offset": {
                  "x": 0.0,
                  "y": 0.5,
                  "z": 0.1
                }
                // "direction":
                // {
                // 	"$type": "ConfigDirectionByAttackTarget",
                // 	"maxAngle": 60.0,
                // 	"maxAngleType": "Horizontal",
                // },
              }
            }
          ],
          "onAdded": [
            {
              "$type": "TriggerBullet",
              "bulletID": 40000179,
              "born": {
                "$type": "ConfigBornByTarget",
                "offset": {
                  "x": 0.5,
                  "y": 0.5,
                  "z": 1
                },
                "direction": {
                  "$type": "ConfigDirectionByAttackTarget",
                  "maxAngle": 360.0,
                  "maxAngleType": "Horizontal"
                }
              }
            }
          ]
        },
        "MixinStart": {
          "modifierMixins": [
            {
              "$type": "ButtonHoldChargeMixin",
              "skillID": 10037,
              "chargeTime": 0.1,
              "OnBeginUncharged": [
                // {
                // 	"$type": "AvatarSkillStart",
                // 	"skillID": 10037,
                // },
                // {
                // 	"$type": "ApplyModifier",
                // 	"modifierName": "UNIQUE_Avatar_CameraCtrl",
                // },
              ],
              "OnReleaseUncharged": [
                {
                  "$type": "AvatarSkillStart",
                  "skillID": 10037
                },
                {
                  "$type": "ApplyModifier",
                  "modifierName": "AmborBulletChain",
                  "target": "Self"
                }
                // {
                // 	"$type":"AttachEffect",
                // 	"effectPattern":"Eff_AmborBomb_Alert",
                // },
              ],
              "OnReleaseCharged": [
                {
                  "$type": "AvatarSkillStart",
                  "skillID": 10037
                },
                {
                  "$type": "ApplyModifier",
                  "modifierName": "AmborBulletChain",
                  "target": "Self"
                }
                // {
                // 	"$type":"AttachEffect",
                // 	"effectPattern":"Eff_AmborBomb_Alert",
                // },
              ]
            }
          ]
        }
      }
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "AmborFlyBullet_Explode",
      "onAbilityStart": [
        {
          "$type": "TriggerAttackEvent",
          "targetType": "Enemy",
          "attackEvent": {
            "attackPattern": {
              "$type": "ConfigAttackSphere",
              "triggerType": "TriggerNoRepeat",
              "radius": 3,
              "born": {
                "$type": "ConfigBornByCollisionPoint"
              }
            },
            "attackInfo": {
              "attackProperty": {
                "damagePercentage": 8,
                "elementType": "Fire",
                "elementDurability": 300,
                "strikeType": "Blunt"
              },
              "hitPattern": {
                "hitImpulseType": "LV5",
                "reboundRatio": 0,
                "hitHaltTime": 0.0,
                "hitHaltTimeScale": 0.05,
                "muteHitText": false
              }
              // "forceCameraShake": true,
              // "cameraShake":
              // {
              // 	"shakeRange": 0.12,
              // 	"shakeTime": 0.12,
              // },
            }
          }
        },
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_Ambortask_Explode",
          "scale": 2
        },
        {
          "$type": "SetSelfAttackTarget",
          "otherTargets": {
            "$type": "SelectTargetsByShape",
            "shapeName": "CircleR6",
            "centerBasedOn": "Self",
            "campTargetType": "Enemy",
            "campBasedOn": "Self",
            "topLimit": 1
          },
          "predicates": [
            {
              "$type": "ByEntityTypes",
              "entityTypes": ["Monster"]
            }
          ]
        },
        {
          "$type": "KillSelf",
          "target": "Self"
        }
      ]
    }
  },
  ////////////////////////////////////////////////////////////////
  //
  //  GlidingChallenge_AirDash
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Player_GlidingChallenge_AirDash_Forward",
      "isDynamicAbility": true,
      "onAbilityStart": [
        {
          "$type": "Predicated",
          "target": "Team",
          "targetPredicates": [
            {
              "$type": "ByTargetGlobalValue",
              "key": "AVATAR_GLIDING_ENERGY",
              "value": 50,
              "compareType": "MoreThanAndEqual"
            }
          ],
          "successActions": [
            {
              "$type": "AddGlobalValue",
              "key": "AVATAR_GLIDING_ENERGY",
              "value": -50,
              "useLimitRange": true,
              "maxValue": 100,
              "minValue": 0,
              "target": "Team"
            },
            {
              "$type": "ActCameraRadialBlur",
              "cameraRadialBlur": {
                "power": 1.5,
                "blurTime": 0.3,
                "fadeTime": 0.5
              }
            },
            {
              "$type": "CreateGadget",
              "gadgetID": 44000002,
              "campID": 1001,
              "campTargetType": "Self",
              "born": {
                "$type": "ConfigBornBySelf"
              }
            },
            {
              "$type": "TriggerAbility",
              "abilityName": "Avatar_Player_GlidingChallenge_AirDash_Forward_SkillStart",
              "target": "CurTeamAvatars"
            }
          ]
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Player_GlidingChallenge_AirDash_Upward",
      "isDynamicAbility": true,
      "onAbilityStart": [
        {
          "$type": "RemoveUniqueModifier",
          "modifierName": "UNIQUE_GlidingChallenge_AirDash_AirflowField"
        },
        {
          "$type": "ApplyModifier",
          "modifierName": "UNIQUE_GlidingChallenge_AirDash_AirflowField"
        },
        {
          "$type": "TriggerAbility",
          "abilityName": "Avatar_Player_GlidingChallenge_AirDash_Upward_SkillStart",
          "target": "CurTeamAvatars"
        }
      ],
      "modifiers": {
        "UNIQUE_GlidingChallenge_AirDash_AirflowField": {
          "isUnique": true,
          "stacking": "Unique",
          "duration": 0.2,
          "onAdded": [
            {
              "$type": "CreateGadget",
              "gadgetID": 44000003,
              "campID": 1001,
              "campTargetType": "Self",
              "born": {
                "$type": "ConfigBornBySelf"
              }
            }
          ],
          "thinkInterval": 0.1,
          "onThinkInterval": [
            {
              "$type": "AttachModifier",
              "modifierName": "UNIQUE_GlidingChallenge_AirDash_SpeedupField"
            }
          ]
        },
        "UNIQUE_GlidingChallenge_AirDash_SpeedupField": {
          "isUnique": true,
          "stacking": "Unique",
          "onAdded": [
            {
              "$type": "CreateGadget",
              "gadgetID": 44000004,
              "campID": 1001,
              "campTargetType": "Self",
              "born": {
                "$type": "ConfigBornByAttachPoint",
                "attachPointName": "RootNode",
                "attachPointTargetType": "Caster"
              }
            }
          ]
        }
      }
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Player_GlidingChallenge_AirDash_Forward_SkillStart",
      "isDynamicAbility": true,
      "onAbilityStart": [
        {
          "$type": "AvatarSkillStart",
          "skillID": 20011,
          "cdRatio": 0.1,
          "doOffStage": true
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Player_GlidingChallenge_AirDash_Upward_SkillStart",
      "isDynamicAbility": true,
      "onAbilityStart": [
        {
          "$type": "AvatarSkillStart",
          "skillID": 20012,
          "cdRatio": 1.0,
          "doOffStage": true
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Player_GlidingChallenge_AirDash_Active",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "SetGlobalValue",
          "key": "AVATAR_GLIDING_FAILONLANDED_COUNT",
          "value": 0
        },
        {
          "$type": "AttachModifier",
          "modifierName": "GlidingChallenge_AirDash_AddSkill"
        },
        {
          "$type": "AttachModifier",
          "modifierName": "UNIQUE_GlidingChallenge_FailOnLanded_TeamHandler",
          "target": "Team"
        },
        {
          "$type": "AttachModifier",
          "modifierName": "GlidingChallenge_FailOnLanded_AvatarHandler"
        }
      ],
      "modifiers": {
        "GlidingChallenge_AirDash_AddSkill": {
          "onAdded": [
            {
              "$type": "AddAvatarSkillInfo",
              "skillID": 20011
            },
            {
              "$type": "AddAvatarSkillInfo",
              "skillID": 20012
            },
            {
              "$type": "AttachModifier",
              "modifierName": "GlidingChallenge_AirDash_ChangeSkill",
              "target": "Self"
            },
            {
              "$type": "SetGlobalValue",
              "key": "AVATAR_GLIDING_ENERGY",
              "target": "Team",
              "value": 0
            },
            {
              "$type": "ChangePlayMode",
              "toPlayMode": "GlidingChallengeState",
              "canBeHandledOnRecover": true
            }
          ],
          "onRemoved": [
            {
              "$type": "ChangePlayMode",
              "toPlayMode": "Normal"
            },
            {
              "$type": "RemoveAvatarSkillInfo",
              "skillID": 20011
            },
            {
              "$type": "RemoveAvatarSkillInfo",
              "skillID": 20012
            }
          ]
        },
        "GlidingChallenge_AirDash_ChangeSkill": {
          "modifierMixins": [
            {
              "$type": "AvatarChangeSkillMixin",
              "priority": "Playmode",
              "index": 0,
              "jumpSkillID": 20011,
              "flySkillID": 20011
            },
            {
              "$type": "AvatarChangeSkillMixin",
              "priority": "Playmode",
              "index": 1,
              "jumpSkillID": 20012,
              "flySkillID": 20012
            }
          ]
        },
        "UNIQUE_GlidingChallenge_FailOnLanded_TeamHandler": {
          "isUnique": true,
          "stacking": "Unique",
          "onAdded": [
            {
              "$type": "SetGlobalValue",
              "key": "AVATAR_GLIDING_FAILONLANDED_COUNT",
              "value": 0
            }
          ],
          "thinkInterval": 1.0,
          "onThinkInterval": [
            {
              "$type": "AddGlobalValue",
              "key": "AVATAR_GLIDING_FAILONLANDED_COUNT",
              "value": 1,
              "useLimitRange": true,
              "maxValue": 15,
              "minValue": 0
            }
          ],
          "modifierMixins": [
            {
              "$type": "AttachModifierToSelfGlobalValueMixin",
              "globalValueKey": "AVATAR_GLIDING_FAILONLANDED_COUNT",
              "valueSteps": [0, 14.5, 15.5],
              "removeAppliedModifier": true,
              "modifierNameSteps": ["Blank", "Blank"],
              "actionQueues": [
                [],
                [
                  {
                    "$type": "ServerLuaCall",
                    "luaCallType": "CurChallengeGroup",
                    "funcName": "ChallengeFail"
                  }
                ]
              ]
            }
          ],
          "onRemoved": [
            {
              "$type": "SetGlobalValue",
              "key": "AVATAR_GLIDING_FAILONLANDED_COUNT",
              "value": 0
            }
          ]
        },
        "GlidingChallenge_FailOnLanded_AvatarHandler": {
          "modifierMixins": [
            {
              "$type": "AttachToStateIDMixin",
              "stateIDs": ["Fly", "Fall"],
              "modifierName": "GlidingChallenge_FailOnLanded"
            }
          ]
        },
        "GlidingChallenge_FailOnLanded": {
          "onAdded": [
            {
              "$type": "SetGlobalValue",
              "key": "AVATAR_GLIDING_FAILONLANDED_COUNT",
              "value": 0,
              "target": "Team"
            }
          ],
          "thinkInterval": 1.0,
          "onThinkInterval": [
            {
              "$type": "SetGlobalValue",
              "key": "AVATAR_GLIDING_FAILONLANDED_COUNT",
              "value": 0,
              "target": "Team"
            }
          ]
        },
        "Blank": {}
      }
    }
  },

  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_Player_FleurFair_FlyBall",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "SetGlobalValue",
          "doOffStage": true,
          "target": "Team",
          "key": "has_end_game",
          "value": 0
        },
        {
          "$type": "AttachModifier",
          "doOffStage": true,
          "modifierName": "FlyBall_FailOnLanded_AvatarHandler"
        }
        // {
        // 	"$type": "AttachModifier",
        // 	"doOffStage":true,
        // 	"target":"Team",
        // 	"modifierName": "UNIQUE_FlyBall_SetTeamGlobalValue",
        // },
      ],
      "onKill": [
        {
          "$type": "RemoveModifier",
          "doOffStage": true,
          "modifierName": "FlyBall_FailOnLanded",
          "target": "Self"
        }
      ],
      "modifiers": {
        "UNIQUE_FlyBall_SetTeamGlobalValue": {
          "isUnique": true,
          "onAdded": [
            {
              "$type": "SetGlobalValue",
              "doOffStage": true,
              "key": "has_end_game",
              "target": "Team",
              "value": 0
            }
          ],
          "modifierMixins": [
            {
              "$type": "ServerUpdateGlobalValueMixin",
              "key": "has_end_game"
            }
          ]
          // "onRemoved":
          // [
          // 	{
          // 		"$type": "ClearGlobalValue",
          // 		"doOffStage":true,
          // 		"key": "has_end_game",
          // 		"target":"Team",
          // 	},
          // ],
        },
        "FlyBall_FailOnLanded_AvatarHandler": {
          "onAdded": [
            {
              "$type": "ChangePlayMode",
              "doOffStage": true,
              "muteRemoteAction": true,
              "toPlayMode": "FleurFairFall"
            }
          ],
          "onRemoved": [
            {
              "$type": "ChangePlayMode",
              "muteRemoteAction": true,
              "doOffStage": true,
              "toPlayMode": "Normal"
            }
          ],
          "modifierMixins": [
            {
              "$type": "AttachToStateIDMixin",
              "stateIDs": [
                "Fly",
                "Fall",
                "FallingAnthem_BS",
                "FallingAnthem_Loop",
                "FallingAnthem_AS_1",
                "FallingAnthem_AS_2",
                "BeHitAir"
              ],
              "modifierName": "FlyBall_FailOnLanded"
            }
          ]
        },
        "FlyBall_FailOnLanded": {
          "onAdded": [
            {
              "$type": "SetGlobalValue",
              "key": "Avatar_Activity_FlyBall_FlyTimer",
              "doOffStage": true,
              "value": 0,
              "target": "Team",
              "useLimitRange": true,
              "maxValue": 10,
              "minValue": 0
            }
          ],
          "thinkInterval": 1.0,
          "onThinkInterval": [
            {
              "$type": "AddGlobalValue",
              "key": "Avatar_Activity_FlyBall_FlyTimer",
              "doOffStage": true,
              "value": 1,
              "target": "Team",
              "useLimitRange": true,
              "maxValue": 10,
              "minValue": 0
            }
          ],
          "onRemoved": [
            {
              "$type": "Predicated",
              "target": "Team",
              "targetPredicates": [
                {
                  "$type": "ByTargetGlobalValue",
                  "key": "Avatar_Activity_FlyBall_FlyTimer",
                  "value": 4.5,
                  "compareType": "MoreThanAndEqual" //在空中飞行时间确认，以防类似魈开大进场直接起跳
                }
              ],
              "successActions": [
                {
                  "$type": "ServerLuaCall",
                  "doOffStage": true,
                  "target": "Self",
                  "isTarget": true,
                  "luaCallType": "CurGalleryControlGroup",
                  "funcName": "FlyBalloonLanding",
                  "predicates": [
                    {
                      "$type": "ByTargetGlobalValue",
                      "key": "has_end_game",
                      "value": 0,
                      "compareType": "NoneOrEqual"
                    }
                  ]
                },
                {
                  "$type": "SetGlobalValue",
                  "doOffStage": true,
                  "key": "has_end_game",
                  "target": "Team",
                  "value": 1
                }
              ]
            }
          ]
        }
      }
    }
  },

  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "QuestAbility_Player_SpecialBattle_200102", //包含任务 200105
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "AttachModifier",
          "modifierName": "UNIQUE_QuestAbility_Player_SpecialBattle_200102",
          "doOffStage": true
        }
      ],
      "modifiers": {
        "UNIQUE_QuestAbility_Player_SpecialBattle_200102": {
          "isUnique": true,
          "isLimitedProperties": true,
          "properties": {
            "Actor_MaxHPDelta": 12000,
            "Actor_AttackDelta": 5000,
            "Actor_DefenceDelta": 800
          }
        }
      }
    }
  }, //QuestAbility_Player_SpecialBattle_200102 【ID1197532】 【1.6 backlog内】稻妻前置剧情线——战斗数值

  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "QuestAbility_Player_BanGuoba_4001506",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "AttachModifier",
          "modifierName": "UNIQUE_QuestAbility_Player_BanGuoba_4001506",
          "doOffStage": true
        }
      ],
      "modifiers": {
        "UNIQUE_QuestAbility_Player_BanGuoba_4001506": {
          "isUnique": true,
          "onAdded": [
            {
              "$type": "AddAvatarSkillInfo",
              "skillID": 20035,
              "doOffStage": true
            },
            {
              "$type": "AttachModifier",
              "modifierName": "UNIQUE_QuestAbility_Player_SwitchSkill",
              "doOffStage": true
            },
            {
              "$type": "KillGadget",
              "doOffStage": true,
              "gadgetInfo": {
                "$type": "SelectTargetsByChildren",
                "configID": 41023011,
                "sortType": "Default"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "RemoveUniqueModifier",
              "modifierName": "UNIQUE_QuestAbility_Player_SwitchSkill",
              "doOffStage": true
            },
            {
              "$type": "RemoveAvatarSkillInfo",
              "skillID": 20035,
              "doOffStage": true
            }
          ]
        },
        "UNIQUE_QuestAbility_Player_SwitchSkill": {
          "isUnique": true,
          "modifierMixins": [
            {
              "$type": "SwitchSkillIDMixin",
              "priority": "Playmode",
              "skillIndex": 1,
              "skillID": 20035
            }
          ]
        }
      }
    }
  }, //QuestAbility_Player_BanGuoba_4001506 【2.1 backlog内】逐月节适用香菱ban锅巴

  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "QuestAbility_Player_BanOzzy",
      "isDynamicAbility": true,
      "onAdded": [
        {
          "$type": "AttachModifier",
          "modifierName": "UNIQUE_QuestAbility_Player_BanOzzy",
          "doOffStage": true,
          "predicates": [
            {
              "$type": "ByHasFeatureTag", //只对菲谢尔触发。
              "featureTagIDs": [10031]
            }
          ]
        }
      ],
      "modifiers": {
        "UNIQUE_QuestAbility_Player_BanOzzy": {
          "isUnique": true,
          "state": "IgnoreAddEnergy", //屏蔽大招期间同时禁止充能
          "onAdded": [
            {
              "$type": "AddAvatarSkillInfo",
              "skillID": 20036,
              "doOffStage": true
            },
            {
              "$type": "AddAvatarSkillInfo",
              "skillID": 20037,
              "doOffStage": true
            },
            {
              "$type": "AttachModifier",
              "modifierName": "UNIQUE_QuestAbility_Player_BanOzzy_SwitchSkill",
              "doOffStage": true
            },
            {
              "$type": "KillGadget",
              "doOffStage": true,
              "gadgetInfo": {
                "$type": "SelectTargetsByChildren",
                "configID": 41031008,
                "sortType": "Default"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "RemoveUniqueModifier",
              "modifierName": "UNIQUE_QuestAbility_Player_BanOzzy_SwitchSkill",
              "doOffStage": true
            },
            {
              "$type": "RemoveAvatarSkillInfo",
              "skillID": 20036,
              "doOffStage": true
            },
            {
              "$type": "RemoveAvatarSkillInfo",
              "skillID": 20037,
              "doOffStage": true
            }
          ]
        },
        "UNIQUE_QuestAbility_Player_BanOzzy_SwitchSkill": {
          "isUnique": true,
          "modifierMixins": [
            {
              "$type": "SwitchSkillIDMixin",
              "priority": "Playmode",
              "skillIndex": 1,
              "skillID": 20036
            },
            {
              "$type": "SwitchSkillIDMixin",
              "priority": "Playmode",
              "skillIndex": 4,
              "skillID": 20037
            }
          ]
        }
      }
    }
  }, // 【2.8 backlog内】海岛主线小艾米ban奥兹

  ////////////////////////////////////////////////////////////////
  //
  //  一斗个人任务线__撒豆子
  //
  ////////////////////////////////////////////////////////////////
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "QuestAbility_Avatar_ThrowBean",
      "onAbilityStart": [],
      "onAdded": [
        {
          "$type": "AttachModifier",
          "modifierName": "Quest_AddSkillInfo"
        },
        {
          "$type": "AttachModifier",
          "modifierName": "Quest_ChangePlayMode_Handler"
        },
        {
          "$type": "AddGlobalValue",
          "key": "_DUMMY_THROW_RANGE",
          "value": 4,
          "useLimitRange": true,
          "maxValue": 8,
          "minValue": 4
        }
      ],
      "abilityMixins": [
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["CrouchThrowLoop"],
          "modifierName": "Charge"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["CrouchThrowLoop"],
          "modifierName": "Charge2"
        },
        {
          "$type": "AttachToStateIDMixin",
          "stateIDs": ["CrouchThrowLoop"],
          "modifierName": "Focus"
        },
        {
          "$type": "AttachToNormalizedTimeMixin",
          "stateID": "CrouchThrowAS",
          "modifierName": "ThrowBean_Trigger",
          "normalizeStart": 0.01,
          "normalizeEnd": 1.0
        },
        {
          "$type": "SkillButtonHoldChargeMixin",
          "skillID": 10038,
          "beforeStateIDs": ["CrouchThrowBS"],
          "chargeLoopStateIDs": ["CrouchThrowLoop", "CrouchThrowAS"],
          "chargeLoopDurations": [0.05, 6.5],
          "nextLoopTriggerID": "NextLoopTrigger",
          "endHoldTrigger": "EndHoldTrigger"
        }
      ],
      "modifiers": {
        //动态上下技能Info
        "Quest_AddSkillInfo": {
          "onAdded": [
            {
              "$type": "AddAvatarSkillInfo",
              "skillID": 10038
            }
          ],
          "onRemoved": [
            {
              "$type": "RemoveAvatarSkillInfo",
              "skillID": 10038
            }
          ]
        },
        //动态上下playmode
        "Quest_ChangePlayMode_Handler": {
          // "onAdded":
          //                [
          //                    {
          //                        "$type": "ChangePlayMode",
          //                        "muteRemoteAction": true,
          //                        "toPlayMode": "Sneak",
          //                    },
          //                ],
          //                "onRemoved":
          //                [
          //                    {
          //                        "$type": "ChangePlayMode",
          //                        "muteRemoteAction": true,
          //                        "toPlayMode": "Normal",
          //                    },
          //                ],
          "modifierMixins": [
            {
              "$type": "SwitchSkillIDMixin",
              "priority": "Quest",
              "skillIndex": 1,
              "skillID": 10038
            }
          ]
        },
        "Focus": {
          "onAdded": [
            {
              "$type": "AvatarEnterFocus",
              "cameraFollowLower": {
                "x": 0.8,
                "y": 0.2,
                "z": -2.5
              },
              "cameraFollowUpper": {
                "x": 0.5,
                "y": -0.2,
                "z": 0.0
              },
              "dragButtonName": "Skill2",
              "cameraFastFocusMode": false,
              "showCrosshair": false
            }
          ],
          "onRemoved": [
            {
              "$type": "AvatarExitFocus"
            }
          ]
        },
        "Charge": {
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Charge_Return",
              "target": "Self"
            }
          ],
          "thinkInterval": 8,
          "onThinkInterval": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Charge_Return",
              "target": "Self"
            }
          ],
          "onRemoved": [
            {
              "$type": "RemoveModifier",
              "modifierName": "Charge_Return",
              "target": "Self"
            }
          ]
        },
        "Charge_Return": {
          "duration": 3.5,
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_DUMMY_THROW_RANGE",
              "value": 3,
              "useLimitRange": true,
              "maxValue": 3,
              "minValue": 3
            },
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Ambor_Dummy_Line"
            }
          ],
          "thinkInterval": 0.1,
          "onThinkInterval": [
            {
              "$type": "AddGlobalValue",
              "key": "_DUMMY_THROW_RANGE",
              "value": 0.25,
              "useLimitRange": true,
              "maxValue": 8,
              "minValue": 3
            },
            {
              "$type": "SetGlobalValueToOverrideMap",
              "abilityFormula": "None",
              "isFromOwner": false,
              "globalValueKey": "_DUMMY_THROW_RANGE",
              "overrideMapKey": "DummyThrowSpeedUp"
            }
          ]
        },
        "Charge2": {
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Charge_Return2_Trigger",
              "target": "Self"
            }
          ],
          "onRemoved": [
            {
              "$type": "RemoveModifier",
              "modifierName": "Charge_Return2",
              "target": "Self"
            },
            {
              "$type": "RemoveModifier",
              "modifierName": "Charge_Return2_Trigger",
              "target": "Self"
            }
          ]
        },
        "Charge_Return2_Trigger": {
          "duration": 5,
          "thinkInterval": 4,
          "onThinkInterval": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Charge_Return2",
              "target": "Self"
            }
          ]
        },
        "Charge_Return2": {
          "onAdded": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Charge_Return2_Loop",
              "target": "Self"
            }
          ],
          "thinkInterval": 8,
          "onThinkInterval": [
            {
              "$type": "ApplyModifier",
              "modifierName": "Charge_Return2_Loop",
              "target": "Self"
            }
          ],
          "onRemoved": [
            {
              "$type": "RemoveModifier",
              "modifierName": "Charge_Return2_Loop",
              "target": "Self"
            }
          ]
        },
        "Charge_Return2_Loop": {
          "duration": 3.5,
          "onAdded": [
            {
              "$type": "AddGlobalValue",
              "key": "_DUMMY_THROW_RANGE",
              "value": 8,
              "useLimitRange": true,
              "maxValue": 8,
              "minValue": 8
            },
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Ambor_Dummy_Line"
            }
          ],
          "thinkInterval": 0.1,
          "onThinkInterval": [
            {
              "$type": "AddGlobalValue",
              "key": "_DUMMY_THROW_RANGE",
              "value": -0.25,
              "useLimitRange": true,
              "maxValue": 8,
              "minValue": 3
            },
            {
              "$type": "SetGlobalValueToOverrideMap",
              "abilityFormula": "None",
              "isFromOwner": false,
              "globalValueKey": "_DUMMY_THROW_RANGE",
              "overrideMapKey": "DummyThrowSpeedUp"
            }
          ]
        },
        //抛射豆子
        "ThrowBean_Trigger": {
          "onAdded": [
            {
              "$type": "AvatarSkillStart",
              "skillID": 10038
            },
            {
              "$type": "TriggerBullet",
              "bulletID": 70300124,
              "born": {
                "$type": "ConfigBornByTarget",
                "offset": {
                  "x": 0.0,
                  "y": 1.8,
                  "z": 0.1
                }
              }
            }
          ]
        }
      },
      "abilitySpecials": {
        "DummyThrowSpeedUp": 0
      }
    }
  },

  // Gadget_70300124  抛投使用的豆子
  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Gadget_Quest_Bean",
      //子弹碰撞Trigger
      "onAbilityStart": [
        {
          "$type": "FireAISoundEvent",
          "volume": 0
        },
        {
          "$type": "FireEffect",
          "effectPattern": "Eff_SceneObj_Bean_Bloom"
        },
        {
          "$type": "ApplyModifier",
          "modifierName": "Bean_Bloom_Strike"
        }
      ],
      "onAdded": [
        {
          "$type": "CopyGlobalValue",
          "srcTarget": "OriginOwner",
          "dstTarget": "Self",
          "srcKey": "_DUMMY_THROW_RANGE",
          "dstKey": "_DUMMY_THROW_RANGE"
        },
        {
          "$type": "SetGlobalValueToOverrideMap",
          "globalValueKey": "_DUMMY_THROW_RANGE",
          "overrideMapKey": "DummyThrowSpeedUp"
        },
        {
          "$type": "AttachModifier",
          "modifierName": "SpeedUP",
          "target": "Self"
        },
        {
          "$type": "AttachEffect",
          "effectPattern": "Eff_SceneObj_Bean_Bullet"
        }
      ],
      "modifiers": {
        "SpeedUP": {
          "properties": {
            "Animator_OverallSpeedRatio": "%DummyThrowSpeedUp*0.08-0.24"
          }
        },
        //爆炸时的攻击盒（两个攻击盒）
        "Bean_Bloom_Strike": {
          "duration": 0.5,
          "onAdded": [
            {
              //近距离命中攻击盒
              "$type": "TriggerAttackEvent",
              "targetType": "All",
              "attackEvent": {
                "attackPattern": {
                  "$type": "ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "radius": 1.5,
                  "born": {
                    "$type": "ConfigBornBySelf",
                    "offset": {
                      "x": 0.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  }
                },
                "attackInfo": {
                  "attackTag": "Quest_Bean_Hit",
                  "attackProperty": {
                    "damagePercentage": 0,
                    "elementType": "None",
                    "elementDurability": 0,
                    "enBreak": 0
                  }
                }
              }
            },
            {
              //远距离恐吓攻击盒
              "$type": "TriggerAttackEvent",
              "targetType": "All",
              "attackEvent": {
                "attackPattern": {
                  "$type": "ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "radius": 4.5,
                  "born": {
                    "$type": "ConfigBornBySelf",
                    "offset": {
                      "x": 0.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  }
                },
                "attackInfo": {
                  "attackTag": "Quest_Bean_Threat",
                  "attackProperty": {
                    "damagePercentage": 0,
                    "elementType": "None",
                    "elementDurability": 0,
                    "enBreak": 0
                  }
                }
              }
            },
            {
              "$type": "DebugLog",
              "content": "豆子攻击盒"
            }
          ]
        }
      },
      "abilitySpecials": {
        "DummyThrowSpeedUp": 0
      }
    }
  },
  ///////////////////////////////////////////////////////////////
  ///
  ///     Bartender_Activity
  ///
  //////////////////////////////////////////////////////////////

  {
    "Default": {
      "$type": "ConfigAbility",
      "abilityName": "Avatar_PlayerBoy_Bartender_FX_Test",
      "abilityMixins": [
        {
          "$type": "AttachToStateIDMixin", //桌上放着杯子
          "stateIDs": [
            "Bartender_Standby",
            "Bartender_PrepareStart",
            "Bartender_AddStandby",
            "Bartender_AddLoop",
            "Bartender_MixingStart",
            "Bartender_MixingStandby"
          ],
          "modifierName": "Bartender_FX_Origin_Cup"
        },
        ///把成品倒出的动画，前半段动画杯子在桌上（），后半段捡起杯子，切换挂接到角色身上
        {
          "$type": "AttachToNormalizedTimeMixin", //桌上放着杯子
          "stateID": "Bartender_MixingToPour",
          "modifierName": "Bartender_FX_Test1",
          "target": "Self",
          "normalizeEnd": 0.77
        },
        {
          "$type": "AttachToNormalizedTimeMixin", //捡起桌上的杯子
          "stateID": "Bartender_MixingToPour",
          "modifierName": "Bartender_FX_Test2",
          "target": "Self",
          "normalizeStart": 0.77
        },
        ////////////////////////

        {
          "$type": "AttachToNormalizedTimeMixin", //右手捡起桌上的杯子等着倒水，倒出成品的等待动画
          "stateID": "Bartender_PourStandby",
          "modifierName": "Bartender_FX_Test2",
          "target": "Self",
          "normalizeStart": 0,
          "normalizeEnd": 1
        },
        /////倒出成品时一直拿着倒的那个杯子
        {
          "$type": "AttachToStateIDMixin", //右手一直拿着杯子
          "stateIDs": ["Bartender_Pour", "Bartender_PourFinish"],
          "target": "Self",
          "modifierName": "Bartender_FX_Test3"
        },
        //加材料的时候左手挂接材料杯子
        {
          "$type": "AttachToStateIDMixin", //挂接加材料杯子
          "stateIDs": ["Bartender_AddLoop"],
          "target": "Self",
          "modifierName": "Bartender_FX_Add_Cup"
        },
        {
          "$type": "AttachToStateIDMixin", //挂接搅拌棍子
          "stateIDs": ["Bartender_MixingStandby"],
          "target": "Self",
          "modifierName": "Bartender_FX_Bar2"
        },
        {
          "$type": "AttachToNormalizedTimeMixin", //挂接搅拌棍子
          "stateID": "Bartender_MixingToPour",
          "modifierName": "Bartender_FX_Bar1",
          "target": "Self",
          "normalizeStart": 0,
          "normalizeEnd": 0.58
        },
        {
          "$type": "AttachToNormalizedTimeMixin", //挂接搅拌棍子
          "stateID": "Bartender_MixingStart",
          "modifierName": "Bartender_FX_Bar1",
          "target": "Self",
          "normalizeStart": 0.45,
          "normalizeEnd": 1
        },
        ////准备倒之前先把挂接杯子从左手脱离到桌子上
        {
          "$type": "AttachToNormalizedTimeMixin", //挂接成品杯子到左手
          "stateID": "Bartender_MixingToPour",
          "modifierName": "Bartender_FX_Finish_Cup1",
          "target": "Self",
          "normalizeStart": 0.69,
          "normalizeEnd": 0.92
        },
        {
          "$type": "AttachToNormalizedTimeMixin", //挂接成品杯子到root（脱手
          "stateID": "Bartender_MixingToPour",
          "modifierName": "Bartender_FX_Finish_Cup2",
          "target": "Self",
          "normalizeStart": 0.92,
          "normalizeEnd": 1
        },
        {
          "$type": "AttachToNormalizedTimeMixin", //成品杯子摆在桌上
          "stateID": "Bartender_PourStandby",
          "modifierName": "Bartender_FX_Finish_Cup2",
          "target": "Self"
        },
        {
          "$type": "AttachToNormalizedTimeMixin", //成品杯子摆在桌上
          "stateID": "Bartender_Pour",
          "modifierName": "Bartender_FX_Finish_Cup2",
          "target": "Self"
        },
        {
          "$type": "AttachToNormalizedTimeMixin", //成品杯子摆在桌上
          "stateID": "Bartender_PourFinish",
          "modifierName": "Bartender_FX_Finish_Cup2",
          "target": "Self",
          "normalizeStart": 0,
          "normalizeEnd": 0.18
        },
        {
          "$type": "AttachToNormalizedTimeMixin", //挂接成品杯子到左手然后推向玩家
          "stateID": "Bartender_PourFinish",
          "modifierName": "Bartender_FX_Finish_Cup3",
          "target": "Self",
          "normalizeStart": 0.18,
          "normalizeEnd": 0.47
        },
        {
          "$type": "AttachToNormalizedTimeMixin", //挂接成品杯子到左手然后推向玩家
          "stateID": "Bartender_PourFinish",
          "modifierName": "Bartender_FX_Finish_Cup4",
          "target": "Self",
          "normalizeStart": 0.47
        }
      ],
      "modifiers": {
        "Bartender_FX_Test1": {
          "stacking": "Multiple",
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Player_Bartender_FX_Test1"
            }
          ]
        },
        "Bartender_FX_Test2": {
          "stacking": "Multiple",
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Player_Bartender_FX_Test2"
            }
            // {
            // 	"$type": "DebugLog",
            // 	"content": "42",
            // 	"doOffStage": true,
            // },
          ]
        },
        "Bartender_FX_Test3": {
          "stacking": "Multiple",
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Player_Bartender_FX_Test2"
            }
          ]
        },
        "Bartender_FX_Origin_Cup": {
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Player_Bartender_FX_Origin_Cup"
              // "effectPattern": "Eff_Player_Bartender_FX_Test2",
            }
            // {
            // 	"$type": "DebugLog",
            // 	"content": "42",
            // 	"doOffStage": true,
            // },
          ]
        },
        "Bartender_FX_Bar1": {
          "stacking": "Multiple",
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Player_Bartender_FX_Bar"
            }
          ]
        },
        "Bartender_FX_Bar2": {
          "stacking": "Multiple",
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Player_Bartender_FX_Bar"
            }
          ]
        },
        "Bartender_FX_Finish_Cup1": {
          "stacking": "Multiple",
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Player_Bartender_FX_Finish_Cup1"
            }
          ]
        },
        "Bartender_FX_Finish_Cup2": {
          "stacking": "Multiple",
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Player_Bartender_FX_Finish_Cup2"
            }
          ]
        },
        "Bartender_FX_Finish_Cup3": {
          "stacking": "Multiple",
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Player_Bartender_FX_Finish_Cup3"
            }
          ]
        },
        "Bartender_FX_Finish_Cup4": {
          "stacking": "Multiple",
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Player_Bartender_FX_Finish_Cup4"
            }
          ]
        },
        "Bartender_FX_Add_Cup": {
          "stacking": "Multiple",
          "onAdded": [
            {
              "$type": "AttachEffect",
              "effectPattern": "Eff_Player_Bartender_FX_Add_Cup"
            }
          ]
        }
      }
    }
  }
]
